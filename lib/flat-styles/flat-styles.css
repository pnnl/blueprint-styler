@charset "UTF-8";

:root {
    property: null;
}

/**
 * Author: Kevin Weber
 *
 * Follow me: @kevinweber (https://twitter.com/kevinweber)
 * Website: http://kevinw.de
 *
 * License: CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/)
 */
:root {
    property: null;
}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
    line-height: 1.15;
  /* 1 */
    -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
    margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
    display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
    font-size: 2em;
    margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
    box-sizing: content-box;
  /* 1 */
    height: 0;
  /* 1 */
    overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
    font-family: monospace, monospace;
  /* 1 */
    font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
    background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
    border-bottom: none;
  /* 1 */
    text-decoration: underline;
  /* 2 */
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
    font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
    font-family: monospace, monospace;
  /* 1 */
    font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
    font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sub {
    bottom: -0.25em;
}

sup {
    top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
    border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
    font-family: inherit;
  /* 1 */
    font-size: 100%;
  /* 1 */
    line-height: 1.15;
  /* 1 */
    margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
    overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
    text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
    -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
    padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
    box-sizing: border-box;
  /* 1 */
    color: inherit;
  /* 2 */
    display: table;
  /* 1 */
    max-width: 100%;
  /* 1 */
    padding: 0;
  /* 3 */
    white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
    vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
    overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
    box-sizing: border-box;
  /* 1 */
    padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
    height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
    -webkit-appearance: textfield;
  /* 1 */
    outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
    -webkit-appearance: button;
  /* 1 */
    font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
    display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
    display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
    display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
    display: none;
}

/**
 * Author: Kevin Weber
 *
 * Follow me: @kevinweber (https://twitter.com/kevinweber)
 * Website: http://kevinw.de
 *
 * License: CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/)
 */
:root {
  /*! ColorsHsl */
    --grayscale-hue: 204;
    --black-hsl: var(--grayscale-hue), 24%,   8%;
    --dark-gray1-hsl: var(--grayscale-hue), 23%,  12%;
    --dark-gray2-hsl: var(--grayscale-hue), 23%,  16%;
    --dark-gray3-hsl: var(--grayscale-hue), 23%,  21%;
    --dark-gray4-hsl: var(--grayscale-hue), 23%,  25%;
    --dark-gray5-hsl: var(--grayscale-hue), 22%,  29%;
    --gray1-hsl: var(--grayscale-hue), 16%,  43%;
    --gray2-hsl: var(--grayscale-hue), 13%,  52%;
    --gray3-hsl: var(--grayscale-hue), 15%,  60%;
    --gray4-hsl: var(--grayscale-hue), 18%,  71%;
    --gray5-hsl: var(--grayscale-hue), 22%,  79%;
    --light-gray1-hsl: var(--grayscale-hue), 22%,  84%;
    --light-gray2-hsl: var(--grayscale-hue), 26%,  88%;
    --light-gray3-hsl: var(--grayscale-hue), 25%,  91%;
    --light-gray4-hsl: var(--grayscale-hue), 33%,  94%;
    --light-gray5-hsl: var(--grayscale-hue), 33%,  97%;
    --white-hsl: var(--grayscale-hue),  0%, 100%;
    --vermilion-hue: 12;
    --vermilion1-hsl: var(--vermilion-hue), 84%, 34%;
    --vermilion2-hsl: var(--vermilion-hue), 83%, 39%;
    --vermilion3-hsl: var(--vermilion-hue), 83%, 45%;
    --vermilion4-hsl: var(--vermilion-hue), 83%, 55%;
    --vermilion5-hsl: var(--vermilion-hue), 100%, 65%;
    --red-hue: 0;
    --red1-hsl: var(--red-hue), 60%, 41%;
    --red2-hsl: var(--red-hue), 60%, 47%;
    --red3-hsl: var(--red-hue), 69%, 54%;
    --red4-hsl: var(--red-hue), 89%, 65%;
    --red5-hsl: var(--red-hue), 100%, 73%;
    --rose-hue: 337;
    --rose1-hsl: var(--rose-hue), 66%, 40%;
    --rose2-hsl: var(--rose-hue), 67%, 46%;
    --rose3-hsl: var(--rose-hue), 71%, 52%;
    --rose4-hsl: var(--rose-hue), 90%, 62%;
    --rose5-hsl: var(--rose-hue), 100%, 70%;
    --violet-hue: 300;
    --violet1-hsl: var(--violet-hue), 43%, 25%;
    --violet2-hsl: var(--violet-hue), 43%, 32%;
    --violet3-hsl: var(--violet-hue), 43%, 39%;
    --violet4-hsl: var(--violet-hue), 33%, 49%;
    --violet5-hsl: var(--violet-hue), 39%, 61%;
    --indigo-hue: 252;
    --indigo1-hsl: var(--indigo-hue), 43%, 45%;
    --indigo2-hsl: var(--indigo-hue), 47%, 53%;
    --indigo3-hsl: var(--indigo-hue), 63%, 60%;
    --indigo4-hsl: var(--indigo-hue), 82%, 71%;
    --indigo5-hsl: var(--indigo-hue), 100%, 80%;
    --cobalt-hue: 218;
    --cobalt1-hsl: var(--cobalt-hue), 66%, 36%;
    --cobalt2-hsl: var(--cobalt-hue), 67%, 42%;
    --cobalt3-hsl: var(--cobalt-hue), 67%, 48%;
    --cobalt4-hsl: var(--cobalt-hue), 76%, 59%;
    --cobalt5-hsl: var(--cobalt-hue), 100%, 70%;
    --blue-hue: 203;
    --blue1-hsl: var(--blue-hue), 82%, 30%;
    --blue2-hsl: var(--blue-hue), 82%, 35%;
    --blue3-hsl: var(--blue-hue), 82%, 41%;
    --blue4-hsl: var(--blue-hue), 68%, 50%;
    --blue5-hsl: var(--blue-hue), 85%, 61%;
    --turquoise-hue: 175;
    --turquoise1-hsl: var(--turquoise-hue), 100%, 25%;
    --turquoise2-hsl: var(--turquoise-hue), 100%, 30%;
    --turquoise3-hsl: var(--turquoise-hue), 100%, 35%;
    --turquoise4-hsl: var(--turquoise-hue), 82%, 44%;
    --turquoise5-hsl: var(--turquoise-hue), 79%, 54%;
    --green-hue: 155;
    --green1-hsl: var(--green-hue), 82%, 22%;
    --green2-hsl: var(--green-hue), 82%, 28%;
    --green3-hsl: var(--green-hue), 82%, 33%;
    --green4-hsl: var(--green-hue), 79%, 39%;
    --green5-hsl: var(--green-hue), 58%, 52%;
    --forest-hue: 125;
    --forest1-hsl: var(--forest-hue), 60%, 28%;
    --forest2-hsl: var(--forest-hue), 60%, 34%;
    --forest3-hsl: var(--forest-hue), 60%, 41%;
    --forest4-hsl: var(--forest-hue), 49%, 51%;
    --forest5-hsl: var(--forest-hue), 61%, 62%;
    --lime-hue: 75;
    --lime1-hsl: var(--lime-hue), 60%, 34%;
    --lime2-hsl: var(--lime-hue), 60%, 41%;
    --lime3-hsl: var(--lime-hue), 60%, 47%;
    --lime4-hsl: var(--lime-hue), 65%, 57%;
    --lime5-hsl: var(--lime-hue), 84%, 69%;
    --gold-hue: 43;
    --gold1-hsl: var(--gold-hue), 91%, 34%;
    --gold2-hsl: var(--gold-hue), 90%, 39%;
    --gold3-hsl: var(--gold-hue), 90%, 45%;
    --gold4-hsl: var(--gold-hue), 89%, 55%;
    --gold5-hsl: var(--gold-hue), 100%, 63%;
    --orange-hue: 30;
    --orange1-hsl: var(--orange-hue), 67%, 39%;
    --orange2-hsl: var(--orange-hue), 67%, 45%;
    --orange3-hsl: var(--orange-hue), 70%, 51%;
    --orange4-hsl: var(--orange-hue), 87%, 62%;
    --orange5-hsl: var(--orange-hue), 100%, 70%;
    --sepia-hue: 30;
    --sepia1-hsl: var(--sepia-hue), 53%, 25%;
    --sepia2-hsl: var(--sepia-hue), 54%, 32%;
    --sepia3-hsl: var(--sepia-hue), 54%, 38%;
    --sepia4-hsl: var(--sepia-hue), 43%, 48%;
    --sepia5-hsl: var(--sepia-hue), 48%, 59%;
  /*! Colors */
    --black: hsl(var(--black-hsl));
    --dark-gray1: hsl(var(--dark-gray1-hsl));
    --dark-gray2: hsl(var(--dark-gray2-hsl));
    --dark-gray3: hsl(var(--dark-gray3-hsl));
    --dark-gray4: hsl(var(--dark-gray4-hsl));
    --dark-gray5: hsl(var(--dark-gray5-hsl));
    --gray1: hsl(var(--gray1-hsl));
    --gray2: hsl(var(--gray2-hsl));
    --gray3: hsl(var(--gray3-hsl));
    --gray4: hsl(var(--gray4-hsl));
    --gray5: hsl(var(--gray5-hsl));
    --light-gray1: hsl(var(--light-gray1-hsl));
    --light-gray2: hsl(var(--light-gray2-hsl));
    --light-gray3: hsl(var(--light-gray3-hsl));
    --light-gray4: hsl(var(--light-gray4-hsl));
    --light-gray5: hsl(var(--light-gray5-hsl));
    --white: hsl(var(--white-hsl));
    --vermilion1: hsl(var(--vermilion1-hsl));
    --vermilion2: hsl(var(--vermilion2-hsl));
    --vermilion3: hsl(var(--vermilion3-hsl));
    --vermilion4: hsl(var(--vermilion4-hsl));
    --vermilion5: hsl(var(--vermilion5-hsl));
    --red1: hsl(var(--red1-hsl));
    --red2: hsl(var(--red2-hsl));
    --red3: hsl(var(--red3-hsl));
    --red4: hsl(var(--red4-hsl));
    --red5: hsl(var(--red5-hsl));
    --rose1: hsl(var(--rose1-hsl));
    --rose2: hsl(var(--rose2-hsl));
    --rose3: hsl(var(--rose3-hsl));
    --rose4: hsl(var(--rose4-hsl));
    --rose5: hsl(var(--rose5-hsl));
    --violet1: hsl(var(--violet1-hsl));
    --violet2: hsl(var(--violet2-hsl));
    --violet3: hsl(var(--violet3-hsl));
    --violet4: hsl(var(--violet4-hsl));
    --violet5: hsl(var(--violet5-hsl));
    --indigo1: hsl(var(--indigo1-hsl));
    --indigo2: hsl(var(--indigo2-hsl));
    --indigo3: hsl(var(--indigo3-hsl));
    --indigo4: hsl(var(--indigo4-hsl));
    --indigo5: hsl(var(--indigo5-hsl));
    --cobalt1: hsl(var(--cobalt1-hsl));
    --cobalt2: hsl(var(--cobalt2-hsl));
    --cobalt3: hsl(var(--cobalt3-hsl));
    --cobalt4: hsl(var(--cobalt4-hsl));
    --cobalt5: hsl(var(--cobalt5-hsl));
    --blue1: hsl(var(--blue1-hsl));
    --blue2: hsl(var(--blue2-hsl));
    --blue3: hsl(var(--blue3-hsl));
    --blue4: hsl(var(--blue4-hsl));
    --blue5: hsl(var(--blue5-hsl));
    --turquoise1: hsl(var(--turquoise1-hsl));
    --turquoise2: hsl(var(--turquoise2-hsl));
    --turquoise3: hsl(var(--turquoise3-hsl));
    --turquoise4: hsl(var(--turquoise4-hsl));
    --turquoise5: hsl(var(--turquoise5-hsl));
    --green1: hsl(var(--green1-hsl));
    --green2: hsl(var(--green2-hsl));
    --green3: hsl(var(--green3-hsl));
    --green4: hsl(var(--green4-hsl));
    --green5: hsl(var(--green5-hsl));
    --forest1: hsl(var(--forest1-hsl));
    --forest2: hsl(var(--forest2-hsl));
    --forest3: hsl(var(--forest3-hsl));
    --forest4: hsl(var(--forest4-hsl));
    --forest5: hsl(var(--forest5-hsl));
    --lime1: hsl(var(--lime1-hsl));
    --lime2: hsl(var(--lime2-hsl));
    --lime3: hsl(var(--lime3-hsl));
    --lime4: hsl(var(--lime4-hsl));
    --lime5: hsl(var(--lime5-hsl));
    --gold1: hsl(var(--gold1-hsl));
    --gold2: hsl(var(--gold2-hsl));
    --gold3: hsl(var(--gold3-hsl));
    --gold4: hsl(var(--gold4-hsl));
    --gold5: hsl(var(--gold5-hsl));
    --orange1: hsl(var(--orange1-hsl));
    --orange2: hsl(var(--orange2-hsl));
    --orange3: hsl(var(--orange3-hsl));
    --orange4: hsl(var(--orange4-hsl));
    --orange5: hsl(var(--orange5-hsl));
    --sepia1: hsl(var(--sepia1-hsl));
    --sepia2: hsl(var(--sepia2-hsl));
    --sepia3: hsl(var(--sepia3-hsl));
    --sepia4: hsl(var(--sepia4-hsl));
    --sepia5: hsl(var(--sepia5-hsl));
}

:root {
  /*! IntentColors */
    --pt-intent-primary-hue: var(--blue-hue);
    --pt-intent-primary-hsl: var(--blue3-hsl);
    --pt-intent-primary-hover-hsl: var(--blue2-hsl);
    --pt-intent-primary-active-hsl: var(--blue1-hsl);
    --pt-intent-primary-text-color-hsl: var(--blue2-hsl);
    --pt-dark-intent-primary-text-color-hsl: var(--blue5-hsl);
    --pt-intent-success-hue: var(--green-hue);
    --pt-intent-success-hsl: var(--green3-hsl);
    --pt-intent-success-hover-hsl: var(--green2-hsl);
    --pt-intent-success-active-hsl: var(--green1-hsl);
    --pt-intent-success-text-color-hsl: var(--green2-hsl);
    --pt-dark-intent-success-text-color-hsl: var(--green5-hsl);
    --pt-intent-warning-hue: var(--orange-hue);
    --pt-intent-warning-hsl: var(--orange3-hsl);
    --pt-intent-warning-hover-hsl: var(--orange2-hsl);
    --pt-intent-warning-active-hsl: var(--orange1-hsl);
    --pt-intent-warning-text-color-hsl: var(--orange2-hsl);
    --pt-dark-intent-warning-text-color-hsl: var(--orange5-hsl);
    --pt-intent-danger-hue: var(--red-hue);
    --pt-intent-danger-hsl: var(--red3-hsl);
    --pt-intent-danger-hover-hsl: var(--red2-hsl);
    --pt-intent-danger-active-hsl: var(--red1-hsl);
    --pt-intent-danger-text-color-hsl: var(--red2-hsl);
    --pt-dark-intent-danger-text-color-hsl: var(--red5-hsl);
    --pt-intent-primary: hsl(var(--pt-intent-primary-hsl));
    --pt-intent-primary-hover: hsl(var(--pt-intent-primary-hover-hsl));
    --pt-intent-primary-active: hsl(var(--pt-intent-primary-active-hsl));
    --pt-intent-primary-text-color: hsl(var(--pt-intent-primary-text-color-hsl));
    --pt-dark-intent-primary-text-color: hsl(var(--pt-dark-intent-primary-text-color-hsl));
    --pt-intent-success: hsl(var(--pt-intent-success-hsl));
    --pt-intent-success-hover: hsl(var(--pt-intent-success-hover-hsl));
    --pt-intent-success-active: hsl(var(--pt-intent-success-active-hsl));
    --pt-intent-success-text-color: hsl(var(--pt-intent-success-text-color-hsl));
    --pt-dark-intent-success-text-color: hsl(var(--pt-dark-intent-success-text-color-hsl));
    --pt-intent-warning: hsl(var(--pt-intent-warning-hsl));
    --pt-intent-warning-hover: hsl(var(--pt-intent-warning-hover-hsl));
    --pt-intent-warning-active: hsl(var(--pt-intent-warning-active-hsl));
    --pt-intent-warning-text-color: hsl(var(--pt-intent-warning-text-color-hsl));
    --pt-dark-intent-warning-text-color: hsl(var(--pt-dark-intent-warning-text-color-hsl));
    --pt-intent-danger: hsl(var(--pt-intent-danger-hsl));
    --pt-intent-danger-hover: hsl(var(--pt-intent-danger-hover-hsl));
    --pt-intent-danger-active: hsl(var(--pt-intent-danger-active-hsl));
    --pt-intent-danger-text-color: hsl(var(--pt-intent-danger-text-color-hsl));
    --pt-dark-intent-danger-text-color: hsl(var(--pt-dark-intent-danger-text-color-hsl));
  /*! LayoutColors */
    --pt-app-background-color: var(--light-gray5);
    --pt-dark-app-background-color: var(--dark-gray3);
    --pt-app-top-background-color: var(--white);
    --pt-dark-app-top-background-color: var(--dark-gray4);
    --pt-code-background-color: hsla(var(--white-hsl), 0.7);
    --pt-dark-code-background-color: hsla(var(--black-hsl), 0.3);
    --pt-divider-black: hsla(var(--black-hsl), 0.15);
    --pt-dark-divider-black: hsla(var(--black-hsl), 0.4);
    --pt-dark-divider-white: hsla(var(--white-hsl), 0.15);
    --pt-outline-color: hsla(var(--pt-intent-primary-hsl), 0.6);
    --pt-disabled-opacity: 0.3;
  /*! TextColors */
    --pt-text-color: var(--dark-gray1);
    --pt-text-color-muted: var(--gray1);
    --pt-text-color-disabled: hsla(var(--black-hsl), var(--pt-disabled-opacity));
    --pt-heading-color: var(--pt-text-color);
    --pt-link-color: var(--pt-intent-primary-text-color);
    --pt-dark-text-color: var(--light-gray5);
    --pt-dark-text-color-muted: var(--gray4);
    --pt-dark-text-color-disabled: hsla(var(--white-hsl), var(--pt-disabled-opacity));
    --pt-dark-heading-color: var(--pt-dark-text-color);
    --pt-dark-link-color: var(--pt-dark-intent-primary-text-color);
    --pt-text-selection-color: hsla(var(--blue-hue), 100%, 75%, 0.6);
    --pt-code-text-color: var(--pt-text-color-muted);
    --pt-dark-code-text-color: var(--pt-dark-text-color-muted);
  /*! IconColors */
    --pt-icon-color: var(--pt-text-color-muted);
    --pt-icon-color-hover: var(--pt-text-color);
    --pt-icon-color-disabled: var(--pt-text-color-disabled);
    --pt-icon-color-selected: var(--pt-intent-primary);
    --pt-dark-icon-color: var(--pt-dark-text-color-muted);
    --pt-dark-icon-color-hover: var(--pt-dark-text-color);
    --pt-dark-icon-color-disabled: var(--pt-dark-text-color-disabled);
    --pt-dark-icon-color-selected: var(--pt-intent-primary);
}

:root {
  /*! Variables */
  /* easily the most important variable, so it comes up top
(so other variables can use it to define themselves) */
  /* --pt-grid-size: 10px; */
  /* see https://bitsofco.de/the-new-system-font-stack/ */
    --pt-font-family: -apple-system,
  "BlinkMacSystemFont",
  "Segoe UI",
  "Roboto",
  "Oxygen",
  "Ubuntu",
  "Cantarell",
  "Open Sans",
  "Helvetica Neue",
  "Icons16",
  sans-serif;
    --pt-font-family-monospace: Consolas,
  Menlo,
  monospace;
    --pt-border-radius: 3px;
  /* --pt-font-size: $pt-grid-size * 1.4; */
  /* --pt-font-size-large: $pt-grid-size * 1.6; */
  /* --pt-font-size-small: $pt-grid-size * 1.2; */
  /* a little bit extra to ensure the height comes out to just over 18px (and browser rounds to 18px) */
  /* --pt-line-height: ($pt-grid-size * 1.8) / $pt-font-size + 0.0001; */
  /* Icon variables */
  /* --icons16-family: "Icons16"; */
  /* --icons20-family: "Icons20"; */
    --pt-icon-size-standard: 16px;
    --pt-icon-size-large: 20px;
  /* Grids & dimensions */
  /* Buttons */
  /* --pt-button-height: $pt-grid-size * 3; */
  /* --pt-button-height-small: $pt-grid-size * 2.4; */
  /* --pt-button-height-smaller: $pt-grid-size * 2; */
  /* --pt-button-height-large: $pt-grid-size * 4; */
  /* Inputs */
  /* --pt-input-height: $pt-grid-size * 3; */
  /* --pt-input-height-large: $pt-grid-size * 4; */
  /* --pt-input-height-small: $pt-grid-size * 2.4; */
  /* Others */
  /* --pt-navbar-height: $pt-grid-size * 5; */
  /* Z-indices */
  /* --pt-z-index-base: 0; */
  /* --pt-z-index-content: $pt-z-index-base + 10; */
  /* --pt-z-index-overlay: $pt-z-index-content + 10; */
  /* Shadow opacities */
    --pt-border-shadow-opacity: 0.1;
    --pt-drop-shadow-opacity: 0.2;
    --pt-dark-border-shadow-opacity: 0.2;
  /* $pt-border-shadow-opacity * 2;*/
    --pt-dark-drop-shadow-opacity: 0.4;
  /* $pt-drop-shadow-opacity * 2;*/
    --pt-shadow-color-hsl: var(--black-hsl);
    --pt-dark-shadow-color-hsl: var(--black-hsl);
  /* Elevations */
  /* all shadow lists must be the same length to avoid flicker in transitions. */
    --pt-elevation-shadow-0: 0 0 0 1px var(--pt-divider-black),
  0 0 0 hsla(var(--pt-shadow-color-hsl), 0),
  0 0 0 hsla(var(--pt-shadow-color-hsl), 0);
    --pt-elevation-shadow-1: 0 0 0 1px hsla(var(--pt-shadow-color-hsl), var(--pt-border-shadow-opacity)),
  0 0 0 hsla(var(--pt-shadow-color-hsl), 0),
  0 1px 1px hsla(var(--pt-shadow-color-hsl), var(--pt-drop-shadow-opacity));
    --pt-elevation-shadow-2: 0 0 0 1px hsla(var(--pt-shadow-color-hsl), var(--pt-border-shadow-opacity)),
  0 1px 1px hsla(var(--pt-shadow-color-hsl), var(--pt-drop-shadow-opacity)),
  0 2px 6px hsla(var(--pt-shadow-color-hsl), var(--pt-drop-shadow-opacity));
    --pt-elevation-shadow-3: 0 0 0 1px hsla(var(--pt-shadow-color-hsl), var(--pt-border-shadow-opacity)),
  0 2px 4px hsla(var(--pt-shadow-color-hsl), var(--pt-drop-shadow-opacity)),
  0 8px 24px hsla(var(--pt-shadow-color-hsl), var(--pt-drop-shadow-opacity));
    --pt-elevation-shadow-4: 0 0 0 1px hsla(var(--pt-shadow-color-hsl), var(--pt-border-shadow-opacity)),
  0 4px 8px hsla(var(--pt-shadow-color-hsl), var(--pt-drop-shadow-opacity)),
  0 18px 46px 6px hsla(var(--pt-shadow-color-hsl), var(--pt-drop-shadow-opacity));
    --pt-dark-elevation-shadow-0: 0 0 0 1px var(--pt-dark-divider-black),
  0 0 0 hsla(var(--pt-dark-shadow-color-hsl), 0),
  0 0 0 hsla(var(--pt-dark-shadow-color-hsl), 0);
    --pt-dark-elevation-shadow-1: 0 0 0 1px hsla(var(--pt-dark-shadow-color-hsl), var(--pt-dark-border-shadow-opacity)),
  0 0 0 hsla(var(--pt-dark-shadow-color-hsl), 0),
  0 1px 1px hsla(var(--pt-dark-shadow-color-hsl), var(--pt-dark-drop-shadow-opacity));
    --pt-dark-elevation-shadow-2: 0 0 0 1px hsla(var(--pt-dark-shadow-color-hsl), var(--pt-dark-border-shadow-opacity)),
  0 1px 1px hsla(var(--pt-dark-shadow-color-hsl), var(--pt-dark-drop-shadow-opacity)),
  0 2px 6px hsla(var(--pt-dark-shadow-color-hsl), var(--pt-dark-drop-shadow-opacity));
    --pt-dark-elevation-shadow-3: 0 0 0 1px hsla(var(--pt-dark-shadow-color-hsl), var(--pt-dark-border-shadow-opacity)),
  0 2px 4px hsla(var(--pt-dark-shadow-color-hsl), var(--pt-dark-drop-shadow-opacity)),
  0 8px 24px hsla(var(--pt-dark-shadow-color-hsl), var(--pt-dark-drop-shadow-opacity));
    --pt-dark-elevation-shadow-4: 0 0 0 1px hsla(var(--pt-dark-shadow-color-hsl), var(--pt-dark-border-shadow-opacity)),
  0 4px 8px hsla(var(--pt-dark-shadow-color-hsl), var(--pt-dark-drop-shadow-opacity)),
  0 18px 46px 6px hsla(var(--pt-dark-shadow-color-hsl), var(--pt-dark-drop-shadow-opacity));
  /* Transitions */
    --pt-transition-ease: cubic-bezier(0.4, 1, 0.75, 0.9);
    --pt-transition-ease-bounce: cubic-bezier(0.54, 1.12, 0.38, 1.11);
  /* Light theme styles */
    --pt-input-box-shadow: inset 0 0 0 1px hsla(var(--pt-dark-shadow-color-hsl), 0.15),
  inset 0 1px 1px hsla(var(--black-hsl), var(--pt-drop-shadow-opacity));
    --pt-dialog-box-shadow: var(--pt-elevation-shadow-4);
    --pt-popover-box-shadow: var(--pt-elevation-shadow-3);
    --pt-tooltip-box-shadow: var(--pt-popover-box-shadow);
  /* Dark theme styles */
    --pt-dark-input-box-shadow: inset 0 0 0 1px hsla(var(--pt-dark-shadow-color-hsl), 0.3),
  inset 0 1px 1px hsla(var(--pt-dark-shadow-color-hsl), var(--pt-dark-drop-shadow-opacity));
    --pt-dark-dialog-box-shadow: var(--pt-dark-elevation-shadow-4);
    --pt-dark-popover-box-shadow: var(--pt-dark-elevation-shadow-3);
    --pt-dark-tooltip-box-shadow: var(--pt-dark-popover-box-shadow);
}

:root {
  /*! Components */
    --button-border-width: 1px;
  /* --button-padding:            calc(var(--pt-grid-size) / 2) var(var(--pt-grid-size)); */
  /* --button-padding-small:      0 calc(var(--pt-grid-size) * 0.7); */
  /* --button-padding-large:      calc(var(--pt-grid-size) / 2) (var(--pt-grid-size) * 1.5); */
  /* --button-icon-spacing:       calc(var(--pt-button-height) - var(--pt-icon-size-standard)) / 2; */
  /* --button-icon-spacing-large: calc(var(--pt-button-height-large) - var(--pt-icon-size-large)) / 2; */
  /*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
    --button-box-shadow: inset 0 0 0 var(--button-border-width) hsla(var(--pt-shadow-color-hsl), 0.2),
  inset 0 var(--button-border-width) 0 hsla(var(--pt-shadow-color-hsl), 0.1);
    --button-box-shadow-active: inset 0 0 0 var(--button-border-width) hsla(var(--pt-shadow-color-hsl), 0.2),
  inset 0 1px 2px hsla(var(--pt-shadow-color-hsl), 0.2);
    --button-intent-box-shadow: inset 0 0 0 var(--button-border-width) hsla(var(--pt-shadow-color-hsl), 0.4),
  inset 0 var(--button-border-width) 0 hsla(var(--pt-shadow-color-hsl), 0.2);
    --button-intent-box-shadow-active: inset 0 0 0 var(--button-border-width) hsla(var(--pt-shadow-color-hsl), 0.4),
  inset 0 1px 2px hsla(var(--pt-shadow-color-hsl), 0.2);
  /*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
    --button-box-shadow-overlay: 0 0 0 var(--button-border-width) hsla(var(--pt-shadow-color-hsl), 0.2),
  0 1px 1px hsla(var(--pt-shadow-color-hsl), 0.2);
    --button-box-shadow-overlay-active: 0 0 0 var(--button-border-width) hsla(var(--pt-shadow-color-hsl), 0.2),
  inset 0 1px 1px hsla(var(--pt-shadow-color-hsl), 0.1);
    --dark-button-box-shadow: 0 0 0 var(--button-border-width) hsla(var(--pt-dark-shadow-color-hsl), 0.4);
    --dark-button-box-shadow-active: 0 0 0 var(--button-border-width) hsla(var(--pt-dark-shadow-color-hsl), 0.6),
  inset 0 1px 2px hsla(var(--pt-dark-shadow-color-hsl), 0.2);
    --dark-button-intent-box-shadow: 0 0 0 var(--button-border-width) hsla(var(--pt-dark-shadow-color-hsl), 0.4);
    --dark-button-intent-box-shadow-active: 0 0 0 var(--button-border-width) hsla(var(--pt-dark-shadow-color-hsl), 0.4),
  inset 0 1px 2px hsla(var(--pt-dark-shadow-color-hsl), 0.2);
    --shine-color-hsl: var(--white-hsl);
    --shine-opacity: 0.8;
    --shine-intent-color-hsl: var(--shine-color-hsl);
    --shine-intent-opacity: 0.1;
    --dark-shine-color-hsl: var(--shine-color-hsl);
    --dark-shine-opacity: 0.05;
    --button-gradient: linear-gradient(to bottom, hsla(var(--shine-color-hsl),        var(--shine-opacity)),        hsla(var(--shine-color-hsl),        0));
    --button-intent-gradient: linear-gradient(to bottom, hsla(var(--shine-intent-color-hsl), var(--shine-intent-opacity)), hsla(var(--shine-intent-color-hsl), 0));
    --dark-button-gradient: linear-gradient(to bottom, hsla(var(--dark-shine-color-hsl),   var(--dark-shine-opacity)),   hsla(var(--dark-shine-color-hsl),   0));
    --button-color-disabled: var(--pt-text-color-disabled);
    --button-background-color: var(--light-gray5);
    --button-background-color-hover: var(--light-gray4);
    --button-background-color-active: var(--light-gray2);
    --button-background-color-disabled: hsla(var(--light-gray1-hsl), 0.5);
    --button-background-color-active-disabled: hsla(var(--light-gray1-hsl), 0.7);
    --button-intent-color-disabled: hsla(var(--white-hsl), 0.6);
    --dark-button-color-disabled: var(--pt-dark-text-color-disabled);
    --dark-button-background-color: var(--dark-gray5);
    --dark-button-background-color-hover: var(--dark-gray4);
    --dark-button-background-color-active: var(--dark-gray2);
    --dark-button-background-color-disabled: hsla(var(--dark-gray5-hsl), 0.5);
    --dark-button-background-color-active-disabled: hsla(var(--dark-gray5-hsl), 0.7);
    --dark-button-intent-color-disabled: hsla(var(--white-hsl), 0.3);
    --minimal-button-background-opacity: 0.3;
    --minimal-button-divider-width: 1px;
    --minimal-button-background-color: none;
    --minimal-button-background-color-hover: hsla(var(--gray4-hsl), var(--minimal-button-background-opacity));
    --minimal-button-background-color-active: hsla(var(--gray2-hsl), var(--minimal-button-background-opacity));
    --dark-minimal-button-background-color: none;
    --dark-minimal-button-background-color-hover: hsla(var(--gray5-hsl), var(--minimal-button-background-opacity));
    --dark-minimal-button-background-color-active: hsla(var(--gray3-hsl), var(--minimal-button-background-opacity));
    --button-outlined-width: 1px;
    --button-outlined-border-intent-opacity: 0.6;
    --button-outlined-border-disabled-intent-opacity: 0.2;
}

/* usage:
@each $intent, $color in $pt-intent-text-colors {
  $color-hsl: nth(map-get($button-intents, $intent), 4);
}
*/
:root {
  /*! Components */
    --card-background-color: var(--pt-app-top-background-color);
    --dark-card-background-color: var(--pt-dark-app-top-background-color);
}

:root {
  /*! Components */
}

:root {
  /*! Components */
    --dialog-border-radius: calc(var(--pt-border-radius) * 2);
    --step-radius: calc(var(--pt-border-radius) * 2);
}

:root {
  /*! Components */
}

:root {
  /*! Components */
    --drawer-background-color: var(--pt-app-top-background-color);
    --dark-drawer-background-color: var(--pt-dark-app-top-background-color);
}

:root {
  /*! Components */
    --input-color: var(--pt-text-color);
    --input-color-disabled: var(--button-color-disabled);
    --input-placeholder-color: var(--pt-text-color-disabled);
    --input-background-color: var(--pt-app-top-background-color);
    --input-background-color-disabled: hsla(var(--light-gray1-hsl), 0.5);
    --input-shadow-color-focus: var(--pt-intent-primary);
    --input-shadow-color-focus-hsl: var(--pt-intent-primary-hsl);
    --dark-input-color: var(--pt-dark-text-color);
    --dark-input-color-disabled: var(--dark-button-color-disabled);
    --dark-input-placeholder-color: var(--pt-dark-text-color-disabled);
    --dark-input-background-color: hsla(var(--black-hsl), 0.3);
    --dark-input-background-color-disabled: hsla(var(--dark-gray5-hsl), 0.5);
    --dark-input-shadow-color-focus: var(--pt-intent-primary);
    --dark-input-shadow-color-focus-hsl: var(--pt-intent-primary-hsl);
    --input-box-shadow-focus: inset 0 1px 1px hsla(var(--pt-shadow-color-hsl), var(--pt-drop-shadow-opacity));
}

:root {
  /*! Components */
    --control-background-color: var(--button-background-color);
    --control-background-color-hover: var(--button-background-color-hover);
    --control-background-color-active: var(--button-background-color-active);
    --dark-control-background-color: var(--dark-button-background-color);
    --dark-control-background-color-hover: var(--dark-button-background-color-hover);
    --dark-control-background-color-active: var(--dark-button-background-color-active);
    --control-checked-background-color: var(--pt-intent-primary);
    --control-checked-background-color-hover: var(--pt-intent-primary-hover);
    --control-checked-background-color-active: var(--pt-intent-primary-active);
    --control-checked-background-color-hsl: var(--pt-intent-primary-hsl);
    --control-checked-background-color-hover-hsl: var(--pt-intent-primary-hover-hsl);
    --control-checked-background-color-active-hsl: var(--pt-intent-primary-active-hsl);
    --switch-background-color: hsla(var(--gray4-hsl), 0.5);
    --switch-background-color-hover: hsla(var(--gray2-hsl), 0.5);
    --switch-background-color-active: hsla(var(--gray1-hsl), 0.5);
    --switch-background-color-disabled: var(--button-background-color-disabled);
    --switch-checked-background-color: var(--control-checked-background-color);
    --switch-checked-background-color-hover: var(--control-checked-background-color-hover);
    --switch-checked-background-color-active: var(--control-checked-background-color-active);
    --switch-checked-background-color-disabled: hsla(var(--control-checked-background-color-hsl), 0.5);
    --dark-switch-background-color: hsla(var(--black-hsl), 0.5);
    --dark-switch-background-color-hover: hsla(var(--black-hsl), 0.7);
    --dark-switch-background-color-active: hsla(var(--black-hsl), 0.9);
    --dark-switch-background-color-disabled: var(--dark-button-background-color-disabled);
    --dark-switch-checked-background-color: var(--control-checked-background-color);
    --dark-switch-checked-background-color-hover: var(--control-checked-background-color-hover);
    --dark-switch-checked-background-color-active: var(--control-checked-background-color-active);
    --dark-switch-checked-background-color-disabled: hsla(var(--control-checked-background-color-hsl), 0.5);
    --switch-indicator-background-color: var(--pt-app-top-background-color);
    --switch-indicator-background-color-disabled: hsla(var(--white-hsl), 0.8);
    --dark-switch-indicator-background-color: var(--dark-gray5);
    --dark-switch-indicator-background-color-disabled: hsla(var(--black-hsl), 0.4);
}

:root {
  /*! Components */
}

:root {
  /*! Components */
}

:root {
  /*! Components */
    --table-border-color: var(--pt-divider-black);
    --dark-table-border-color: var(--pt-dark-divider-white);
}

:root {
  /*! Components */
    --menu-background-color: var(--pt-app-top-background-color);
    --dark-menu-background-color: var(--pt-dark-app-top-background-color);
    --menu-item-color-hover: var(--minimal-button-background-color-hover);
    --menu-item-color-active: var(--minimal-button-background-color-active);
    --dark-menu-item-color-hover: var(--dark-minimal-button-background-color-hover);
    --dark-menu-item-color-active: var(--dark-minimal-button-background-color-active);
}

:root {
  /*! Components */
    --navbar-background-color: var(--pt-app-top-background-color);
    --dark-navbar-background-color: var(--dark-gray5);
}

:root {
  /*! Components */
    --overlay-background-opacity: 0.7;
    --overlay-background-color: hsla(var(--black-hsl), var(--overlay-background-opacity));
}

:root {
  /*! Components */
    --popover-background-color: var(--pt-app-top-background-color);
    --dark-popover-background-color: var(--pt-dark-app-top-background-color);
}

:root {
  /*! Components */
    --pt-popover2-background-color: var(--pt-app-top-background-color);
    --pt-popover2-box-shadow: var(--pt-elevation-shadow-3);
    --pt-tooltip2-box-shadow: var(--pt-popover-box-shadow);
    --pt-dark-popover2-background-color: var(--pt-dark-app-top-background-color);
    --pt-dark-popover2-box-shadow: var(--pt-dark-elevation-shadow-3);
    --pt-dark-tooltip2-box-shadow: var(--pt-dark-popover-box-shadow);
    --tooltip2-background-color: var(--dark-gray5);
    --tooltip2-text-color: var(--light-gray5);
    --dark-tooltip2-background-color: var(--light-gray3);
    --dark-tooltip2-text-color: var(--dark-gray5);
}

:root {
  /*! Components */
    --progress-track-color: hsla(var(--gray1-hsl), 0.2);
    --progress-head-color: hsla(var(--gray1-hsl), 0.8);
    --dark-progress-track-color: hsla(var(--black-hsl), 0.5);
    --dark-progress-head-color: var(--gray3);
    --progress-bar-stripes-color: hsla(var(--white-hsl), 0.2);
    --progress-bar-gradient: linear-gradient(
  -45deg,
  var(--progress-bar-stripes-color) 25%,
  transparent 25%,
  transparent 50%,
  var(--progress-bar-stripes-color) 50%,
  var(--progress-bar-stripes-color) 75%,
  transparent 75%
);
}

:root {
  /*! Components */
    --skeleton-color-start: hsla(var(--light-gray1-hsl), 0.2);
    --skeleton-color-end: hsla(var(--gray1-hsl), 0.2);
}

:root {
  /*! Components */
}

:root {
  /*! Components */
    --tab-color-selected: var(--pt-link-color);
    --dark-tab-color-selected: var(--pt-dark-link-color);
}

:root {
  /*! Components */
    --tag-default-color: var(--gray1);
    --dark-tag-default-color: var(--gray5);
    --tag-default-color-hsl: var(--gray1-hsl);
    --dark-tag-default-color-hsl: var(--gray5-hsl);
}

:root {
  /*! Components */
}

:root {
  /*! Components */
    --tooltip-background-color: var(--dark-gray5);
    --tooltip-text-color: var(--light-gray5);
    --dark-tooltip-background-color: var(--light-gray3);
    --dark-tooltip-text-color: var(--dark-gray5);
}

:root {
  /*! Components */
}

:root {
  /*! Datetime */
    --datepicker-background-color: var(--pt-app-top-background-color);
    --datepicker-day-background-color-hover: var(--light-gray2);
    --datepicker-day-background-color-active: var(--light-gray1);
    --dark-datepicker-background-color: var(--pt-dark-app-top-background-color);
    --dark-datepicker-day-background-color-hover: var(--gray1);
    --dark-datepicker-day-background-color-active: var(--gray2);
    --daterangepicker-range-background-color: var(--light-gray4);
    --daterangepicker-range-background-color-selected: var(--light-gray4);
    --daterangepicker-range-background-color-selected-hover: var(--light-gray1);
    --dark-daterangepicker-range-background-color: var(--dark-gray5);
    --dark-daterangepicker-range-background-color-selected: var(--dark-gray5);
    --dark-daterangepicker-range-background-color-selected-hover: var(--gray1);
}

:root {
  /*! Select */
}

:root {
  /*! Table */
    --cell-background-color: var(--pt-app-top-background-color);
    --cell-background-color-opacity: 0.1;
    --cell-border-color: var(--pt-divider-black);
    --cell-text-color: var(--pt-text-color);
    --dark-cell-background-color: var(--dark-gray3);
    --dark-cell-border-color: var(--pt-dark-divider-black);
    --dark-cell-text-color: var(--pt-dark-text-color);
    --table-background-color: var(--light-gray5);
    --dark-table-background-color: var(--pt-dark-app-top-background-color);
    --table-background-color-hsl: var(--light-gray5-hsl);
    --dark-table-background-color-hsl: var(--pt-dark-app-top-background-color-hsl);
    --header-background-color: var(--table-background-color);
    --header-hover-background-color: var(--light-gray3);
    --column-header-text-color: var(--pt-text-color);
    --row-header-text-color: var(--pt-text-color-muted);
    --dark-header-background-color: var(--dark-table-background-color);
    --dark-header-hover-background-color: var(--dark-gray5);
    --dark-column-header-text-color: var(--pt-dark-text-color);
    --dark-row-header-text-color: var(--pt-dark-text-color-muted);
    --header-selected-background-color: var(--pt-intent-primary);
    --header-background-color-hsl: var(--table-background-color-hsl);
    --header-hover-background-color-hsl: var(--light-gray3-hsl);
    --header-selected-background-color-hsl: var(--pt-intent-primary-hue), 40%, 97%;
    --header-selected-hover-background-color-hsl: var(--pt-intent-primary-hue), 40%, 91%;
    --column-header-text-color-hsl: var(--pt-text-color);
    --row-header-text-color-hsl: var(--pt-text-color-muted);
    --dark-header-background-color-hsl: var(--dark-table-background-color-hsl);
    --dark-header-hover-background-color-hsl: var(--dark-gray5-hsl);
    --dark-header-selected-background-color-hsl: var(--pt-intent-primary-hue), 40%, 25%;
    --dark-header-selected-hover-background-color-hsl: var(--pt-intent-primary-hue), 40%, 29%;
    --dark-column-header-text-color-hsl: var(--pt-dark-text-color);
    --dark-row-header-text-color-hsl: var(--pt-dark-text-color-muted);
    --header-selected-background-color-hsl: var(--pt-intent-primary-hsl);
    --resize-handle-color: var(--pt-intent-primary);
    --resize-handle-dragging-color: var(--pt-intent-primary);
    --region-default-color: var(--gray3);
    --region-selected-color: var(--pt-intent-primary);
    --region-default-color-hsl: var(--gray3-hsl);
    --region-selected-color-hsl: var(--pt-intent-primary-hsl);
}

/*

Copyright 2015-present Palantir Technologies, Inc. All rights reserved.
Licensed under the Apache License, Version 2.0.

*/
html {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

body {
    font-size: 14px;
    font-weight: 400;
    letter-spacing: 0;
    line-height: 1.28581;
    text-transform: none;
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
    font-family: -apple-system,
  "BlinkMacSystemFont",
  "Segoe UI",
  "Roboto",
  "Oxygen",
  "Ubuntu",
  "Cantarell",
  "Open Sans",
  "Helvetica Neue",
  "Icons16",
  sans-serif;
    font-family: var(--pt-font-family);
}

p {
    margin-bottom: 10px;
    margin-top: 0;
}

small {
    font-size: 12px;
}

strong {
    font-weight: 600;
}

::selection {
    background: hsla(209, 100%, 75%, 0.6);
    background: var(--pt-text-selection-color);
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
Headings

Markup:
<div>
  <h1 class="@ns-heading">H1 heading</h1>
  <h2 class="@ns-heading">H2 heading</h2>
  <h3 class="@ns-heading">H3 heading</h3>
  <h4 class="@ns-heading">H4 heading</h4>
  <h5 class="@ns-heading">H5 heading</h5>
  <h6 class="@ns-heading">H6 heading</h6>
</div>

Styleguide headings
*/
.bp3-heading {
    color: hsl(209, 0%, 15%);
    color: var(--pt-heading-color);
    font-weight: 600;
    margin: 0 0 10px;
    padding: 0;
}

.bp3-dark .bp3-heading {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-heading-color);
}

h1.bp3-heading, .bp3-running-text h1 {
    font-size: 36px;
    line-height: 40px;
}

h2.bp3-heading, .bp3-running-text h2 {
    font-size: 28px;
    line-height: 32px;
}

h3.bp3-heading, .bp3-running-text h3 {
    font-size: 22px;
    line-height: 25px;
}

h4.bp3-heading, .bp3-running-text h4 {
    font-size: 18px;
    line-height: 21px;
}

h5.bp3-heading, .bp3-running-text h5 {
    font-size: 16px;
    line-height: 19px;
}

h6.bp3-heading, .bp3-running-text h6 {
    font-size: 14px;
    line-height: 16px;
}

/*
UI text

Markup:
<div class="{{.modifier}}">
  More than a decade ago, we set out to create products that would transform
  the way organizations use their data. Today, our products are deployed at
  the most critical government, commercial, and non-profit institutions in
  the world to solve problems we hadn’t even dreamed of back then.
</div>

.bp3-ui-text - Default Blueprint font styles, applied to the `<body>` tag and available as a class for nested resets.
.bp3-monospace-text - Use a monospace font (ideal for code).
.bp3-running-text - Increase line height ideal for longform text. See [Running text](#core/typography.running-text) below for additional features.
.bp3-text-large - Use a larger font size.
.bp3-text-small - Use a smaller font size.
.bp3-text-muted - Change text color to a gentler gray.
.bp3-text-disabled - Change text color to a transparent, faded gray.
.bp3-text-overflow-ellipsis - Truncate a single line of text with an ellipsis if it overflows its container.

Styleguide ui-text
*/
.bp3-ui-text {
    font-size: 14px;
    font-weight: 400;
    letter-spacing: 0;
    line-height: 1.28581;
    text-transform: none;
}

.bp3-monospace-text {
    font-family: Consolas,
  Menlo,
  monospace;
    font-family: var(--pt-font-family-monospace);
    text-transform: none;
}

.bp3-text-muted {
    color: hsl(209, 0%, 47%);
    color: var(--pt-text-color-muted);
}

.bp3-dark .bp3-text-muted {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-text-color-muted);
}

.bp3-text-disabled {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
}

.bp3-dark .bp3-text-disabled {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
}

.bp3-text-overflow-ellipsis {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
}

/*
Running text

Markup:
<div class="@ns-running-text {{.modifier}}">
  <p>
    We build products that make people better at their most important
    work — the kind of work you read about on the front page of the
    newspaper, not just the technology section.
  </p>
  <ul>
    <li>Item the <code>first</code>.</li>
    <li>Item the <strong>second</strong></code>.</li>
    <li>Item the <a href="#core/typography.running-text">third</a>.</li>
  </ul>
  <h3>Scale, Speed, Agility</h3>
  <p>
    A successful data transformation requires the whole organization — users, the IT shop, and
    leadership — to operate in lockstep. With Foundry, the enterprise comes together to
    transform the organization and turn data into a competitive advantage.
  </p>
</div>

.bp3-text-large - Use larger font size.

Styleguide running-text
*/
.bp3-running-text {
    font-size: 14px;
    line-height: 1.5;
}

.bp3-running-text h1 {
    color: hsl(209, 0%, 15%);
    color: var(--pt-heading-color);
    font-weight: 600;
    margin-bottom: 20px;
    margin-top: 40px;
}

.bp3-dark .bp3-running-text h1 {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-heading-color);
}

.bp3-running-text h2 {
    color: hsl(209, 0%, 15%);
    color: var(--pt-heading-color);
    font-weight: 600;
    margin-bottom: 20px;
    margin-top: 40px;
}

.bp3-dark .bp3-running-text h2 {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-heading-color);
}

.bp3-running-text h3 {
    color: hsl(209, 0%, 15%);
    color: var(--pt-heading-color);
    font-weight: 600;
    margin-bottom: 20px;
    margin-top: 40px;
}

.bp3-dark .bp3-running-text h3 {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-heading-color);
}

.bp3-running-text h4 {
    color: hsl(209, 0%, 15%);
    color: var(--pt-heading-color);
    font-weight: 600;
    margin-bottom: 20px;
    margin-top: 40px;
}

.bp3-dark .bp3-running-text h4 {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-heading-color);
}

.bp3-running-text h5 {
    color: hsl(209, 0%, 15%);
    color: var(--pt-heading-color);
    font-weight: 600;
    margin-bottom: 20px;
    margin-top: 40px;
}

.bp3-dark .bp3-running-text h5 {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-heading-color);
}

.bp3-running-text h6 {
    color: hsl(209, 0%, 15%);
    color: var(--pt-heading-color);
    font-weight: 600;
    margin-bottom: 20px;
    margin-top: 40px;
}

.bp3-dark .bp3-running-text h6 {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-heading-color);
}

.bp3-running-text hr {
    border: none;
    border-bottom: 1px solid hsla(209, 0%, 9%, 0.15);
    border-bottom: 1px solid var(--pt-divider-black);
    margin: 20px 0;
}

.bp3-dark .bp3-running-text hr {
    border-color: hsla(209, 0%, 100%, 0.15);
    border-color: var(--pt-dark-divider-white);
}

.bp3-running-text p {
    margin: 0 0 10px;
    padding: 0;
}

.bp3-text-large {
    font-size: 16px;
}

.bp3-text-small {
    font-size: 12px;
}

/*
Links

Simply use an `<a href="">` tag as you normally would. No class is necessary for Blueprint styles.
Links are underlined only when hovered.

Putting an icon inside a link will cause it to inherit the link's text color.

Styleguide typography.links
*/
a {
  color: hsl(209,   83%,  46%);
  color: var(--pt-link-color);
  text-decoration: none; }
  a:hover {
    color: hsl(209,   83%,  46%);
    color: var(--pt-link-color);
    cursor: pointer;
    text-decoration: underline; }
  a .bp3-icon, a .bp3-icon-standard, a .bp3-icon-large {
    color: inherit; }
  a code,
  .bp3-dark a code {
    color: inherit; }
  .bp3-dark a,
  .bp3-dark a:hover {
    color: hsl(209,   100%, 59%);
    color: var(--pt-dark-link-color); }
    .bp3-dark a .bp3-icon, .bp3-dark a .bp3-icon-standard, .bp3-dark a .bp3-icon-large,
    .bp3-dark a:hover .bp3-icon,
    .bp3-dark a:hover .bp3-icon-standard,
    .bp3-dark a:hover .bp3-icon-large {
      color: inherit; }

/*
Preformatted text

Markup:
<div>
  <p>Use the <code class="@ns-code">&lt;code></code> tag for snippets of code.</p>
  <pre class="@ns-code-block">Use the &lt;pre> tag for blocks of code.</pre>
  <pre class="@ns-code-block"><code>// code sample
export function hasModifier(
  modifiers: ts.ModifiersArray,
  ...modifierKinds: ts.SyntaxKind[],
) {
  if (modifiers == null || modifierKinds == null) {
    return false;
  }
  return modifiers.some(m => modifierKinds.some(k => m.kind === k));
}</code></pre>
</div>

Styleguide preformatted
*/
.bp3-running-text code, .bp3-code {
  font-family: Consolas,
  Menlo,
  monospace;
  font-family: var(--pt-font-family-monospace);
  text-transform: none;
  background: hsla(209, 0%, 100%, 0.7);
  background: var(--pt-code-background-color);
  border-radius: 6px;
  border-radius: var(--pt-border-radius);
  box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.2);
  box-shadow: inset 0 0 0 1px hsla(var(--black-hsl), 0.2);
  color: hsl(209, 0%, 47%);
  color: var(--pt-code-text-color);
  font-size: smaller;
  padding: 2px 5px; }
  .bp3-dark .bp3-running-text code, .bp3-running-text .bp3-dark code, .bp3-dark .bp3-code {
    background: hsla(209, 0%, 9%, 0.3);
    background: var(--pt-dark-code-background-color);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 0 0 1px hsla(var(--black-hsl), 0.4);
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-code-text-color); }
  .bp3-running-text a > code, a > .bp3-code {
    color: hsl(209,   90%,  50%);
    color: var(--pt-intent-primary); }
    .bp3-dark .bp3-running-text a > code, .bp3-running-text .bp3-dark a > code, .bp3-dark a > .bp3-code {
      color: inherit; }

.bp3-running-text pre, .bp3-code-block {
  font-family: Consolas,
  Menlo,
  monospace;
  font-family: var(--pt-font-family-monospace);
  text-transform: none;
  background: hsla(209, 0%, 100%, 0.7);
  background: var(--pt-code-background-color);
  border-radius: 6px;
  border-radius: var(--pt-border-radius);
  box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
  box-shadow: inset 0 0 0 1px var(--pt-divider-black);
  color: hsl(209, 0%, 15%);
  color: var(--pt-text-color);
  display: block;
  font-size: 13px;
  line-height: 1.4;
  margin: 10px 0;
  padding: 13px 15px 12px;
  word-break: break-all;
  word-wrap: break-word; }
  .bp3-dark .bp3-running-text pre, .bp3-running-text .bp3-dark pre, .bp3-dark .bp3-code-block {
    background: hsla(209, 0%, 9%, 0.3);
    background: var(--pt-dark-code-background-color);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 0 0 1px var(--pt-dark-divider-black);
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color); }
  .bp3-running-text pre > code, .bp3-code-block > code {
    background: none;
    box-shadow: none;
    color: inherit;
    font-size: inherit;
    padding: 0; }

.bp3-running-text kbd, .bp3-key {
  -webkit-align-items: center;
          align-items: center;
  background: hsl(209, 0%, 100%);
  background: var(--white);
  border-radius: 6px;
  border-radius: var(--pt-border-radius);
  box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 0 0 hsla(209, 0%, 9%, 0),
  0 1px 1px hsla(209, 0%, 9%, 0.2);
  box-shadow: var(--pt-elevation-shadow-1);
  color: hsl(209, 0%, 47%);
  color: var(--pt-text-color-muted);
  display: -webkit-inline-flex;
  display: inline-flex;
  font-family: inherit;
  font-size: 12px;
  height: 24px;
  -webkit-justify-content: center;
          justify-content: center;
  line-height: 24px;
  min-width: 24px;
  padding: 6px calc(6px * 2);
  padding: var(--pt-border-radius) calc(var(--pt-border-radius) * 2);
  vertical-align: middle; }
  .bp3-running-text kbd .bp3-icon, .bp3-key .bp3-icon, .bp3-running-text kbd .bp3-icon-standard, .bp3-key .bp3-icon-standard, .bp3-running-text kbd .bp3-icon-large, .bp3-key .bp3-icon-large {
    margin-right: 5px; }
  .bp3-dark .bp3-running-text kbd, .bp3-running-text .bp3-dark kbd, .bp3-dark .bp3-key {
    background: hsl(209, 0%, 38%);
    background: var(--dark-gray5);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 0 0 hsla(209, 0%, 9%, 0),
  0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-elevation-shadow-1);
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-text-color-muted); }

/*
Block quotes

Markup:
<blockquote class="@ns-blockquote">
  Premium Aerotec is a key supplier for Airbus, producing 30 million parts per year,
  which is huge complexity. Skywise helps us manage all the production steps.
  It gives Airbus much better visibility into where the product is in the supply chain,
  and it lets us immediately see our weak points so we can react on the spot.
</blockquote>

Styleguide blockquote
*/
.bp3-running-text blockquote, .bp3-blockquote {
  border-left: solid 4px hsla(209, 0%, 73%, 0.5);
  border-left: solid 4px hsla(var(--gray4-hsl), 0.5);
  margin: 0 0 10px;
  padding: 0 20px; }
  .bp3-dark .bp3-running-text blockquote, .bp3-running-text .bp3-dark blockquote, .bp3-dark .bp3-blockquote {
    border-color: hsla(209, 0%, 54%, 0.5);
    border-color: hsla(var(--gray2-hsl), 0.5); }

/*
Lists

Markup:
<ol class="{{.modifier}}">
  <li>Item the first</li>
  <li>Item the second</li>
  <li>
    Item the third
    <ul class="{{.modifier}}">
      <li>Item the fourth</li>
      <li>Item the fifth</li>
    </ul>
  </li>
</ol>

.bp3-list - Add a little spacing between items for readability.
.bp3-list-unstyled - Remove all list styling (including indicators) so you can add your own.

Styleguide lists
*/
.bp3-running-text ul,
.bp3-running-text ol, .bp3-list {
  margin: 10px 0;
  padding-left: 30px; }
  .bp3-running-text ul li:not(:last-child), .bp3-running-text ol li:not(:last-child), .bp3-list li:not(:last-child) {
    margin-bottom: 5px; }
  .bp3-running-text ul ol, .bp3-running-text ol ol, .bp3-list ol,
  .bp3-running-text ul ul,
  .bp3-running-text ol ul,
  .bp3-list ul {
    margin-top: 5px; }

.bp3-list-unstyled {
  list-style: none;
  margin: 0;
  padding: 0; }
  .bp3-list-unstyled li {
    padding: 0; }

/*
Right-to-left text

Markup:
<h5 class="@ns-heading">Arabic:</h5>
<p class="@ns-rtl">
  لكل لأداء بمحاولة من. مدينة الواقعة يبق أي, وإعلان وقوعها، حول كل, حدى عجّل مشروط الخاسرة قد.
  من الذود تكبّد بين, و لها واحدة الأراضي. عل الصفحة والروسية يتم, أي للحكومة استعملت شيء. أم وصل زهاء اليا
</p>
<h5 class="@ns-heading">Hebrew:</h5>
<p class="@ns-rtl">
  כדי על עזרה יידיש הבהרה, מלא באגים טכניים דת. תנך או ברית ביולי. כתב בה הטבע למנוע, דת כלים פיסיקה החופשית זכר.
  מתן החלל מאמרשיחהצפה ב. הספרות אנציקלופדיה אם זכר, על שימושי שימושיים תאולוגיה עזה
</p>

Styleguide rtl
*/
.bp3-rtl {
  text-align: right; }

.bp3-dark {
  color: hsl(209, 0%, 97%);
  color: var(--pt-dark-text-color); }

:focus {
  outline: hsla(209,   90%,  50%, 0.6) auto 2px;
  outline: var(--pt-outline-color) auto 2px;
  outline-offset: 2px;
  -moz-outline-radius: 6px; }

.bp3-focus-disabled :focus {
  /* stylelint-disable declaration-no-important */
  outline: none !important; }
  .bp3-focus-disabled :focus ~ .bp3-control-indicator {
    outline: none !important; }

.bp3-alert {
  max-width: 400px;
  padding: 20px; }

.bp3-alert-body {
  display: -webkit-flex;
  display: flex; }
  .bp3-alert-body .bp3-icon {
    font-size: 40px;
    margin-right: 20px;
    margin-top: 0; }

.bp3-alert-contents {
  word-break: break-word; }

.bp3-alert-footer {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: row-reverse;
          flex-direction: row-reverse;
  margin-top: 10px; }
  .bp3-alert-footer .bp3-button {
    margin-left: 10px; }

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
Breadcrumbs

Markup:
<ul class="bp3-breadcrumbs">
  <li><a class="bp3-breadcrumbs-collapsed" href="#"></a></li>
  <li><a class="bp3-breadcrumb bp3-disabled">Folder one</a></li>
  <li><a class="bp3-breadcrumb" href="#">Folder two</a></li>
  <li><a class="bp3-breadcrumb" href="#">Folder three</a></li>
  <li><span class="bp3-breadcrumb bp3-breadcrumb-current">File</span></li>
</ul>

Styleguide breadcrumbs
*/
.bp3-breadcrumbs {
  -webkit-align-items: center;
          align-items: center;
  cursor: default;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
          flex-wrap: wrap;
  height: 30px;
  list-style: none;
  margin: 0;
  padding: 0; }
  .bp3-breadcrumbs > li {
    -webkit-align-items: center;
            align-items: center;
    display: -webkit-flex;
    display: flex; }
    .bp3-breadcrumbs > li::after {
      background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='%236e6e6e' d='M10.71 7.29l-4-4a1.003 1.003 0 00-1.42 1.42L8.59 8 5.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z'/%3E%3C/svg%3E");
      content: "";
      display: block;
      height: 16px;
      margin: 0 5px;
      width: 16px; }
    .bp3-breadcrumbs > li:last-of-type::after {
      display: none; }

.bp3-breadcrumb,
.bp3-breadcrumb-current,
.bp3-breadcrumbs-collapsed {
  -webkit-align-items: center;
          align-items: center;
  display: -webkit-inline-flex;
  display: inline-flex;
  font-size: 16px; }

.bp3-breadcrumb,
.bp3-breadcrumbs-collapsed {
  color: hsl(209, 0%, 47%);
  color: var(--pt-text-color-muted); }

.bp3-breadcrumb:hover {
  text-decoration: none; }

.bp3-breadcrumb.bp3-disabled {
  color: hsla(209, 0%, 9%, 0.3);
  color: var(--pt-text-color-disabled);
  cursor: not-allowed; }

.bp3-breadcrumb .bp3-icon {
  margin-right: 5px; }

.bp3-breadcrumb-current {
  color: inherit;
  font-weight: 600; }
  .bp3-breadcrumb-current .bp3-input {
    font-size: inherit;
    font-weight: inherit;
    vertical-align: baseline; }

.bp3-breadcrumbs-collapsed {
  background: hsl(209, 0%, 85%);
  background: var(--light-gray1);
  border: none;
  border-radius: 6px;
  border-radius: var(--pt-border-radius);
  cursor: pointer;
  margin-right: 2px;
  padding: 1px 5px;
  vertical-align: text-bottom; }
  .bp3-breadcrumbs-collapsed::before {
    background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='%236e6e6e' d='M2 6.03a2 2 0 100 4 2 2 0 100-4zM14 6.03a2 2 0 100 4 2 2 0 100-4zM8 6.03a2 2 0 100 4 2 2 0 100-4z'/%3E%3C/svg%3E") center no-repeat;
    content: "";
    display: block;
    height: 16px;
    width: 16px; }
  .bp3-breadcrumbs-collapsed:hover {
    background: hsl(209, 0%, 80%);
    background: var(--gray5);
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
    text-decoration: none; }

.bp3-dark .bp3-breadcrumb,
.bp3-dark .bp3-breadcrumbs-collapsed {
  color: hsl(209, 0%, 73%);
  color: var(--pt-dark-text-color-muted); }

.bp3-dark .bp3-breadcrumbs > li::after {
  color: hsl(209, 0%, 73%);
  color: var(--pt-dark-icon-color); }

.bp3-dark .bp3-breadcrumb.bp3-disabled {
  color: hsla(209, 0%, 100%, 0.3);
  color: var(--pt-dark-text-color-disabled); }

.bp3-dark .bp3-breadcrumb-current {
  color: hsl(209, 0%, 97%);
  color: var(--pt-dark-text-color); }

.bp3-dark .bp3-breadcrumbs-collapsed {
  background: hsla(209, 0%, 9%, 0.4);
  background: hsla(var(--black-hsl), 0.4); }
  .bp3-dark .bp3-breadcrumbs-collapsed:hover {
    background: hsla(209, 0%, 9%, 0.6);
    background: hsla(var(--black-hsl), 0.6);
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color); }

/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
/*
Button

Markup:
<a role="button" class="bp3-button {{.modifier}}" {{:modifier}} tabindex="0">Anchor</a>
<button type="button" class="bp3-button bp3-icon-add {{.modifier}}" {{:modifier}}>Button</button>

:disabled - Disabled state
.bp3-active - Active appearance
.bp3-disabled - Disabled appearance
.bp3-intent-primary - Primary intent
.bp3-intent-success - Success intent
.bp3-intent-warning - Warning intent
.bp3-intent-danger - Danger intent
.bp3-minimal - More subtle appearance
.bp3-outlined - Subtle yet structured appearance
.bp3-large - Larger size
.bp3-small - Smaller size
.bp3-fill - Fill parent container

Styleguide button
*/
.bp3-button {
  display: -webkit-inline-flex;
  display: inline-flex;
  -webkit-flex-direction: row;
          flex-direction: row;
  -webkit-align-items: center;
          align-items: center;
  border: none;
  border-radius: 6px;
  border-radius: var(--pt-border-radius);
  cursor: pointer;
  font-size: 14px;
  -webkit-justify-content: center;
          justify-content: center;
  padding: 5px 10px;
  text-align: left;
  vertical-align: middle;
  min-height: 30px;
  min-width: 30px; }
  .bp3-button > * {
    -webkit-flex-grow: 0;
            flex-grow: 0;
    -webkit-flex-shrink: 0;
            flex-shrink: 0; }
  .bp3-button > .bp3-fill {
    -webkit-flex-grow: 1;
            flex-grow: 1;
    -webkit-flex-shrink: 1;
            flex-shrink: 1; }
  .bp3-button::before,
  .bp3-button > * {
    margin-right: 7px; }
  .bp3-button:empty::before,
  .bp3-button > :last-child {
    margin-right: 0; }
  .bp3-button:empty {
    /* stylelint-disable-next-line declaration-no-important */
    padding: 0 !important; }
  .bp3-button:disabled, .bp3-button.bp3-disabled {
    cursor: not-allowed; }
  .bp3-button.bp3-fill {
    display: -webkit-flex;
    display: flex;
    width: 100%; }
  .bp3-button.bp3-align-right,
  .bp3-align-right .bp3-button {
    text-align: right; }
  .bp3-button.bp3-align-left,
  .bp3-align-left .bp3-button {
    text-align: left; }
  .bp3-button:not([class*="bp3-intent-"]) {
    background-color: hsl(209, 0%, 97%);
    background-color: var(--button-background-color);
    background-image: unset;
    background-image: var(--button-gradient);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: var(--button-box-shadow);
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color); }
    .bp3-button:not([class*="bp3-intent-"]):hover {
      background-clip: padding-box;
      background-color: hsl(209, 0%, 94%);
      background-color: var(--button-background-color-hover);
      box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
      box-shadow: var(--button-box-shadow); }
    .bp3-button:not([class*="bp3-intent-"]):active, .bp3-button:not([class*="bp3-intent-"]).bp3-active {
      background-color: hsl(209, 0%, 87%);
      background-color: var(--button-background-color-active);
      background-image: none;
      box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.3);
      box-shadow: var(--button-box-shadow-active); }
    .bp3-button:not([class*="bp3-intent-"]):disabled, .bp3-button:not([class*="bp3-intent-"]).bp3-disabled {
      background-color: hsla(209, 0%, 85%, 0.5);
      background-color: var(--button-background-color-disabled);
      background-image: none;
      box-shadow: none;
      color: hsla(209, 0%, 9%, 0.3);
      color: var(--button-color-disabled);
      cursor: not-allowed;
      outline: none; }
      .bp3-button:not([class*="bp3-intent-"]):disabled.bp3-active, .bp3-button:not([class*="bp3-intent-"]):disabled.bp3-active:hover, .bp3-button:not([class*="bp3-intent-"]).bp3-disabled.bp3-active, .bp3-button:not([class*="bp3-intent-"]).bp3-disabled.bp3-active:hover {
        background: hsla(209, 0%, 85%, 0.7);
        background: var(--button-background-color-active-disabled); }
  .bp3-button.bp3-intent-primary {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--pt-intent-primary);
    background-image: unset;
    background-image: var(--button-intent-gradient);
    box-shadow: unset;
    box-shadow: var(--button-intent-box-shadow);
    color: hsl(209, 0%, 100%);
    color: var(--white); }
    .bp3-button.bp3-intent-primary:hover, .bp3-button.bp3-intent-primary:active, .bp3-button.bp3-intent-primary.bp3-active {
      color: hsl(209, 0%, 100%);
      color: var(--white); }
    .bp3-button.bp3-intent-primary:hover {
      background-color: hsl(209,   100%, 54%);
      background-color: var(--pt-intent-primary-hover);
      box-shadow: unset;
      box-shadow: var(--button-intent-box-shadow); }
    .bp3-button.bp3-intent-primary:active, .bp3-button.bp3-intent-primary.bp3-active {
      background-color: hsl(209,   83%,  46%);
      background-color: var(--pt-intent-primary-active);
      background-image: none;
      box-shadow: unset;
      box-shadow: var(--button-intent-box-shadow-active); }
    .bp3-button.bp3-intent-primary:disabled, .bp3-button.bp3-intent-primary.bp3-disabled {
      background-color: hsla(209,   90%,  50%, 0.5);
      background-color: hsla(var(--pt-intent-primary-hsl), 0.5);
      background-image: none;
      border-color: transparent;
      box-shadow: none;
      color: hsla(209, 0%, 100%, 0.6);
      color: var(--button-intent-color-disabled); }
  .bp3-button.bp3-intent-success {
    background-color: hsl(113, 100%, 34%);
    background-color: var(--pt-intent-success);
    background-image: unset;
    background-image: var(--button-intent-gradient);
    box-shadow: unset;
    box-shadow: var(--button-intent-box-shadow);
    color: hsl(209, 0%, 100%);
    color: var(--white); }
    .bp3-button.bp3-intent-success:hover, .bp3-button.bp3-intent-success:active, .bp3-button.bp3-intent-success.bp3-active {
      color: hsl(209, 0%, 100%);
      color: var(--white); }
    .bp3-button.bp3-intent-success:hover {
      background-color: hsl(113, 53%,  49%);
      background-color: var(--pt-intent-success-hover);
      box-shadow: unset;
      box-shadow: var(--button-intent-box-shadow); }
    .bp3-button.bp3-intent-success:active, .bp3-button.bp3-intent-success.bp3-active {
      background-color: hsl(113, 100%, 29%);
      background-color: var(--pt-intent-success-active);
      background-image: none;
      box-shadow: unset;
      box-shadow: var(--button-intent-box-shadow-active); }
    .bp3-button.bp3-intent-success:disabled, .bp3-button.bp3-intent-success.bp3-disabled {
      background-color: hsla(113, 100%, 34%, 0.5);
      background-color: hsla(var(--pt-intent-success-hsl), 0.5);
      background-image: none;
      border-color: transparent;
      box-shadow: none;
      color: hsla(209, 0%, 100%, 0.6);
      color: var(--button-intent-color-disabled); }
  .bp3-button.bp3-intent-warning {
    background-color: hsl(30, 70%, 51%);
    background-color: var(--pt-intent-warning);
    background-image: unset;
    background-image: var(--button-intent-gradient);
    box-shadow: unset;
    box-shadow: var(--button-intent-box-shadow);
    color: hsl(209, 0%, 100%);
    color: var(--white); }
    .bp3-button.bp3-intent-warning:hover, .bp3-button.bp3-intent-warning:active, .bp3-button.bp3-intent-warning.bp3-active {
      color: hsl(209, 0%, 100%);
      color: var(--white); }
    .bp3-button.bp3-intent-warning:hover {
      background-color: hsl(30, 87%, 62%);
      background-color: var(--pt-intent-warning-hover);
      box-shadow: unset;
      box-shadow: var(--button-intent-box-shadow); }
    .bp3-button.bp3-intent-warning:active, .bp3-button.bp3-intent-warning.bp3-active {
      background-color: hsl(30, 67%, 45%);
      background-color: var(--pt-intent-warning-active);
      background-image: none;
      box-shadow: unset;
      box-shadow: var(--button-intent-box-shadow-active); }
    .bp3-button.bp3-intent-warning:disabled, .bp3-button.bp3-intent-warning.bp3-disabled {
      background-color: hsla(30, 70%, 51%, 0.5);
      background-color: hsla(var(--pt-intent-warning-hsl), 0.5);
      background-image: none;
      border-color: transparent;
      box-shadow: none;
      color: hsla(209, 0%, 100%, 0.6);
      color: var(--button-intent-color-disabled); }
  .bp3-button.bp3-intent-danger {
    background-color: hsl(0, 69%, 54%);
    background-color: var(--pt-intent-danger);
    background-image: unset;
    background-image: var(--button-intent-gradient);
    box-shadow: unset;
    box-shadow: var(--button-intent-box-shadow);
    color: hsl(209, 0%, 100%);
    color: var(--white); }
    .bp3-button.bp3-intent-danger:hover, .bp3-button.bp3-intent-danger:active, .bp3-button.bp3-intent-danger.bp3-active {
      color: hsl(209, 0%, 100%);
      color: var(--white); }
    .bp3-button.bp3-intent-danger:hover {
      background-color: hsl(0, 89%, 65%);
      background-color: var(--pt-intent-danger-hover);
      box-shadow: unset;
      box-shadow: var(--button-intent-box-shadow); }
    .bp3-button.bp3-intent-danger:active, .bp3-button.bp3-intent-danger.bp3-active {
      background-color: hsl(0, 60%, 47%);
      background-color: var(--pt-intent-danger-active);
      background-image: none;
      box-shadow: unset;
      box-shadow: var(--button-intent-box-shadow-active); }
    .bp3-button.bp3-intent-danger:disabled, .bp3-button.bp3-intent-danger.bp3-disabled {
      background-color: hsla(0, 69%, 54%, 0.5);
      background-color: hsla(var(--pt-intent-danger-hsl), 0.5);
      background-image: none;
      border-color: transparent;
      box-shadow: none;
      color: hsla(209, 0%, 100%, 0.6);
      color: var(--button-intent-color-disabled); }
  .bp3-button[class*="bp3-intent-"] .bp3-button-spinner .bp3-spinner-head {
    stroke: hsl(209, 0%, 100%);
    stroke: var(--white); }
  .bp3-button.bp3-large,
  .bp3-large .bp3-button {
    min-height: 40px;
    min-width: 40px;
    font-size: 16px;
    padding: 5px 15px; }
    .bp3-button.bp3-large::before,
    .bp3-button.bp3-large > *,
    .bp3-large .bp3-button::before,
    .bp3-large .bp3-button > * {
      margin-right: 10px; }
    .bp3-button.bp3-large:empty::before,
    .bp3-button.bp3-large > :last-child,
    .bp3-large .bp3-button:empty::before,
    .bp3-large .bp3-button > :last-child {
      margin-right: 0; }
  .bp3-button.bp3-small,
  .bp3-small .bp3-button {
    min-height: 24px;
    min-width: 24px;
    padding: 0 7px; }
  .bp3-button.bp3-loading {
    position: relative; }
    .bp3-button.bp3-loading[class*="bp3-icon-"]::before {
      visibility: hidden; }
    .bp3-button.bp3-loading .bp3-button-spinner {
      margin: 0;
      position: absolute; }
    .bp3-button.bp3-loading > :not(.bp3-button-spinner) {
      visibility: hidden; }
  .bp3-button[class*="bp3-icon-"]::before {
    font-family: "Icons16", sans-serif;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 1;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color); }
  .bp3-button .bp3-icon, .bp3-button .bp3-icon-standard, .bp3-button .bp3-icon-large {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color); }
    .bp3-button .bp3-icon.bp3-align-right, .bp3-button .bp3-icon-standard.bp3-align-right, .bp3-button .bp3-icon-large.bp3-align-right {
      margin-left: 7px; }
  .bp3-button .bp3-icon:first-child:last-child,
  .bp3-button .bp3-spinner + .bp3-icon:last-child {
    margin: 0 -7px; }
  .bp3-dark .bp3-button:not([class*="bp3-intent-"]) {
    background-color: hsl(209, 0%, 38%);
    background-color: var(--dark-button-background-color);
    background-image: unset;
    background-image: var(--dark-button-gradient);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-box-shadow);
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color); }
    .bp3-dark .bp3-button:not([class*="bp3-intent-"]):hover, .bp3-dark .bp3-button:not([class*="bp3-intent-"]):active, .bp3-dark .bp3-button:not([class*="bp3-intent-"]).bp3-active {
      color: hsl(209, 0%, 97%);
      color: var(--pt-dark-text-color); }
    .bp3-dark .bp3-button:not([class*="bp3-intent-"]):hover {
      background-color: hsl(209, 0%, 31%);
      background-color: var(--dark-button-background-color-hover);
      box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
      box-shadow: var(--dark-button-box-shadow); }
    .bp3-dark .bp3-button:not([class*="bp3-intent-"]):active, .bp3-dark .bp3-button:not([class*="bp3-intent-"]).bp3-active {
      background-color: hsl(209, 0%, 18%);
      background-color: var(--dark-button-background-color-active);
      background-image: none;
      box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.6),
  inset 0 1px 2px hsla(209, 0%, 9%, 0.2);
      box-shadow: var(--dark-button-box-shadow-active); }
    .bp3-dark .bp3-button:not([class*="bp3-intent-"]):disabled, .bp3-dark .bp3-button:not([class*="bp3-intent-"]).bp3-disabled {
      background-color: hsla(209, 0%, 38%, 0.5);
      background-color: var(--dark-button-background-color-disabled);
      background-image: none;
      box-shadow: none;
      color: hsla(209, 0%, 100%, 0.3);
      color: var(--dark-button-color-disabled); }
      .bp3-dark .bp3-button:not([class*="bp3-intent-"]):disabled.bp3-active, .bp3-dark .bp3-button:not([class*="bp3-intent-"]).bp3-disabled.bp3-active {
        background: hsla(209, 0%, 38%, 0.7);
        background: var(--dark-button-background-color-active-disabled); }
    .bp3-dark .bp3-button:not([class*="bp3-intent-"]) .bp3-button-spinner .bp3-spinner-head {
      background: hsla(209, 0%, 9%, 0.5);
      background: var(--dark-progress-track-color);
      stroke: hsl(209, 0%, 63%);
      stroke: var(--dark-progress-head-color); }
    .bp3-dark .bp3-button:not([class*="bp3-intent-"])[class*="bp3-icon-"]::before {
      color: hsl(209, 0%, 73%);
      color: var(--pt-dark-icon-color); }
    .bp3-dark .bp3-button:not([class*="bp3-intent-"]) .bp3-icon, .bp3-dark .bp3-button:not([class*="bp3-intent-"]) .bp3-icon-standard, .bp3-dark .bp3-button:not([class*="bp3-intent-"]) .bp3-icon-large {
      color: hsl(209, 0%, 73%);
      color: var(--pt-dark-icon-color); }
  .bp3-dark .bp3-button[class*="bp3-intent-"] {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-intent-box-shadow); }
    .bp3-dark .bp3-button[class*="bp3-intent-"]:hover {
      box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
      box-shadow: var(--dark-button-intent-box-shadow); }
    .bp3-dark .bp3-button[class*="bp3-intent-"]:active, .bp3-dark .bp3-button[class*="bp3-intent-"].bp3-active {
      box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4),
  inset 0 1px 2px hsla(209, 0%, 9%, 0.2);
      box-shadow: var(--dark-button-intent-box-shadow-active); }
    .bp3-dark .bp3-button[class*="bp3-intent-"]:disabled, .bp3-dark .bp3-button[class*="bp3-intent-"].bp3-disabled {
      background-image: none;
      box-shadow: none;
      color: hsla(209, 0%, 100%, 0.3);
      color: var(--dark-button-intent-color-disabled); }
    .bp3-dark .bp3-button[class*="bp3-intent-"] .bp3-button-spinner .bp3-spinner-head {
      stroke: hsl(209, 0%, 63%);
      stroke: var(--dark-progress-head-color); }
  .bp3-button:disabled::before,
  .bp3-button:disabled .bp3-icon, .bp3-button:disabled .bp3-icon-standard, .bp3-button:disabled .bp3-icon-large, .bp3-button.bp3-disabled::before,
  .bp3-button.bp3-disabled .bp3-icon, .bp3-button.bp3-disabled .bp3-icon-standard, .bp3-button.bp3-disabled .bp3-icon-large, .bp3-button[class*="bp3-intent-"]::before,
  .bp3-button[class*="bp3-intent-"] .bp3-icon, .bp3-button[class*="bp3-intent-"] .bp3-icon-standard, .bp3-button[class*="bp3-intent-"] .bp3-icon-large {
    /* stylelint-disable-next-line declaration-no-important */
    color: inherit !important; }
  .bp3-button.bp3-minimal {
    background: none;
    background: var(--minimal-button-background-color);
    box-shadow: none; }
    .bp3-button.bp3-minimal:hover {
      background: hsla(209, 0%, 73%, 0.3);
      background: var(--minimal-button-background-color-hover);
      box-shadow: none;
      color: hsl(209, 0%, 15%);
      color: var(--pt-text-color);
      text-decoration: none; }
    .bp3-button.bp3-minimal:active, .bp3-button.bp3-minimal.bp3-active {
      background: hsla(209, 0%, 54%, 0.3);
      background: var(--minimal-button-background-color-active);
      box-shadow: none;
      color: hsl(209, 0%, 15%);
      color: var(--pt-text-color); }
    .bp3-button.bp3-minimal:disabled, .bp3-button.bp3-minimal:disabled:hover, .bp3-button.bp3-minimal.bp3-disabled, .bp3-button.bp3-minimal.bp3-disabled:hover {
      background: none;
      color: hsla(209, 0%, 9%, 0.3);
      color: var(--pt-text-color-disabled);
      cursor: not-allowed; }
      .bp3-button.bp3-minimal:disabled.bp3-active, .bp3-button.bp3-minimal:disabled:hover.bp3-active, .bp3-button.bp3-minimal.bp3-disabled.bp3-active, .bp3-button.bp3-minimal.bp3-disabled:hover.bp3-active {
        background: hsla(209, 0%, 54%, 0.3);
        background: var(--minimal-button-background-color-active); }
    .bp3-dark .bp3-button.bp3-minimal {
      background: none;
      background: var(--dark-minimal-button-background-color);
      box-shadow: none;
      color: inherit; }
      .bp3-dark .bp3-button.bp3-minimal:hover, .bp3-dark .bp3-button.bp3-minimal:active, .bp3-dark .bp3-button.bp3-minimal.bp3-active {
        background: none;
        box-shadow: none; }
      .bp3-dark .bp3-button.bp3-minimal:hover {
        background: hsla(209, 0%, 80%, 0.3);
        background: var(--dark-minimal-button-background-color-hover); }
      .bp3-dark .bp3-button.bp3-minimal:active, .bp3-dark .bp3-button.bp3-minimal.bp3-active {
        background: hsla(209, 0%, 63%, 0.3);
        background: var(--dark-minimal-button-background-color-active);
        color: hsl(209, 0%, 97%);
        color: var(--pt-dark-text-color); }
      .bp3-dark .bp3-button.bp3-minimal:disabled, .bp3-dark .bp3-button.bp3-minimal:disabled:hover, .bp3-dark .bp3-button.bp3-minimal.bp3-disabled, .bp3-dark .bp3-button.bp3-minimal.bp3-disabled:hover {
        background: none;
        color: hsla(209, 0%, 100%, 0.3);
        color: var(--pt-dark-text-color-disabled);
        cursor: not-allowed; }
        .bp3-dark .bp3-button.bp3-minimal:disabled.bp3-active, .bp3-dark .bp3-button.bp3-minimal:disabled:hover.bp3-active, .bp3-dark .bp3-button.bp3-minimal.bp3-disabled.bp3-active, .bp3-dark .bp3-button.bp3-minimal.bp3-disabled:hover.bp3-active {
          background: hsla(209, 0%, 63%, 0.3);
          background: var(--dark-minimal-button-background-color-active); }
    .bp3-button.bp3-minimal.bp3-intent-primary {
      color: hsl(209,   83%,  46%);
      color: var(--pt-intent-primary-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-primary:hover, .bp3-button.bp3-minimal.bp3-intent-primary:active, .bp3-button.bp3-minimal.bp3-intent-primary.bp3-active {
        background: none;
        box-shadow: none;
        color: hsl(209,   83%,  46%);
        color: var(--pt-intent-primary-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-primary:hover {
        background: hsla(209,   90%,  50%, 0.15);
        background: hsla(var(--pt-intent-primary-hsl), 0.15);
        color: hsl(209,   83%,  46%);
        color: var(--pt-intent-primary-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-primary:active, .bp3-button.bp3-minimal.bp3-intent-primary.bp3-active {
        background: hsla(209,   90%,  50%, 0.3);
        background: hsla(var(--pt-intent-primary-hsl), 0.3);
        color: hsl(209,   83%,  46%);
        color: var(--pt-intent-primary-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-primary:disabled, .bp3-button.bp3-minimal.bp3-intent-primary.bp3-disabled {
        background: none;
        color: hsla(209,   83%,  46%, 0.5);
        color: hsla(var(--pt-intent-primary-text-color-hsl), 0.5); }
        .bp3-button.bp3-minimal.bp3-intent-primary:disabled.bp3-active, .bp3-button.bp3-minimal.bp3-intent-primary.bp3-disabled.bp3-active {
          background: hsla(209,   90%,  50%, 0.3);
          background: hsla(var(--pt-intent-primary-hsl), 0.3); }
      .bp3-button.bp3-minimal.bp3-intent-primary .bp3-button-spinner .bp3-spinner-head {
        stroke: hsl(209,   83%,  46%);
        stroke: var(--pt-intent-primary-text-color); }
      .bp3-dark .bp3-button.bp3-minimal.bp3-intent-primary {
        color: hsl(209,   100%, 59%);
        color: var(--pt-dark-intent-primary-text-color); }
        .bp3-dark .bp3-button.bp3-minimal.bp3-intent-primary:hover {
          background: hsla(209,   90%,  50%, 0.2);
          background: hsla(var(--pt-intent-primary-hsl), 0.2);
          color: hsl(209,   100%, 59%);
          color: var(--pt-dark-intent-primary-text-color); }
        .bp3-dark .bp3-button.bp3-minimal.bp3-intent-primary:active, .bp3-dark .bp3-button.bp3-minimal.bp3-intent-primary.bp3-active {
          background: hsla(209,   90%,  50%, 0.3);
          background: hsla(var(--pt-intent-primary-hsl), 0.3);
          color: hsl(209,   100%, 59%);
          color: var(--pt-dark-intent-primary-text-color); }
        .bp3-dark .bp3-button.bp3-minimal.bp3-intent-primary:disabled, .bp3-dark .bp3-button.bp3-minimal.bp3-intent-primary.bp3-disabled {
          background: none;
          color: hsla(209,   100%, 59%, 0.5);
          color: hsla(var(--pt-dark-intent-primary-text-color-hsl), 0.5); }
          .bp3-dark .bp3-button.bp3-minimal.bp3-intent-primary:disabled.bp3-active, .bp3-dark .bp3-button.bp3-minimal.bp3-intent-primary.bp3-disabled.bp3-active {
            background: hsla(209,   90%,  50%, 0.3);
            background: hsla(var(--pt-intent-primary-hsl), 0.3); }
    .bp3-button.bp3-minimal.bp3-intent-success {
      color: hsl(113, 100%, 29%);
      color: var(--pt-intent-success-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-success:hover, .bp3-button.bp3-minimal.bp3-intent-success:active, .bp3-button.bp3-minimal.bp3-intent-success.bp3-active {
        background: none;
        box-shadow: none;
        color: hsl(113, 100%, 29%);
        color: var(--pt-intent-success-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-success:hover {
        background: hsla(113, 100%, 34%, 0.15);
        background: hsla(var(--pt-intent-success-hsl), 0.15);
        color: hsl(113, 100%, 29%);
        color: var(--pt-intent-success-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-success:active, .bp3-button.bp3-minimal.bp3-intent-success.bp3-active {
        background: hsla(113, 100%, 34%, 0.3);
        background: hsla(var(--pt-intent-success-hsl), 0.3);
        color: hsl(113, 100%, 29%);
        color: var(--pt-intent-success-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-success:disabled, .bp3-button.bp3-minimal.bp3-intent-success.bp3-disabled {
        background: none;
        color: hsla(113, 100%, 29%, 0.5);
        color: hsla(var(--pt-intent-success-text-color-hsl), 0.5); }
        .bp3-button.bp3-minimal.bp3-intent-success:disabled.bp3-active, .bp3-button.bp3-minimal.bp3-intent-success.bp3-disabled.bp3-active {
          background: hsla(113, 100%, 34%, 0.3);
          background: hsla(var(--pt-intent-success-hsl), 0.3); }
      .bp3-button.bp3-minimal.bp3-intent-success .bp3-button-spinner .bp3-spinner-head {
        stroke: hsl(113, 100%, 29%);
        stroke: var(--pt-intent-success-text-color); }
      .bp3-dark .bp3-button.bp3-minimal.bp3-intent-success {
        color: hsl(113, 57%,  57%);
        color: var(--pt-dark-intent-success-text-color); }
        .bp3-dark .bp3-button.bp3-minimal.bp3-intent-success:hover {
          background: hsla(113, 100%, 34%, 0.2);
          background: hsla(var(--pt-intent-success-hsl), 0.2);
          color: hsl(113, 57%,  57%);
          color: var(--pt-dark-intent-success-text-color); }
        .bp3-dark .bp3-button.bp3-minimal.bp3-intent-success:active, .bp3-dark .bp3-button.bp3-minimal.bp3-intent-success.bp3-active {
          background: hsla(113, 100%, 34%, 0.3);
          background: hsla(var(--pt-intent-success-hsl), 0.3);
          color: hsl(113, 57%,  57%);
          color: var(--pt-dark-intent-success-text-color); }
        .bp3-dark .bp3-button.bp3-minimal.bp3-intent-success:disabled, .bp3-dark .bp3-button.bp3-minimal.bp3-intent-success.bp3-disabled {
          background: none;
          color: hsla(113, 57%,  57%, 0.5);
          color: hsla(var(--pt-dark-intent-success-text-color-hsl), 0.5); }
          .bp3-dark .bp3-button.bp3-minimal.bp3-intent-success:disabled.bp3-active, .bp3-dark .bp3-button.bp3-minimal.bp3-intent-success.bp3-disabled.bp3-active {
            background: hsla(113, 100%, 34%, 0.3);
            background: hsla(var(--pt-intent-success-hsl), 0.3); }
    .bp3-button.bp3-minimal.bp3-intent-warning {
      color: hsl(30, 67%, 45%);
      color: var(--pt-intent-warning-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-warning:hover, .bp3-button.bp3-minimal.bp3-intent-warning:active, .bp3-button.bp3-minimal.bp3-intent-warning.bp3-active {
        background: none;
        box-shadow: none;
        color: hsl(30, 67%, 45%);
        color: var(--pt-intent-warning-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-warning:hover {
        background: hsla(30, 70%, 51%, 0.15);
        background: hsla(var(--pt-intent-warning-hsl), 0.15);
        color: hsl(30, 67%, 45%);
        color: var(--pt-intent-warning-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-warning:active, .bp3-button.bp3-minimal.bp3-intent-warning.bp3-active {
        background: hsla(30, 70%, 51%, 0.3);
        background: hsla(var(--pt-intent-warning-hsl), 0.3);
        color: hsl(30, 67%, 45%);
        color: var(--pt-intent-warning-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-warning:disabled, .bp3-button.bp3-minimal.bp3-intent-warning.bp3-disabled {
        background: none;
        color: hsla(30, 67%, 45%, 0.5);
        color: hsla(var(--pt-intent-warning-text-color-hsl), 0.5); }
        .bp3-button.bp3-minimal.bp3-intent-warning:disabled.bp3-active, .bp3-button.bp3-minimal.bp3-intent-warning.bp3-disabled.bp3-active {
          background: hsla(30, 70%, 51%, 0.3);
          background: hsla(var(--pt-intent-warning-hsl), 0.3); }
      .bp3-button.bp3-minimal.bp3-intent-warning .bp3-button-spinner .bp3-spinner-head {
        stroke: hsl(30, 67%, 45%);
        stroke: var(--pt-intent-warning-text-color); }
      .bp3-dark .bp3-button.bp3-minimal.bp3-intent-warning {
        color: hsl(30, 100%, 70%);
        color: var(--pt-dark-intent-warning-text-color); }
        .bp3-dark .bp3-button.bp3-minimal.bp3-intent-warning:hover {
          background: hsla(30, 70%, 51%, 0.2);
          background: hsla(var(--pt-intent-warning-hsl), 0.2);
          color: hsl(30, 100%, 70%);
          color: var(--pt-dark-intent-warning-text-color); }
        .bp3-dark .bp3-button.bp3-minimal.bp3-intent-warning:active, .bp3-dark .bp3-button.bp3-minimal.bp3-intent-warning.bp3-active {
          background: hsla(30, 70%, 51%, 0.3);
          background: hsla(var(--pt-intent-warning-hsl), 0.3);
          color: hsl(30, 100%, 70%);
          color: var(--pt-dark-intent-warning-text-color); }
        .bp3-dark .bp3-button.bp3-minimal.bp3-intent-warning:disabled, .bp3-dark .bp3-button.bp3-minimal.bp3-intent-warning.bp3-disabled {
          background: none;
          color: hsla(30, 100%, 70%, 0.5);
          color: hsla(var(--pt-dark-intent-warning-text-color-hsl), 0.5); }
          .bp3-dark .bp3-button.bp3-minimal.bp3-intent-warning:disabled.bp3-active, .bp3-dark .bp3-button.bp3-minimal.bp3-intent-warning.bp3-disabled.bp3-active {
            background: hsla(30, 70%, 51%, 0.3);
            background: hsla(var(--pt-intent-warning-hsl), 0.3); }
    .bp3-button.bp3-minimal.bp3-intent-danger {
      color: hsl(0, 60%, 47%);
      color: var(--pt-intent-danger-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-danger:hover, .bp3-button.bp3-minimal.bp3-intent-danger:active, .bp3-button.bp3-minimal.bp3-intent-danger.bp3-active {
        background: none;
        box-shadow: none;
        color: hsl(0, 60%, 47%);
        color: var(--pt-intent-danger-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-danger:hover {
        background: hsla(0, 69%, 54%, 0.15);
        background: hsla(var(--pt-intent-danger-hsl), 0.15);
        color: hsl(0, 60%, 47%);
        color: var(--pt-intent-danger-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-danger:active, .bp3-button.bp3-minimal.bp3-intent-danger.bp3-active {
        background: hsla(0, 69%, 54%, 0.3);
        background: hsla(var(--pt-intent-danger-hsl), 0.3);
        color: hsl(0, 60%, 47%);
        color: var(--pt-intent-danger-text-color); }
      .bp3-button.bp3-minimal.bp3-intent-danger:disabled, .bp3-button.bp3-minimal.bp3-intent-danger.bp3-disabled {
        background: none;
        color: hsla(0, 60%, 47%, 0.5);
        color: hsla(var(--pt-intent-danger-text-color-hsl), 0.5); }
        .bp3-button.bp3-minimal.bp3-intent-danger:disabled.bp3-active, .bp3-button.bp3-minimal.bp3-intent-danger.bp3-disabled.bp3-active {
          background: hsla(0, 69%, 54%, 0.3);
          background: hsla(var(--pt-intent-danger-hsl), 0.3); }
      .bp3-button.bp3-minimal.bp3-intent-danger .bp3-button-spinner .bp3-spinner-head {
        stroke: hsl(0, 60%, 47%);
        stroke: var(--pt-intent-danger-text-color); }
      .bp3-dark .bp3-button.bp3-minimal.bp3-intent-danger {
        color: hsl(0, 100%, 73%);
        color: var(--pt-dark-intent-danger-text-color); }
        .bp3-dark .bp3-button.bp3-minimal.bp3-intent-danger:hover {
          background: hsla(0, 69%, 54%, 0.2);
          background: hsla(var(--pt-intent-danger-hsl), 0.2);
          color: hsl(0, 100%, 73%);
          color: var(--pt-dark-intent-danger-text-color); }
        .bp3-dark .bp3-button.bp3-minimal.bp3-intent-danger:active, .bp3-dark .bp3-button.bp3-minimal.bp3-intent-danger.bp3-active {
          background: hsla(0, 69%, 54%, 0.3);
          background: hsla(var(--pt-intent-danger-hsl), 0.3);
          color: hsl(0, 100%, 73%);
          color: var(--pt-dark-intent-danger-text-color); }
        .bp3-dark .bp3-button.bp3-minimal.bp3-intent-danger:disabled, .bp3-dark .bp3-button.bp3-minimal.bp3-intent-danger.bp3-disabled {
          background: none;
          color: hsla(0, 100%, 73%, 0.5);
          color: hsla(var(--pt-dark-intent-danger-text-color-hsl), 0.5); }
          .bp3-dark .bp3-button.bp3-minimal.bp3-intent-danger:disabled.bp3-active, .bp3-dark .bp3-button.bp3-minimal.bp3-intent-danger.bp3-disabled.bp3-active {
            background: hsla(0, 69%, 54%, 0.3);
            background: hsla(var(--pt-intent-danger-hsl), 0.3); }
  .bp3-button.bp3-outlined {
    background: none;
    background: var(--minimal-button-background-color);
    box-shadow: none;
    border: 1px solid hsla(209, 0%, 15%, 0.2);
    border: var(--button-outlined-width) solid hsla(var(--dark-gray1-hsl), 0.2);
    box-sizing: border-box; }
    .bp3-button.bp3-outlined:hover {
      background: hsla(209, 0%, 73%, 0.3);
      background: var(--minimal-button-background-color-hover);
      box-shadow: none;
      color: hsl(209, 0%, 15%);
      color: var(--pt-text-color);
      text-decoration: none; }
    .bp3-button.bp3-outlined:active, .bp3-button.bp3-outlined.bp3-active {
      background: hsla(209, 0%, 54%, 0.3);
      background: var(--minimal-button-background-color-active);
      box-shadow: none;
      color: hsl(209, 0%, 15%);
      color: var(--pt-text-color); }
    .bp3-button.bp3-outlined:disabled, .bp3-button.bp3-outlined:disabled:hover, .bp3-button.bp3-outlined.bp3-disabled, .bp3-button.bp3-outlined.bp3-disabled:hover {
      background: none;
      color: hsla(209, 0%, 9%, 0.3);
      color: var(--pt-text-color-disabled);
      cursor: not-allowed; }
      .bp3-button.bp3-outlined:disabled.bp3-active, .bp3-button.bp3-outlined:disabled:hover.bp3-active, .bp3-button.bp3-outlined.bp3-disabled.bp3-active, .bp3-button.bp3-outlined.bp3-disabled:hover.bp3-active {
        background: hsla(209, 0%, 54%, 0.3);
        background: var(--minimal-button-background-color-active); }
    .bp3-dark .bp3-button.bp3-outlined {
      background: none;
      background: var(--dark-minimal-button-background-color);
      box-shadow: none;
      color: inherit; }
      .bp3-dark .bp3-button.bp3-outlined:hover, .bp3-dark .bp3-button.bp3-outlined:active, .bp3-dark .bp3-button.bp3-outlined.bp3-active {
        background: none;
        box-shadow: none; }
      .bp3-dark .bp3-button.bp3-outlined:hover {
        background: hsla(209, 0%, 80%, 0.3);
        background: var(--dark-minimal-button-background-color-hover); }
      .bp3-dark .bp3-button.bp3-outlined:active, .bp3-dark .bp3-button.bp3-outlined.bp3-active {
        background: hsla(209, 0%, 63%, 0.3);
        background: var(--dark-minimal-button-background-color-active);
        color: hsl(209, 0%, 97%);
        color: var(--pt-dark-text-color); }
      .bp3-dark .bp3-button.bp3-outlined:disabled, .bp3-dark .bp3-button.bp3-outlined:disabled:hover, .bp3-dark .bp3-button.bp3-outlined.bp3-disabled, .bp3-dark .bp3-button.bp3-outlined.bp3-disabled:hover {
        background: none;
        color: hsla(209, 0%, 100%, 0.3);
        color: var(--pt-dark-text-color-disabled);
        cursor: not-allowed; }
        .bp3-dark .bp3-button.bp3-outlined:disabled.bp3-active, .bp3-dark .bp3-button.bp3-outlined:disabled:hover.bp3-active, .bp3-dark .bp3-button.bp3-outlined.bp3-disabled.bp3-active, .bp3-dark .bp3-button.bp3-outlined.bp3-disabled:hover.bp3-active {
          background: hsla(209, 0%, 63%, 0.3);
          background: var(--dark-minimal-button-background-color-active); }
    .bp3-button.bp3-outlined.bp3-intent-primary {
      color: hsl(209,   83%,  46%);
      color: var(--pt-intent-primary-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-primary:hover, .bp3-button.bp3-outlined.bp3-intent-primary:active, .bp3-button.bp3-outlined.bp3-intent-primary.bp3-active {
        background: none;
        box-shadow: none;
        color: hsl(209,   83%,  46%);
        color: var(--pt-intent-primary-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-primary:hover {
        background: hsla(209,   90%,  50%, 0.15);
        background: hsla(var(--pt-intent-primary-hsl), 0.15);
        color: hsl(209,   83%,  46%);
        color: var(--pt-intent-primary-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-primary:active, .bp3-button.bp3-outlined.bp3-intent-primary.bp3-active {
        background: hsla(209,   90%,  50%, 0.3);
        background: hsla(var(--pt-intent-primary-hsl), 0.3);
        color: hsl(209,   83%,  46%);
        color: var(--pt-intent-primary-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-primary:disabled, .bp3-button.bp3-outlined.bp3-intent-primary.bp3-disabled {
        background: none;
        color: hsla(209,   83%,  46%, 0.5);
        color: hsla(var(--pt-intent-primary-text-color-hsl), 0.5); }
        .bp3-button.bp3-outlined.bp3-intent-primary:disabled.bp3-active, .bp3-button.bp3-outlined.bp3-intent-primary.bp3-disabled.bp3-active {
          background: hsla(209,   90%,  50%, 0.3);
          background: hsla(var(--pt-intent-primary-hsl), 0.3); }
      .bp3-button.bp3-outlined.bp3-intent-primary .bp3-button-spinner .bp3-spinner-head {
        stroke: hsl(209,   83%,  46%);
        stroke: var(--pt-intent-primary-text-color); }
      .bp3-dark .bp3-button.bp3-outlined.bp3-intent-primary {
        color: hsl(209,   100%, 59%);
        color: var(--pt-dark-intent-primary-text-color); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-primary:hover {
          background: hsla(209,   90%,  50%, 0.2);
          background: hsla(var(--pt-intent-primary-hsl), 0.2);
          color: hsl(209,   100%, 59%);
          color: var(--pt-dark-intent-primary-text-color); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-primary:active, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-primary.bp3-active {
          background: hsla(209,   90%,  50%, 0.3);
          background: hsla(var(--pt-intent-primary-hsl), 0.3);
          color: hsl(209,   100%, 59%);
          color: var(--pt-dark-intent-primary-text-color); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-primary:disabled, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-primary.bp3-disabled {
          background: none;
          color: hsla(209,   100%, 59%, 0.5);
          color: hsla(var(--pt-dark-intent-primary-text-color-hsl), 0.5); }
          .bp3-dark .bp3-button.bp3-outlined.bp3-intent-primary:disabled.bp3-active, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-primary.bp3-disabled.bp3-active {
            background: hsla(209,   90%,  50%, 0.3);
            background: hsla(var(--pt-intent-primary-hsl), 0.3); }
    .bp3-button.bp3-outlined.bp3-intent-success {
      color: hsl(113, 100%, 29%);
      color: var(--pt-intent-success-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-success:hover, .bp3-button.bp3-outlined.bp3-intent-success:active, .bp3-button.bp3-outlined.bp3-intent-success.bp3-active {
        background: none;
        box-shadow: none;
        color: hsl(113, 100%, 29%);
        color: var(--pt-intent-success-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-success:hover {
        background: hsla(113, 100%, 34%, 0.15);
        background: hsla(var(--pt-intent-success-hsl), 0.15);
        color: hsl(113, 100%, 29%);
        color: var(--pt-intent-success-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-success:active, .bp3-button.bp3-outlined.bp3-intent-success.bp3-active {
        background: hsla(113, 100%, 34%, 0.3);
        background: hsla(var(--pt-intent-success-hsl), 0.3);
        color: hsl(113, 100%, 29%);
        color: var(--pt-intent-success-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-success:disabled, .bp3-button.bp3-outlined.bp3-intent-success.bp3-disabled {
        background: none;
        color: hsla(113, 100%, 29%, 0.5);
        color: hsla(var(--pt-intent-success-text-color-hsl), 0.5); }
        .bp3-button.bp3-outlined.bp3-intent-success:disabled.bp3-active, .bp3-button.bp3-outlined.bp3-intent-success.bp3-disabled.bp3-active {
          background: hsla(113, 100%, 34%, 0.3);
          background: hsla(var(--pt-intent-success-hsl), 0.3); }
      .bp3-button.bp3-outlined.bp3-intent-success .bp3-button-spinner .bp3-spinner-head {
        stroke: hsl(113, 100%, 29%);
        stroke: var(--pt-intent-success-text-color); }
      .bp3-dark .bp3-button.bp3-outlined.bp3-intent-success {
        color: hsl(113, 57%,  57%);
        color: var(--pt-dark-intent-success-text-color); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-success:hover {
          background: hsla(113, 100%, 34%, 0.2);
          background: hsla(var(--pt-intent-success-hsl), 0.2);
          color: hsl(113, 57%,  57%);
          color: var(--pt-dark-intent-success-text-color); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-success:active, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-success.bp3-active {
          background: hsla(113, 100%, 34%, 0.3);
          background: hsla(var(--pt-intent-success-hsl), 0.3);
          color: hsl(113, 57%,  57%);
          color: var(--pt-dark-intent-success-text-color); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-success:disabled, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-success.bp3-disabled {
          background: none;
          color: hsla(113, 57%,  57%, 0.5);
          color: hsla(var(--pt-dark-intent-success-text-color-hsl), 0.5); }
          .bp3-dark .bp3-button.bp3-outlined.bp3-intent-success:disabled.bp3-active, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-success.bp3-disabled.bp3-active {
            background: hsla(113, 100%, 34%, 0.3);
            background: hsla(var(--pt-intent-success-hsl), 0.3); }
    .bp3-button.bp3-outlined.bp3-intent-warning {
      color: hsl(30, 67%, 45%);
      color: var(--pt-intent-warning-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-warning:hover, .bp3-button.bp3-outlined.bp3-intent-warning:active, .bp3-button.bp3-outlined.bp3-intent-warning.bp3-active {
        background: none;
        box-shadow: none;
        color: hsl(30, 67%, 45%);
        color: var(--pt-intent-warning-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-warning:hover {
        background: hsla(30, 70%, 51%, 0.15);
        background: hsla(var(--pt-intent-warning-hsl), 0.15);
        color: hsl(30, 67%, 45%);
        color: var(--pt-intent-warning-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-warning:active, .bp3-button.bp3-outlined.bp3-intent-warning.bp3-active {
        background: hsla(30, 70%, 51%, 0.3);
        background: hsla(var(--pt-intent-warning-hsl), 0.3);
        color: hsl(30, 67%, 45%);
        color: var(--pt-intent-warning-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-warning:disabled, .bp3-button.bp3-outlined.bp3-intent-warning.bp3-disabled {
        background: none;
        color: hsla(30, 67%, 45%, 0.5);
        color: hsla(var(--pt-intent-warning-text-color-hsl), 0.5); }
        .bp3-button.bp3-outlined.bp3-intent-warning:disabled.bp3-active, .bp3-button.bp3-outlined.bp3-intent-warning.bp3-disabled.bp3-active {
          background: hsla(30, 70%, 51%, 0.3);
          background: hsla(var(--pt-intent-warning-hsl), 0.3); }
      .bp3-button.bp3-outlined.bp3-intent-warning .bp3-button-spinner .bp3-spinner-head {
        stroke: hsl(30, 67%, 45%);
        stroke: var(--pt-intent-warning-text-color); }
      .bp3-dark .bp3-button.bp3-outlined.bp3-intent-warning {
        color: hsl(30, 100%, 70%);
        color: var(--pt-dark-intent-warning-text-color); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-warning:hover {
          background: hsla(30, 70%, 51%, 0.2);
          background: hsla(var(--pt-intent-warning-hsl), 0.2);
          color: hsl(30, 100%, 70%);
          color: var(--pt-dark-intent-warning-text-color); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-warning:active, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-warning.bp3-active {
          background: hsla(30, 70%, 51%, 0.3);
          background: hsla(var(--pt-intent-warning-hsl), 0.3);
          color: hsl(30, 100%, 70%);
          color: var(--pt-dark-intent-warning-text-color); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-warning:disabled, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-warning.bp3-disabled {
          background: none;
          color: hsla(30, 100%, 70%, 0.5);
          color: hsla(var(--pt-dark-intent-warning-text-color-hsl), 0.5); }
          .bp3-dark .bp3-button.bp3-outlined.bp3-intent-warning:disabled.bp3-active, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-warning.bp3-disabled.bp3-active {
            background: hsla(30, 70%, 51%, 0.3);
            background: hsla(var(--pt-intent-warning-hsl), 0.3); }
    .bp3-button.bp3-outlined.bp3-intent-danger {
      color: hsl(0, 60%, 47%);
      color: var(--pt-intent-danger-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-danger:hover, .bp3-button.bp3-outlined.bp3-intent-danger:active, .bp3-button.bp3-outlined.bp3-intent-danger.bp3-active {
        background: none;
        box-shadow: none;
        color: hsl(0, 60%, 47%);
        color: var(--pt-intent-danger-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-danger:hover {
        background: hsla(0, 69%, 54%, 0.15);
        background: hsla(var(--pt-intent-danger-hsl), 0.15);
        color: hsl(0, 60%, 47%);
        color: var(--pt-intent-danger-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-danger:active, .bp3-button.bp3-outlined.bp3-intent-danger.bp3-active {
        background: hsla(0, 69%, 54%, 0.3);
        background: hsla(var(--pt-intent-danger-hsl), 0.3);
        color: hsl(0, 60%, 47%);
        color: var(--pt-intent-danger-text-color); }
      .bp3-button.bp3-outlined.bp3-intent-danger:disabled, .bp3-button.bp3-outlined.bp3-intent-danger.bp3-disabled {
        background: none;
        color: hsla(0, 60%, 47%, 0.5);
        color: hsla(var(--pt-intent-danger-text-color-hsl), 0.5); }
        .bp3-button.bp3-outlined.bp3-intent-danger:disabled.bp3-active, .bp3-button.bp3-outlined.bp3-intent-danger.bp3-disabled.bp3-active {
          background: hsla(0, 69%, 54%, 0.3);
          background: hsla(var(--pt-intent-danger-hsl), 0.3); }
      .bp3-button.bp3-outlined.bp3-intent-danger .bp3-button-spinner .bp3-spinner-head {
        stroke: hsl(0, 60%, 47%);
        stroke: var(--pt-intent-danger-text-color); }
      .bp3-dark .bp3-button.bp3-outlined.bp3-intent-danger {
        color: hsl(0, 100%, 73%);
        color: var(--pt-dark-intent-danger-text-color); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-danger:hover {
          background: hsla(0, 69%, 54%, 0.2);
          background: hsla(var(--pt-intent-danger-hsl), 0.2);
          color: hsl(0, 100%, 73%);
          color: var(--pt-dark-intent-danger-text-color); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-danger:active, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-danger.bp3-active {
          background: hsla(0, 69%, 54%, 0.3);
          background: hsla(var(--pt-intent-danger-hsl), 0.3);
          color: hsl(0, 100%, 73%);
          color: var(--pt-dark-intent-danger-text-color); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-danger:disabled, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-danger.bp3-disabled {
          background: none;
          color: hsla(0, 100%, 73%, 0.5);
          color: hsla(var(--pt-dark-intent-danger-text-color-hsl), 0.5); }
          .bp3-dark .bp3-button.bp3-outlined.bp3-intent-danger:disabled.bp3-active, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-danger.bp3-disabled.bp3-active {
            background: hsla(0, 69%, 54%, 0.3);
            background: hsla(var(--pt-intent-danger-hsl), 0.3); }
    .bp3-button.bp3-outlined:disabled, .bp3-button.bp3-outlined.bp3-disabled, .bp3-button.bp3-outlined:disabled:hover, .bp3-button.bp3-outlined.bp3-disabled:hover {
      border-color: hsla(209, 0%, 9%, 0.1);
      border-color: hsla(var(--black-hsl), 0.1); }
    .bp3-dark .bp3-button.bp3-outlined {
      border-color: hsla(209, 0%, 100%, 0.4);
      border-color: hsla(var(--white-hsl), 0.4); }
      .bp3-dark .bp3-button.bp3-outlined:disabled, .bp3-dark .bp3-button.bp3-outlined:disabled:hover, .bp3-dark .bp3-button.bp3-outlined.bp3-disabled, .bp3-dark .bp3-button.bp3-outlined.bp3-disabled:hover {
        border-color: hsla(209, 0%, 100%, 0.2);
        border-color: hsla(var(--white-hsl), 0.2); }
    .bp3-button.bp3-outlined.bp3-intent-primary {
      border-color: hsla(209,   83%,  46%, 0.6);
      border-color: hsla(var(--pt-intent-primary-text-color-hsl), var(--button-outlined-border-intent-opacity)); }
      .bp3-button.bp3-outlined.bp3-intent-primary:disabled, .bp3-button.bp3-outlined.bp3-intent-primary.bp3-disabled {
        border-color: hsla(209,   83%,  46%, 0.2);
        border-color: hsla(var(--pt-intent-primary-text-color-hsl), var(--button-outlined-border-disabled-intent-opacity)); }
      .bp3-dark .bp3-button.bp3-outlined.bp3-intent-primary {
        border-color: hsla(209,   100%, 59%, 0.6);
        border-color: hsla(var(--pt-dark-intent-primary-text-color-hsl), var(--button-outlined-border-intent-opacity)); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-primary:disabled, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-primary.bp3-disabled {
          border-color: hsla(209,   100%, 59%, 0.2);
          border-color: hsla(var(--pt-dark-intent-primary-text-color-hsl), var(--button-outlined-border-disabled-intent-opacity)); }
    .bp3-button.bp3-outlined.bp3-intent-success {
      border-color: hsla(113, 100%, 29%, 0.6);
      border-color: hsla(var(--pt-intent-success-text-color-hsl), var(--button-outlined-border-intent-opacity)); }
      .bp3-button.bp3-outlined.bp3-intent-success:disabled, .bp3-button.bp3-outlined.bp3-intent-success.bp3-disabled {
        border-color: hsla(113, 100%, 29%, 0.2);
        border-color: hsla(var(--pt-intent-success-text-color-hsl), var(--button-outlined-border-disabled-intent-opacity)); }
      .bp3-dark .bp3-button.bp3-outlined.bp3-intent-success {
        border-color: hsla(113, 57%,  57%, 0.6);
        border-color: hsla(var(--pt-dark-intent-success-text-color-hsl), var(--button-outlined-border-intent-opacity)); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-success:disabled, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-success.bp3-disabled {
          border-color: hsla(113, 57%,  57%, 0.2);
          border-color: hsla(var(--pt-dark-intent-success-text-color-hsl), var(--button-outlined-border-disabled-intent-opacity)); }
    .bp3-button.bp3-outlined.bp3-intent-warning {
      border-color: hsla(30, 67%, 45%, 0.6);
      border-color: hsla(var(--pt-intent-warning-text-color-hsl), var(--button-outlined-border-intent-opacity)); }
      .bp3-button.bp3-outlined.bp3-intent-warning:disabled, .bp3-button.bp3-outlined.bp3-intent-warning.bp3-disabled {
        border-color: hsla(30, 67%, 45%, 0.2);
        border-color: hsla(var(--pt-intent-warning-text-color-hsl), var(--button-outlined-border-disabled-intent-opacity)); }
      .bp3-dark .bp3-button.bp3-outlined.bp3-intent-warning {
        border-color: hsla(30, 100%, 70%, 0.6);
        border-color: hsla(var(--pt-dark-intent-warning-text-color-hsl), var(--button-outlined-border-intent-opacity)); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-warning:disabled, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-warning.bp3-disabled {
          border-color: hsla(30, 100%, 70%, 0.2);
          border-color: hsla(var(--pt-dark-intent-warning-text-color-hsl), var(--button-outlined-border-disabled-intent-opacity)); }
    .bp3-button.bp3-outlined.bp3-intent-danger {
      border-color: hsla(0, 60%, 47%, 0.6);
      border-color: hsla(var(--pt-intent-danger-text-color-hsl), var(--button-outlined-border-intent-opacity)); }
      .bp3-button.bp3-outlined.bp3-intent-danger:disabled, .bp3-button.bp3-outlined.bp3-intent-danger.bp3-disabled {
        border-color: hsla(0, 60%, 47%, 0.2);
        border-color: hsla(var(--pt-intent-danger-text-color-hsl), var(--button-outlined-border-disabled-intent-opacity)); }
      .bp3-dark .bp3-button.bp3-outlined.bp3-intent-danger {
        border-color: hsla(0, 100%, 73%, 0.6);
        border-color: hsla(var(--pt-dark-intent-danger-text-color-hsl), var(--button-outlined-border-intent-opacity)); }
        .bp3-dark .bp3-button.bp3-outlined.bp3-intent-danger:disabled, .bp3-dark .bp3-button.bp3-outlined.bp3-intent-danger.bp3-disabled {
          border-color: hsla(0, 100%, 73%, 0.2);
          border-color: hsla(var(--pt-dark-intent-danger-text-color-hsl), var(--button-outlined-border-disabled-intent-opacity)); }

a.bp3-button {
  text-align: center;
  text-decoration: none;
  transition: none; }
  a.bp3-button, a.bp3-button:hover, a.bp3-button:active {
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color); }
  a.bp3-button.bp3-disabled {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--button-color-disabled); }

.bp3-button-text {
  -webkit-flex: 0 1 auto;
          flex: 0 1 auto; }

.bp3-button.bp3-align-left .bp3-button-text, .bp3-button.bp3-align-right .bp3-button-text,
.bp3-button-group.bp3-align-left .bp3-button-text,
.bp3-button-group.bp3-align-right .bp3-button-text {
  -webkit-flex: 1 1 auto;
          flex: 1 1 auto; }

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
/*
Button groups

Markup:
<div class="bp3-button-group {{.modifier}}">
  <button type="button" class="bp3-button bp3-intent-success">Save</button>
  <button type="button" class="bp3-button bp3-intent-success bp3-icon-caret-down"></button>
</div>
<div class="bp3-button-group {{.modifier}}">
  <a class="bp3-button bp3-icon-database" tabindex="0" role="button">Queries</a>
  <a class="bp3-button bp3-icon-function" tabindex="0" role="button">Functions</a>
  <a class="bp3-button" tabindex="0" role="button">
    Options <span class="bp3-icon-standard bp3-icon-caret-down bp3-align-right"></span>
  </a>
</div>
<div class="bp3-button-group {{.modifier}}">
  <a class="bp3-button bp3-icon-chart" tabindex="0" role="button"></a>
  <a class="bp3-button bp3-icon-control" tabindex="0" role="button"></a>
  <a class="bp3-button bp3-icon-graph" tabindex="0" role="button"></a>
  <a class="bp3-button bp3-icon-camera" tabindex="0" role="button"></a>
  <a class="bp3-button bp3-icon-map" tabindex="0" role="button"></a>
  <a class="bp3-button bp3-icon-code" tabindex="0" role="button"></a>
  <a class="bp3-button bp3-icon-th" tabindex="0" role="button"></a>
  <a class="bp3-button bp3-icon-time" tabindex="0" role="button"></a>
  <a class="bp3-button bp3-icon-compressed" tabindex="0" role="button"></a>
</div>

.bp3-fill - Buttons expand equally to fill container
.bp3-large - Use large buttons
.bp3-minimal - Use minimal buttons
.bp3-vertical - Vertical layout

Styleguide button-group
*/
.bp3-button-group {
  display: -webkit-inline-flex;
  display: inline-flex;
  /*
  Responsive

  Markup:
  <div class="bp3-button-group bp3-large bp3-fill">
    <a class="bp3-button bp3-intent-primary bp3-fixed" tabindex="0" role="button">Start</a>
    <a class="bp3-button bp3-intent-primary" tabindex="0" role="button">Left</a>
    <a class="bp3-button bp3-intent-primary bp3-active" tabindex="0" role="button">Middle</a>
    <a class="bp3-button bp3-intent-primary" tabindex="0" role="button">Right</a>
    <a class="bp3-button bp3-intent-primary bp3-fixed" tabindex="0" role="button">End</a>
  </div>
  <br />
  <div class="bp3-button-group bp3-fill">
    <button class="bp3-button bp3-icon-arrow-left"></button>
    <button class="bp3-button bp3-fill">Middle</button>
    <button class="bp3-button bp3-icon-arrow-right"></button>
  </div>

  Styleguide button-group}-fill
  */
  /*
  Vertical button groups

  Markup:
  <div class="bp3-button-group bp3-vertical">
    <a class="bp3-button bp3-icon-search-template" role="button" tabindex="0"></a>
    <a class="bp3-button bp3-icon-zoom-in" role="button" tabindex="0"></a>
    <a class="bp3-button bp3-icon-zoom-out" role="button" tabindex="0"></a>
    <a class="bp3-button bp3-icon-zoom-to-fit" role="button" tabindex="0"></a>
  </div>
  <div class="bp3-button-group bp3-vertical">
    <button type="button" class="bp3-button bp3-active">Home</button>
    <button type="button" class="bp3-button">Pages</button>
    <button type="button" class="bp3-button">Blog</button>
    <button type="button" class="bp3-button">Calendar</button>
  </div>
  <div class="bp3-button-group bp3-vertical bp3-align-left bp3-large">
    <button type="button" class="bp3-button bp3-intent-primary bp3-icon-document">Text</button>
    <button type="button" class="bp3-button bp3-intent-primary bp3-icon-media bp3-active">Media</button>
    <button type="button" class="bp3-button bp3-intent-primary bp3-icon-link">Sources</button>
  </div>

  Styleguide button-group-vertical
  */ }
  .bp3-button-group .bp3-button {
    -webkit-flex: 0 0 auto;
            flex: 0 0 auto;
    position: relative;
    z-index: 4; }
    .bp3-button-group .bp3-button:focus {
      z-index: 5; }
    .bp3-button-group .bp3-button:hover {
      z-index: 6; }
    .bp3-button-group .bp3-button:active, .bp3-button-group .bp3-button.bp3-active {
      z-index: 7; }
    .bp3-button-group .bp3-button:disabled, .bp3-button-group .bp3-button.bp3-disabled {
      z-index: 3; }
    .bp3-button-group .bp3-button[class*="bp3-intent-"] {
      z-index: 9; }
      .bp3-button-group .bp3-button[class*="bp3-intent-"]:focus {
        z-index: 10; }
      .bp3-button-group .bp3-button[class*="bp3-intent-"]:hover {
        z-index: 11; }
      .bp3-button-group .bp3-button[class*="bp3-intent-"]:active, .bp3-button-group .bp3-button[class*="bp3-intent-"].bp3-active {
        z-index: 12; }
      .bp3-button-group .bp3-button[class*="bp3-intent-"]:disabled, .bp3-button-group .bp3-button[class*="bp3-intent-"].bp3-disabled {
        z-index: 8; }
  .bp3-button-group:not(.bp3-minimal) > .bp3-popover-wrapper:not(:first-child) .bp3-button,
  .bp3-button-group:not(.bp3-minimal) > .bp3-button:not(:first-child) {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0; }
  .bp3-button-group:not(.bp3-minimal) > .bp3-popover-wrapper:not(:last-child) .bp3-button,
  .bp3-button-group:not(.bp3-minimal) > .bp3-button:not(:last-child) {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
    margin-right: -1px; }
  .bp3-button-group.bp3-minimal .bp3-button {
    background: none;
    background: var(--minimal-button-background-color);
    box-shadow: none; }
    .bp3-button-group.bp3-minimal .bp3-button:hover {
      background: hsla(209, 0%, 73%, 0.3);
      background: var(--minimal-button-background-color-hover);
      box-shadow: none;
      color: hsl(209, 0%, 15%);
      color: var(--pt-text-color);
      text-decoration: none; }
    .bp3-button-group.bp3-minimal .bp3-button:active, .bp3-button-group.bp3-minimal .bp3-button.bp3-active {
      background: hsla(209, 0%, 54%, 0.3);
      background: var(--minimal-button-background-color-active);
      box-shadow: none;
      color: hsl(209, 0%, 15%);
      color: var(--pt-text-color); }
    .bp3-button-group.bp3-minimal .bp3-button:disabled, .bp3-button-group.bp3-minimal .bp3-button:disabled:hover, .bp3-button-group.bp3-minimal .bp3-button.bp3-disabled, .bp3-button-group.bp3-minimal .bp3-button.bp3-disabled:hover {
      background: none;
      color: hsla(209, 0%, 9%, 0.3);
      color: var(--pt-text-color-disabled);
      cursor: not-allowed; }
      .bp3-button-group.bp3-minimal .bp3-button:disabled.bp3-active, .bp3-button-group.bp3-minimal .bp3-button:disabled:hover.bp3-active, .bp3-button-group.bp3-minimal .bp3-button.bp3-disabled.bp3-active, .bp3-button-group.bp3-minimal .bp3-button.bp3-disabled:hover.bp3-active {
        background: hsla(209, 0%, 54%, 0.3);
        background: var(--minimal-button-background-color-active); }
    .bp3-dark .bp3-button-group.bp3-minimal .bp3-button {
      background: none;
      background: var(--dark-minimal-button-background-color);
      box-shadow: none;
      color: inherit; }
      .bp3-dark .bp3-button-group.bp3-minimal .bp3-button:hover, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button:active, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-active {
        background: none;
        box-shadow: none; }
      .bp3-dark .bp3-button-group.bp3-minimal .bp3-button:hover {
        background: hsla(209, 0%, 80%, 0.3);
        background: var(--dark-minimal-button-background-color-hover); }
      .bp3-dark .bp3-button-group.bp3-minimal .bp3-button:active, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-active {
        background: hsla(209, 0%, 63%, 0.3);
        background: var(--dark-minimal-button-background-color-active);
        color: hsl(209, 0%, 97%);
        color: var(--pt-dark-text-color); }
      .bp3-dark .bp3-button-group.bp3-minimal .bp3-button:disabled, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button:disabled:hover, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-disabled, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-disabled:hover {
        background: none;
        color: hsla(209, 0%, 100%, 0.3);
        color: var(--pt-dark-text-color-disabled);
        cursor: not-allowed; }
        .bp3-dark .bp3-button-group.bp3-minimal .bp3-button:disabled.bp3-active, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button:disabled:hover.bp3-active, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-disabled.bp3-active, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-disabled:hover.bp3-active {
          background: hsla(209, 0%, 63%, 0.3);
          background: var(--dark-minimal-button-background-color-active); }
    .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary {
      color: hsl(209,   83%,  46%);
      color: var(--pt-intent-primary-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary:hover, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary:active, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary.bp3-active {
        background: none;
        box-shadow: none;
        color: hsl(209,   83%,  46%);
        color: var(--pt-intent-primary-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary:hover {
        background: hsla(209,   90%,  50%, 0.15);
        background: hsla(var(--pt-intent-primary-hsl), 0.15);
        color: hsl(209,   83%,  46%);
        color: var(--pt-intent-primary-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary:active, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary.bp3-active {
        background: hsla(209,   90%,  50%, 0.3);
        background: hsla(var(--pt-intent-primary-hsl), 0.3);
        color: hsl(209,   83%,  46%);
        color: var(--pt-intent-primary-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary:disabled, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary.bp3-disabled {
        background: none;
        color: hsla(209,   83%,  46%, 0.5);
        color: hsla(var(--pt-intent-primary-text-color-hsl), 0.5); }
        .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary:disabled.bp3-active, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary.bp3-disabled.bp3-active {
          background: hsla(209,   90%,  50%, 0.3);
          background: hsla(var(--pt-intent-primary-hsl), 0.3); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary .bp3-button-spinner .bp3-spinner-head {
        stroke: hsl(209,   83%,  46%);
        stroke: var(--pt-intent-primary-text-color); }
      .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary {
        color: hsl(209,   100%, 59%);
        color: var(--pt-dark-intent-primary-text-color); }
        .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary:hover {
          background: hsla(209,   90%,  50%, 0.2);
          background: hsla(var(--pt-intent-primary-hsl), 0.2);
          color: hsl(209,   100%, 59%);
          color: var(--pt-dark-intent-primary-text-color); }
        .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary:active, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary.bp3-active {
          background: hsla(209,   90%,  50%, 0.3);
          background: hsla(var(--pt-intent-primary-hsl), 0.3);
          color: hsl(209,   100%, 59%);
          color: var(--pt-dark-intent-primary-text-color); }
        .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary:disabled, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary.bp3-disabled {
          background: none;
          color: hsla(209,   100%, 59%, 0.5);
          color: hsla(var(--pt-dark-intent-primary-text-color-hsl), 0.5); }
          .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary:disabled.bp3-active, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-primary.bp3-disabled.bp3-active {
            background: hsla(209,   90%,  50%, 0.3);
            background: hsla(var(--pt-intent-primary-hsl), 0.3); }
    .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success {
      color: hsl(113, 100%, 29%);
      color: var(--pt-intent-success-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success:hover, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success:active, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success.bp3-active {
        background: none;
        box-shadow: none;
        color: hsl(113, 100%, 29%);
        color: var(--pt-intent-success-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success:hover {
        background: hsla(113, 100%, 34%, 0.15);
        background: hsla(var(--pt-intent-success-hsl), 0.15);
        color: hsl(113, 100%, 29%);
        color: var(--pt-intent-success-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success:active, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success.bp3-active {
        background: hsla(113, 100%, 34%, 0.3);
        background: hsla(var(--pt-intent-success-hsl), 0.3);
        color: hsl(113, 100%, 29%);
        color: var(--pt-intent-success-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success:disabled, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success.bp3-disabled {
        background: none;
        color: hsla(113, 100%, 29%, 0.5);
        color: hsla(var(--pt-intent-success-text-color-hsl), 0.5); }
        .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success:disabled.bp3-active, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success.bp3-disabled.bp3-active {
          background: hsla(113, 100%, 34%, 0.3);
          background: hsla(var(--pt-intent-success-hsl), 0.3); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success .bp3-button-spinner .bp3-spinner-head {
        stroke: hsl(113, 100%, 29%);
        stroke: var(--pt-intent-success-text-color); }
      .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success {
        color: hsl(113, 57%,  57%);
        color: var(--pt-dark-intent-success-text-color); }
        .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success:hover {
          background: hsla(113, 100%, 34%, 0.2);
          background: hsla(var(--pt-intent-success-hsl), 0.2);
          color: hsl(113, 57%,  57%);
          color: var(--pt-dark-intent-success-text-color); }
        .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success:active, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success.bp3-active {
          background: hsla(113, 100%, 34%, 0.3);
          background: hsla(var(--pt-intent-success-hsl), 0.3);
          color: hsl(113, 57%,  57%);
          color: var(--pt-dark-intent-success-text-color); }
        .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success:disabled, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success.bp3-disabled {
          background: none;
          color: hsla(113, 57%,  57%, 0.5);
          color: hsla(var(--pt-dark-intent-success-text-color-hsl), 0.5); }
          .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success:disabled.bp3-active, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-success.bp3-disabled.bp3-active {
            background: hsla(113, 100%, 34%, 0.3);
            background: hsla(var(--pt-intent-success-hsl), 0.3); }
    .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning {
      color: hsl(30, 67%, 45%);
      color: var(--pt-intent-warning-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning:hover, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning:active, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning.bp3-active {
        background: none;
        box-shadow: none;
        color: hsl(30, 67%, 45%);
        color: var(--pt-intent-warning-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning:hover {
        background: hsla(30, 70%, 51%, 0.15);
        background: hsla(var(--pt-intent-warning-hsl), 0.15);
        color: hsl(30, 67%, 45%);
        color: var(--pt-intent-warning-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning:active, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning.bp3-active {
        background: hsla(30, 70%, 51%, 0.3);
        background: hsla(var(--pt-intent-warning-hsl), 0.3);
        color: hsl(30, 67%, 45%);
        color: var(--pt-intent-warning-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning:disabled, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning.bp3-disabled {
        background: none;
        color: hsla(30, 67%, 45%, 0.5);
        color: hsla(var(--pt-intent-warning-text-color-hsl), 0.5); }
        .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning:disabled.bp3-active, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning.bp3-disabled.bp3-active {
          background: hsla(30, 70%, 51%, 0.3);
          background: hsla(var(--pt-intent-warning-hsl), 0.3); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning .bp3-button-spinner .bp3-spinner-head {
        stroke: hsl(30, 67%, 45%);
        stroke: var(--pt-intent-warning-text-color); }
      .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning {
        color: hsl(30, 100%, 70%);
        color: var(--pt-dark-intent-warning-text-color); }
        .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning:hover {
          background: hsla(30, 70%, 51%, 0.2);
          background: hsla(var(--pt-intent-warning-hsl), 0.2);
          color: hsl(30, 100%, 70%);
          color: var(--pt-dark-intent-warning-text-color); }
        .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning:active, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning.bp3-active {
          background: hsla(30, 70%, 51%, 0.3);
          background: hsla(var(--pt-intent-warning-hsl), 0.3);
          color: hsl(30, 100%, 70%);
          color: var(--pt-dark-intent-warning-text-color); }
        .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning:disabled, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning.bp3-disabled {
          background: none;
          color: hsla(30, 100%, 70%, 0.5);
          color: hsla(var(--pt-dark-intent-warning-text-color-hsl), 0.5); }
          .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning:disabled.bp3-active, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-warning.bp3-disabled.bp3-active {
            background: hsla(30, 70%, 51%, 0.3);
            background: hsla(var(--pt-intent-warning-hsl), 0.3); }
    .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger {
      color: hsl(0, 60%, 47%);
      color: var(--pt-intent-danger-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger:hover, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger:active, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger.bp3-active {
        background: none;
        box-shadow: none;
        color: hsl(0, 60%, 47%);
        color: var(--pt-intent-danger-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger:hover {
        background: hsla(0, 69%, 54%, 0.15);
        background: hsla(var(--pt-intent-danger-hsl), 0.15);
        color: hsl(0, 60%, 47%);
        color: var(--pt-intent-danger-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger:active, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger.bp3-active {
        background: hsla(0, 69%, 54%, 0.3);
        background: hsla(var(--pt-intent-danger-hsl), 0.3);
        color: hsl(0, 60%, 47%);
        color: var(--pt-intent-danger-text-color); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger:disabled, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger.bp3-disabled {
        background: none;
        color: hsla(0, 60%, 47%, 0.5);
        color: hsla(var(--pt-intent-danger-text-color-hsl), 0.5); }
        .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger:disabled.bp3-active, .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger.bp3-disabled.bp3-active {
          background: hsla(0, 69%, 54%, 0.3);
          background: hsla(var(--pt-intent-danger-hsl), 0.3); }
      .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger .bp3-button-spinner .bp3-spinner-head {
        stroke: hsl(0, 60%, 47%);
        stroke: var(--pt-intent-danger-text-color); }
      .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger {
        color: hsl(0, 100%, 73%);
        color: var(--pt-dark-intent-danger-text-color); }
        .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger:hover {
          background: hsla(0, 69%, 54%, 0.2);
          background: hsla(var(--pt-intent-danger-hsl), 0.2);
          color: hsl(0, 100%, 73%);
          color: var(--pt-dark-intent-danger-text-color); }
        .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger:active, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger.bp3-active {
          background: hsla(0, 69%, 54%, 0.3);
          background: hsla(var(--pt-intent-danger-hsl), 0.3);
          color: hsl(0, 100%, 73%);
          color: var(--pt-dark-intent-danger-text-color); }
        .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger:disabled, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger.bp3-disabled {
          background: none;
          color: hsla(0, 100%, 73%, 0.5);
          color: hsla(var(--pt-dark-intent-danger-text-color-hsl), 0.5); }
          .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger:disabled.bp3-active, .bp3-dark .bp3-button-group.bp3-minimal .bp3-button.bp3-intent-danger.bp3-disabled.bp3-active {
            background: hsla(0, 69%, 54%, 0.3);
            background: hsla(var(--pt-intent-danger-hsl), 0.3); }
  .bp3-button-group .bp3-popover-wrapper,
  .bp3-button-group .bp3-popover-target {
    display: -webkit-flex;
    display: flex;
    -webkit-flex: 1 1 auto;
            flex: 1 1 auto; }
  .bp3-button-group.bp3-fill {
    display: -webkit-flex;
    display: flex;
    width: 100%; }
  .bp3-button-group .bp3-button.bp3-fill,
  .bp3-button-group.bp3-fill .bp3-button:not(.bp3-fixed) {
    -webkit-flex: 1 1 auto;
            flex: 1 1 auto; }
  .bp3-button-group.bp3-vertical {
    -webkit-align-items: stretch;
            align-items: stretch;
    -webkit-flex-direction: column;
            flex-direction: column;
    vertical-align: top; }
    .bp3-button-group.bp3-vertical.bp3-fill {
      height: 100%;
      width: unset; }
    .bp3-button-group.bp3-vertical .bp3-button {
      margin-right: 0 !important;
      /* stylelint-disable-line declaration-no-important */
      width: 100%; }
    .bp3-button-group.bp3-vertical:not(.bp3-minimal) > .bp3-popover-wrapper:first-child .bp3-button,
    .bp3-button-group.bp3-vertical:not(.bp3-minimal) > .bp3-button:first-child {
      border-radius: 6px 6px 0 0;
      border-radius: var(--pt-border-radius) var(--pt-border-radius) 0 0; }
    .bp3-button-group.bp3-vertical:not(.bp3-minimal) > .bp3-popover-wrapper:last-child .bp3-button,
    .bp3-button-group.bp3-vertical:not(.bp3-minimal) > .bp3-button:last-child {
      border-radius: 0 0 6px 6px;
      border-radius: 0 0 var(--pt-border-radius) var(--pt-border-radius); }
    .bp3-button-group.bp3-vertical:not(.bp3-minimal) > .bp3-popover-wrapper:not(:last-child) .bp3-button,
    .bp3-button-group.bp3-vertical:not(.bp3-minimal) > .bp3-button:not(:last-child) {
      margin-bottom: -1px; }
  .bp3-button-group.bp3-align-left .bp3-button {
    text-align: left; }
  .bp3-dark .bp3-button-group:not(.bp3-minimal) > .bp3-popover-wrapper:not(:last-child) .bp3-button,
  .bp3-dark .bp3-button-group:not(.bp3-minimal) > .bp3-button:not(:last-child) {
    margin-right: 1px; }
  .bp3-dark .bp3-button-group.bp3-vertical > .bp3-popover-wrapper:not(:last-child) .bp3-button,
  .bp3-dark .bp3-button-group.bp3-vertical > .bp3-button:not(:last-child) {
    margin-bottom: 1px; }

/*
Callout

Markup:
<div class="bp3-callout {{.modifier}}">
  <h4 class="bp3-heading">Callout Heading</h4>
  It's dangerous to go alone! Take this.
</div>

.bp3-intent-primary - Primary intent
.bp3-intent-success - Success intent
.bp3-intent-warning - Warning intent
.bp3-intent-danger  - Danger intent
.bp3-icon-info-sign - With an icon

Styleguide callout
*/
.bp3-callout {
    font-size: 14px;
    line-height: 1.5;
    background-color: hsla(209, 0%, 63%, 0.15);
    background-color: hsla(var(--gray3-hsl), 0.15);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    padding: 10px 12px 9px;
    position: relative;
    width: 100%;
}

.bp3-callout[class*="bp3-icon-"] {
    padding-left: 40px;
}

.bp3-callout[class*="bp3-icon-"]::before {
    font-family: "Icons20", sans-serif;
    font-size: 20px;
    font-style: normal;
    font-weight: 400;
    line-height: 1;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
    left: 10px;
    position: absolute;
    top: 10px;
}

.bp3-callout.bp3-callout-icon {
    padding-left: 40px;
}

.bp3-callout.bp3-callout-icon > .bp3-icon:first-child {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
    left: 10px;
    position: absolute;
    top: 10px;
}

.bp3-callout .bp3-heading {
    line-height: 20px;
    margin-bottom: 5px;
    margin-top: 0;
}

.bp3-callout .bp3-heading:last-child {
    margin-bottom: 0;
}

.bp3-dark .bp3-callout {
    background-color: hsla(209, 0%, 63%, 0.2);
    background-color: hsla(var(--gray3-hsl), 0.2);
}

.bp3-dark .bp3-callout[class*="bp3-icon-"]::before {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-icon-color);
}

.bp3-callout.bp3-intent-primary {
    background-color: hsla(209,   90%,  50%, 0.15);
    background-color: hsla(var(--pt-intent-primary-hsl), 0.15);
}

.bp3-callout.bp3-intent-primary[class*="bp3-icon-"]::before,
    .bp3-callout.bp3-intent-primary > .bp3-icon:first-child,
    .bp3-callout.bp3-intent-primary .bp3-heading {
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-dark .bp3-callout.bp3-intent-primary {
    background-color: hsla(209,   90%,  50%, 0.25);
    background-color: hsla(var(--pt-intent-primary-hsl), 0.25);
}

.bp3-dark .bp3-callout.bp3-intent-primary[class*="bp3-icon-"]::before,
      .bp3-dark .bp3-callout.bp3-intent-primary > .bp3-icon:first-child,
      .bp3-dark .bp3-callout.bp3-intent-primary .bp3-heading {
    color: hsl(209,   100%, 59%);
    color: var(--pt-dark-intent-primary-text-color);
}

.bp3-callout.bp3-intent-success {
    background-color: hsla(113, 100%, 34%, 0.15);
    background-color: hsla(var(--pt-intent-success-hsl), 0.15);
}

.bp3-callout.bp3-intent-success[class*="bp3-icon-"]::before,
    .bp3-callout.bp3-intent-success > .bp3-icon:first-child,
    .bp3-callout.bp3-intent-success .bp3-heading {
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-dark .bp3-callout.bp3-intent-success {
    background-color: hsla(113, 100%, 34%, 0.25);
    background-color: hsla(var(--pt-intent-success-hsl), 0.25);
}

.bp3-dark .bp3-callout.bp3-intent-success[class*="bp3-icon-"]::before,
      .bp3-dark .bp3-callout.bp3-intent-success > .bp3-icon:first-child,
      .bp3-dark .bp3-callout.bp3-intent-success .bp3-heading {
    color: hsl(113, 57%,  57%);
    color: var(--pt-dark-intent-success-text-color);
}

.bp3-callout.bp3-intent-warning {
    background-color: hsla(30, 70%, 51%, 0.15);
    background-color: hsla(var(--pt-intent-warning-hsl), 0.15);
}

.bp3-callout.bp3-intent-warning[class*="bp3-icon-"]::before,
    .bp3-callout.bp3-intent-warning > .bp3-icon:first-child,
    .bp3-callout.bp3-intent-warning .bp3-heading {
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-dark .bp3-callout.bp3-intent-warning {
    background-color: hsla(30, 70%, 51%, 0.25);
    background-color: hsla(var(--pt-intent-warning-hsl), 0.25);
}

.bp3-dark .bp3-callout.bp3-intent-warning[class*="bp3-icon-"]::before,
      .bp3-dark .bp3-callout.bp3-intent-warning > .bp3-icon:first-child,
      .bp3-dark .bp3-callout.bp3-intent-warning .bp3-heading {
    color: hsl(30, 100%, 70%);
    color: var(--pt-dark-intent-warning-text-color);
}

.bp3-callout.bp3-intent-danger {
    background-color: hsla(0, 69%, 54%, 0.15);
    background-color: hsla(var(--pt-intent-danger-hsl), 0.15);
}

.bp3-callout.bp3-intent-danger[class*="bp3-icon-"]::before,
    .bp3-callout.bp3-intent-danger > .bp3-icon:first-child,
    .bp3-callout.bp3-intent-danger .bp3-heading {
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-dark .bp3-callout.bp3-intent-danger {
    background-color: hsla(0, 69%, 54%, 0.25);
    background-color: hsla(var(--pt-intent-danger-hsl), 0.25);
}

.bp3-dark .bp3-callout.bp3-intent-danger[class*="bp3-icon-"]::before,
      .bp3-dark .bp3-callout.bp3-intent-danger > .bp3-icon:first-child,
      .bp3-dark .bp3-callout.bp3-intent-danger .bp3-heading {
    color: hsl(0, 100%, 73%);
    color: var(--pt-dark-intent-danger-text-color);
}

.bp3-running-text .bp3-callout {
    margin: 20px 0;
}

/*
Cards

Markup:
<div class="bp3-card {{.modifier}}">
  We build products that make people better at their most important work.
</div>

.bp3-elevation-0 - Ground floor. This level provides just a gentle border shadow.
.bp3-elevation-1 - First. Subtle drop shadow intended for static containers.
.bp3-elevation-2 - Second. An even stronger shadow, moving on up.
.bp3-elevation-3 - Third. For containers overlaying content temporarily.
.bp3-elevation-4 - Fourth. The strongest shadow, usually for overlay containers on top of backdrops.
.bp3-interactive - On hover, increase elevation and use pointer cursor.

Styleguide card
*/
.bp3-card {
    background-color: hsl(209, 0%, 100%);
    background-color: var(--card-background-color);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  0 0 0 hsla(209, 0%, 9%, 0),
  0 0 0 hsla(209, 0%, 9%, 0);
    box-shadow: var(--pt-elevation-shadow-0);
    padding: 20px;
    transition: box-shadow 200ms cubic-bezier(0.4, 1, 0.75, 0.9), -webkit-transform 200ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: transform 200ms cubic-bezier(0.4, 1, 0.75, 0.9), box-shadow 200ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: transform 200ms cubic-bezier(0.4, 1, 0.75, 0.9), box-shadow 200ms cubic-bezier(0.4, 1, 0.75, 0.9), -webkit-transform 200ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: box-shadow 200ms var(--pt-transition-ease), -webkit-transform 200ms var(--pt-transition-ease);
    transition: transform 200ms var(--pt-transition-ease), box-shadow 200ms var(--pt-transition-ease);
    transition: transform 200ms var(--pt-transition-ease), box-shadow 200ms var(--pt-transition-ease), -webkit-transform 200ms var(--pt-transition-ease);
}

.bp3-card.bp3-dark,
  .bp3-dark .bp3-card {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-card-background-color);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4),
  0 0 0 hsla(209, 0%, 9%, 0),
  0 0 0 hsla(209, 0%, 9%, 0);
    box-shadow: var(--pt-dark-elevation-shadow-0);
}

.bp3-elevation-0 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  0 0 0 hsla(209, 0%, 9%, 0),
  0 0 0 hsla(209, 0%, 9%, 0);
    box-shadow: var(--pt-elevation-shadow-0);
}

.bp3-elevation-0.bp3-dark,
  .bp3-dark .bp3-elevation-0 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4),
  0 0 0 hsla(209, 0%, 9%, 0),
  0 0 0 hsla(209, 0%, 9%, 0);
    box-shadow: var(--pt-dark-elevation-shadow-0);
}

.bp3-elevation-1 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 0 0 hsla(209, 0%, 9%, 0),
  0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-elevation-shadow-1);
}

.bp3-elevation-1.bp3-dark,
  .bp3-dark .bp3-elevation-1 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 0 0 hsla(209, 0%, 9%, 0),
  0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-elevation-shadow-1);
}

.bp3-elevation-2 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 1px 1px hsla(209, 0%, 9%, 0.2),
  0 2px 6px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-elevation-shadow-2);
}

.bp3-elevation-2.bp3-dark,
  .bp3-dark .bp3-elevation-2 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 1px 1px hsla(209, 0%, 9%, 0.4),
  0 2px 6px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-elevation-shadow-2);
}

.bp3-elevation-3 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 2px 4px hsla(209, 0%, 9%, 0.2),
  0 8px 24px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-elevation-shadow-3);
}

.bp3-elevation-3.bp3-dark,
  .bp3-dark .bp3-elevation-3 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 2px 4px hsla(209, 0%, 9%, 0.4),
  0 8px 24px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-elevation-shadow-3);
}

.bp3-elevation-4 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 4px 8px hsla(209, 0%, 9%, 0.2),
  0 18px 46px 6px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-elevation-shadow-4);
}

.bp3-elevation-4.bp3-dark,
  .bp3-dark .bp3-elevation-4 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 4px 8px hsla(209, 0%, 9%, 0.4),
  0 18px 46px 6px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-elevation-shadow-4);
}

.bp3-card.bp3-interactive:hover {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 2px 4px hsla(209, 0%, 9%, 0.2),
  0 8px 24px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-elevation-shadow-3);
    cursor: pointer;
}

.bp3-card.bp3-interactive:hover.bp3-dark,
  .bp3-dark .bp3-card.bp3-interactive:hover {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 2px 4px hsla(209, 0%, 9%, 0.4),
  0 8px 24px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-elevation-shadow-3);
}

.bp3-card.bp3-interactive:active {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 0 0 hsla(209, 0%, 9%, 0),
  0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-elevation-shadow-1);
    opacity: 0.9;
    transition-duration: 0;
}

.bp3-card.bp3-interactive:active.bp3-dark,
  .bp3-dark .bp3-card.bp3-interactive:active {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 0 0 hsla(209, 0%, 9%, 0),
  0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-elevation-shadow-1);
}

.bp3-collapse {
    height: 0;
    overflow-y: hidden;
    transition: height 200ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: height 200ms var(--pt-transition-ease);
}

.bp3-collapse .bp3-collapse-body {
    transition: -webkit-transform 200ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: transform 200ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: transform 200ms cubic-bezier(0.4, 1, 0.75, 0.9), -webkit-transform 200ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: -webkit-transform 200ms var(--pt-transition-ease);
    transition: transform 200ms var(--pt-transition-ease);
    transition: transform 200ms var(--pt-transition-ease), -webkit-transform 200ms var(--pt-transition-ease);
}

.bp3-collapse .bp3-collapse-body[aria-hidden="true"] {
    display: none;
}

.bp3-context-menu .bp3-popover-target {
    display: block;
}

.bp3-context-menu-popover-target {
    position: fixed;
}

.bp3-divider {
    border-bottom: 1px solid hsla(209, 0%, 9%, 0.15);
    border-bottom: 1px solid var(--pt-divider-black);
    border-right: 1px solid hsla(209, 0%, 9%, 0.15);
    border-right: 1px solid var(--pt-divider-black);
    margin: 5px;
}

.bp3-dark .bp3-divider {
    border-color: hsla(209, 0%, 9%, 0.4);
    border-color: var(--pt-dark-divider-black);
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
/*
Dialog

Markup:
<!-- this container element fills its parent and centers the .bp3-dialog within it -->
<div class="bp3-dialog-container">
  <div class="bp3-dialog">
    <div class="bp3-dialog-header">
      <span class="bp3-icon-large bp3-icon-inbox"></span>
      <h4 class="bp3-heading">Dialog header</h4>
      <button aria-label="Close" class="bp3-dialog-close-button bp3-button bp3-minimal bp3-icon-cross"></button>
    </div>
    <div class="bp3-dialog-body">
      This dialog hasn't been wired up with any open or close interactions.
      It's just an example of markup and styles.
    </div>
    <div class="bp3-dialog-footer">
      <div class="bp3-dialog-footer-actions">
        <button type="button" class="bp3-button">Secondary button</button>
        <button type="submit" class="bp3-button bp3-intent-primary">Primary button</button>
      </div>
    </div>
  </div>
</div>

Styleguide dialog
*/
.bp3-dialog-container {
    opacity: 1;
    -webkit-transform: scale(1);
    transform: scale(1);
    -webkit-align-items: center;
    align-items: center;
    display: -webkit-flex;
    display: flex;
    -webkit-justify-content: center;
    justify-content: center;
    min-height: 100%;
    pointer-events: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
    width: 100%;
}

.bp3-dialog-container.bp3-overlay-enter > .bp3-dialog, .bp3-dialog-container.bp3-overlay-appear > .bp3-dialog {
    opacity: 0;
    -webkit-transform: scale(0.5);
    transform: scale(0.5);
}

.bp3-dialog-container.bp3-overlay-enter-active > .bp3-dialog, .bp3-dialog-container.bp3-overlay-appear-active > .bp3-dialog {
    opacity: 1;
    -webkit-transform: scale(1);
    transform: scale(1);
    transition-delay: 0;
    transition-duration: 300ms;
    transition-property: opacity, -webkit-transform;
    transition-property: opacity, transform;
    transition-property: opacity, transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);
    transition-timing-function: var(--pt-transition-ease-bounce);
}

.bp3-dialog-container.bp3-overlay-exit > .bp3-dialog {
    opacity: 1;
    -webkit-transform: scale(1);
    transform: scale(1);
}

.bp3-dialog-container.bp3-overlay-exit-active > .bp3-dialog {
    opacity: 0;
    -webkit-transform: scale(0.5);
    transform: scale(0.5);
    transition-delay: 0;
    transition-duration: 300ms;
    transition-property: opacity, -webkit-transform;
    transition-property: opacity, transform;
    transition-property: opacity, transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);
    transition-timing-function: var(--pt-transition-ease-bounce);
}

.bp3-dialog {
    background: hsl(209, 0%, 94%);
    background: var(--light-gray4);
    border-radius: calc(6px * 2);
    border-radius: calc(var(--pt-border-radius) * 2);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 4px 8px hsla(209, 0%, 9%, 0.2),
  0 18px 46px 6px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-dialog-box-shadow);
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
    margin: 30px 0;
    padding-bottom: 20px;
    pointer-events: all;
    -webkit-user-select: text;
    -ms-user-select: text;
    user-select: text;
    width: 500px;
}

.bp3-dialog:focus {
    outline: 0;
}

.bp3-dialog.bp3-dark,
  .bp3-dark .bp3-dialog {
    background: hsl(209, 0%, 25%);
    background: var(--pt-dark-app-background-color);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 4px 8px hsla(209, 0%, 9%, 0.4),
  0 18px 46px 6px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-dialog-box-shadow);
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dialog-header {
    -webkit-align-items: center;
    align-items: center;
    background: hsl(209, 0%, 100%);
    background: var(--white);
    border-radius: calc(6px * 2) calc(6px * 2) 0 0;
    border-radius: calc(var(--pt-border-radius) * 2) calc(var(--pt-border-radius) * 2) 0 0;
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: 0 1px 0 var(--pt-divider-black);
    display: -webkit-flex;
    display: flex;
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto;
    min-height: 40px;
    padding-left: 20px;
    padding-right: 5px;
    z-index: 30;
}

.bp3-dialog-header .bp3-icon-large,
  .bp3-dialog-header .bp3-icon {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto;
    margin-right: 10px;
}

.bp3-dialog-header .bp3-heading {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
    line-height: inherit;
    margin: 0;
}

.bp3-dialog-header .bp3-heading:last-child {
    margin-right: 20px;
}

.bp3-dark .bp3-dialog-header {
    background: hsl(209, 0%, 31%);
    background: var(--dark-gray4);
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 1px 0 var(--pt-dark-divider-black);
}

.bp3-dark .bp3-dialog-header .bp3-icon-large,
    .bp3-dark .bp3-dialog-header .bp3-icon {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-icon-color);
}

.bp3-dialog-body {
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
    line-height: 18px;
    margin: 20px;
}

.bp3-dialog-footer {
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto;
    margin: 0 20px;
}

.bp3-dialog-footer-actions {
    display: -webkit-flex;
    display: flex;
    -webkit-justify-content: flex-end;
    justify-content: flex-end;
}

.bp3-dialog-footer-actions .bp3-button {
    margin-left: 10px;
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-multistep-dialog-panels {
    display: -webkit-flex;
    display: flex;
}

.bp3-multistep-dialog-left-panel {
    display: -webkit-flex;
    display: flex;
    -webkit-flex: 1 1;
    flex: 1 1;
    -webkit-flex-direction: column;
    flex-direction: column;
}

.bp3-dark .bp3-multistep-dialog-left-panel {
    background: hsl(209, 0%, 18%);
    background: var(--dark-gray2);
}

.bp3-multistep-dialog-right-panel {
    background-color: hsl(209, 0%, 97%);
    background-color: var(--light-gray5);
    border-left: 1px solid hsla(209, 0%, 9%, 0.15);
    border-left: 1px solid var(--pt-divider-black);
    border-radius: 0 0 calc(6px * 2) 0;
    border-radius: 0 0 calc(var(--pt-border-radius) * 2) 0;
    -webkit-flex: 3 1;
    flex: 3 1;
    min-width: 0;
}

.bp3-dark .bp3-multistep-dialog-right-panel {
    background-color: hsl(209, 0%, 25%);
    background-color: var(--dark-gray3);
    border-left: 1px solid hsla(209, 0%, 9%, 0.4);
    border-left: 1px solid var(--pt-dark-divider-black);
}

.bp3-multistep-dialog-footer {
    background-color: hsl(209, 0%, 100%);
    background-color: var(--white);
    border-radius: 0 0 calc(6px * 2) 0;
    border-radius: 0 0 calc(var(--pt-border-radius) * 2) 0;
    border-top: 1px solid hsla(209, 0%, 9%, 0.15);
    border-top: 1px solid var(--pt-divider-black);
    padding: 10px;
}

.bp3-dark .bp3-multistep-dialog-footer {
    background: hsl(209, 0%, 31%);
    background: var(--dark-gray4);
    border-top: 1px solid hsla(209, 0%, 9%, 0.4);
    border-top: 1px solid var(--pt-dark-divider-black);
}

.bp3-dialog-step-container {
    background-color: hsl(209, 0%, 97%);
    background-color: var(--light-gray5);
    border-bottom: 1px solid hsla(209, 0%, 9%, 0.15);
    border-bottom: 1px solid var(--pt-divider-black);
}

.bp3-dark .bp3-dialog-step-container {
    background: hsl(209, 0%, 25%);
    background: var(--dark-gray3);
    border-bottom: 1px solid hsla(209, 0%, 9%, 0.4);
    border-bottom: 1px solid var(--pt-dark-divider-black);
}

.bp3-dialog-step-container.bp3-dialog-step-viewed {
    background-color: hsl(209, 0%, 100%);
    background-color: var(--white);
}

.bp3-dark .bp3-dialog-step-container.bp3-dialog-step-viewed {
    background: hsl(209, 0%, 31%);
    background: var(--dark-gray4);
}

.bp3-dialog-step {
    -webkit-align-items: center;
    align-items: center;
    background-color: hsl(209, 0%, 97%);
    background-color: var(--light-gray5);
    border-radius: calc(6px * 2);
    border-radius: calc(var(--pt-border-radius) * 2);
    cursor: not-allowed;
    display: -webkit-flex;
    display: flex;
    margin: 4px;
    padding: 6px 14px;
}

.bp3-dark .bp3-dialog-step {
    background: hsl(209, 0%, 25%);
    background: var(--dark-gray3);
}

.bp3-dialog-step-viewed .bp3-dialog-step {
    background-color: hsl(209, 0%, 100%);
    background-color: var(--white);
    cursor: pointer;
}

.bp3-dark .bp3-dialog-step-viewed .bp3-dialog-step {
    background: hsl(209, 0%, 31%);
    background: var(--dark-gray4);
}

.bp3-dialog-step:hover {
    background-color: hsl(209, 0%, 97%);
    background-color: var(--light-gray5);
}

.bp3-dark .bp3-dialog-step:hover {
    background: hsl(209, 0%, 25%);
    background: var(--dark-gray3);
}

.bp3-dialog-step-icon {
    -webkit-align-items: center;
    align-items: center;
    background-color: hsla(209, 0%, 9%, 0.3);
    background-color: var(--pt-text-color-disabled);
    border-radius: 50%;
    color: hsl(209, 0%, 100%);
    color: var(--white);
    display: -webkit-flex;
    display: flex;
    height: 25px;
    -webkit-justify-content: center;
    justify-content: center;
    width: 25px;
}

.bp3-dark .bp3-dialog-step-icon {
    background-color: hsla(209, 0%, 100%, 0.3);
    background-color: var(--pt-dark-icon-color-disabled);
}

.bp3-active.bp3-dialog-step-viewed .bp3-dialog-step-icon {
    background-color: hsl(209,   100%, 54%);
    background-color: var(--blue4);
}

.bp3-dialog-step-viewed .bp3-dialog-step-icon {
    background-color: hsl(209, 0%, 63%);
    background-color: var(--gray3);
}

.bp3-dialog-step-title {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
    -webkit-flex: 1 1;
    flex: 1 1;
    padding-left: 10px;
}

.bp3-dark .bp3-dialog-step-title {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
}

.bp3-active.bp3-dialog-step-viewed .bp3-dialog-step-title {
    color: hsl(209,   100%, 54%);
    color: var(--blue4);
}

.bp3-dialog-step-viewed:not(.bp3-active) .bp3-dialog-step-title {
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
}

.bp3-dark .bp3-dialog-step-viewed:not(.bp3-active) .bp3-dialog-step-title {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-drawer {
    background: hsl(209, 0%, 100%);
    background: var(--drawer-background-color);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 4px 8px hsla(209, 0%, 9%, 0.2),
  0 18px 46px 6px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-elevation-shadow-4);
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
    margin: 0;
    padding: 0;
}

.bp3-drawer:focus {
    outline: 0;
}

.bp3-drawer.bp3-position-top {
    height: 50%;
    left: 0;
    right: 0;
    top: 0;
}

.bp3-drawer.bp3-position-top.bp3-overlay-enter, .bp3-drawer.bp3-position-top.bp3-overlay-appear {
    -webkit-transform: translateY(-100%);
    transform: translateY(-100%);
}

.bp3-drawer.bp3-position-top.bp3-overlay-enter-active, .bp3-drawer.bp3-position-top.bp3-overlay-appear-active {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    transition-delay: 0;
    transition-duration: 200ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-drawer.bp3-position-top.bp3-overlay-exit {
    -webkit-transform: translateY(0);
    transform: translateY(0);
}

.bp3-drawer.bp3-position-top.bp3-overlay-exit-active {
    -webkit-transform: translateY(-100%);
    transform: translateY(-100%);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-drawer.bp3-position-bottom {
    bottom: 0;
    height: 50%;
    left: 0;
    right: 0;
}

.bp3-drawer.bp3-position-bottom.bp3-overlay-enter, .bp3-drawer.bp3-position-bottom.bp3-overlay-appear {
    -webkit-transform: translateY(100%);
    transform: translateY(100%);
}

.bp3-drawer.bp3-position-bottom.bp3-overlay-enter-active, .bp3-drawer.bp3-position-bottom.bp3-overlay-appear-active {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    transition-delay: 0;
    transition-duration: 200ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-drawer.bp3-position-bottom.bp3-overlay-exit {
    -webkit-transform: translateY(0);
    transform: translateY(0);
}

.bp3-drawer.bp3-position-bottom.bp3-overlay-exit-active {
    -webkit-transform: translateY(100%);
    transform: translateY(100%);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-drawer.bp3-position-left {
    bottom: 0;
    left: 0;
    top: 0;
    width: 50%;
}

.bp3-drawer.bp3-position-left.bp3-overlay-enter, .bp3-drawer.bp3-position-left.bp3-overlay-appear {
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
}

.bp3-drawer.bp3-position-left.bp3-overlay-enter-active, .bp3-drawer.bp3-position-left.bp3-overlay-appear-active {
    -webkit-transform: translateX(0);
    transform: translateX(0);
    transition-delay: 0;
    transition-duration: 200ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-drawer.bp3-position-left.bp3-overlay-exit {
    -webkit-transform: translateX(0);
    transform: translateX(0);
}

.bp3-drawer.bp3-position-left.bp3-overlay-exit-active {
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-drawer.bp3-position-right {
    bottom: 0;
    right: 0;
    top: 0;
    width: 50%;
}

.bp3-drawer.bp3-position-right.bp3-overlay-enter, .bp3-drawer.bp3-position-right.bp3-overlay-appear {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
}

.bp3-drawer.bp3-position-right.bp3-overlay-enter-active, .bp3-drawer.bp3-position-right.bp3-overlay-appear-active {
    -webkit-transform: translateX(0);
    transform: translateX(0);
    transition-delay: 0;
    transition-duration: 200ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-drawer.bp3-position-right.bp3-overlay-exit {
    -webkit-transform: translateX(0);
    transform: translateX(0);
}

.bp3-drawer.bp3-position-right.bp3-overlay-exit-active {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
  .bp3-position-right):not(.bp3-vertical) {
    bottom: 0;
    right: 0;
    top: 0;
    width: 50%;
}

.bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
    .bp3-position-right):not(.bp3-vertical).bp3-overlay-enter, .bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
    .bp3-position-right):not(.bp3-vertical).bp3-overlay-appear {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
}

.bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
    .bp3-position-right):not(.bp3-vertical).bp3-overlay-enter-active, .bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
    .bp3-position-right):not(.bp3-vertical).bp3-overlay-appear-active {
    -webkit-transform: translateX(0);
    transform: translateX(0);
    transition-delay: 0;
    transition-duration: 200ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
    .bp3-position-right):not(.bp3-vertical).bp3-overlay-exit {
    -webkit-transform: translateX(0);
    transform: translateX(0);
}

.bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
    .bp3-position-right):not(.bp3-vertical).bp3-overlay-exit-active {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
  .bp3-position-right).bp3-vertical {
    bottom: 0;
    height: 50%;
    left: 0;
    right: 0;
}

.bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
    .bp3-position-right).bp3-vertical.bp3-overlay-enter, .bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
    .bp3-position-right).bp3-vertical.bp3-overlay-appear {
    -webkit-transform: translateY(100%);
    transform: translateY(100%);
}

.bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
    .bp3-position-right).bp3-vertical.bp3-overlay-enter-active, .bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
    .bp3-position-right).bp3-vertical.bp3-overlay-appear-active {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    transition-delay: 0;
    transition-duration: 200ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
    .bp3-position-right).bp3-vertical.bp3-overlay-exit {
    -webkit-transform: translateY(0);
    transform: translateY(0);
}

.bp3-drawer:not(.bp3-position-top):not(.bp3-position-bottom):not(.bp3-position-left):not(
    .bp3-position-right).bp3-vertical.bp3-overlay-exit-active {
    -webkit-transform: translateY(100%);
    transform: translateY(100%);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-drawer.bp3-dark,
  .bp3-dark .bp3-drawer {
    background: hsl(209, 0%, 31%);
    background: var(--dark-drawer-background-color);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 4px 8px hsla(209, 0%, 9%, 0.4),
  0 18px 46px 6px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-dialog-box-shadow);
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-drawer-header {
    -webkit-align-items: center;
    align-items: center;
    border-radius: 0;
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: 0 1px 0 var(--pt-divider-black);
    display: -webkit-flex;
    display: flex;
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto;
    min-height: 40px;
    padding: 5px;
    padding-left: 20px;
    position: relative;
}

.bp3-drawer-header .bp3-icon-large,
  .bp3-drawer-header .bp3-icon {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto;
    margin-right: 10px;
}

.bp3-drawer-header .bp3-heading {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
    line-height: inherit;
    margin: 0;
}

.bp3-drawer-header .bp3-heading:last-child {
    margin-right: 20px;
}

.bp3-dark .bp3-drawer-header {
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 1px 0 var(--pt-dark-divider-black);
}

.bp3-dark .bp3-drawer-header .bp3-icon-large,
    .bp3-dark .bp3-drawer-header .bp3-icon {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-icon-color);
}

.bp3-drawer-body {
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
    line-height: 18px;
    overflow: auto;
}

.bp3-drawer-footer {
    box-shadow: inset 0 1px 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 1px 0 var(--pt-divider-black);
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto;
    padding: 10px 20px;
    position: relative;
}

.bp3-dark .bp3-drawer-footer {
    box-shadow: inset 0 1px 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 1px 0 var(--pt-dark-divider-black);
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
.bp3-editable-text {
    cursor: text;
    display: inline-block;
    max-width: 100%;
    position: relative;
    vertical-align: top;
    white-space: nowrap;
}

.bp3-editable-text::before {
    bottom: -var(--pt-border-radius);
    left: -var(--pt-border-radius);
    position: absolute;
    right: -var(--pt-border-radius);
    top: -var(--pt-border-radius);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    content: "";
    transition: background-color 100ms cubic-bezier(0.4, 1, 0.75, 0.9), box-shadow 100ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: background-color 100ms var(--pt-transition-ease), box-shadow 100ms var(--pt-transition-ease);
}

.bp3-editable-text:hover::before {
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: 0 0 0 0 hsla(var(--input-shadow-color-focus-hsl), 0), 0 0 0 0 hsla(var(--input-shadow-color-focus-hsl), 0), inset 0 0 0 1px var(--pt-divider-black);
}

.bp3-editable-text.bp3-editable-text-editing::before {
    background-color: hsl(209, 0%, 100%);
    background-color: var(--input-background-color);
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--input-shadow-color-focus-hsl), 1), 0 0 0 3px hsla(var(--input-shadow-color-focus-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-editable-text.bp3-disabled::before {
    box-shadow: none;
}

.bp3-editable-text.bp3-intent-primary .bp3-editable-text-input,
  .bp3-editable-text.bp3-intent-primary .bp3-editable-text-content {
    color: hsl(209,   90%,  50%);
    color: var(--pt-intent-primary);
}

.bp3-editable-text.bp3-intent-primary:hover::before {
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209,   90%,  50%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 0.4);
}

.bp3-editable-text.bp3-intent-primary.bp3-editable-text-editing::before {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-primary-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-editable-text.bp3-intent-success .bp3-editable-text-input,
  .bp3-editable-text.bp3-intent-success .bp3-editable-text-content {
    color: hsl(113, 100%, 34%);
    color: var(--pt-intent-success);
}

.bp3-editable-text.bp3-intent-success:hover::before {
    box-shadow: 0 0 0 0 hsla(113, 100%, 34%, 0), 0 0 0 0 hsla(113, 100%, 34%, 0), inset 0 0 0 1px hsla(113, 100%, 34%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-success-hsl), 0.4);
}

.bp3-editable-text.bp3-intent-success.bp3-editable-text-editing::before {
    box-shadow: 0 0 0 1px hsla(113, 100%, 34%, 1), 0 0 0 3px hsla(113, 100%, 34%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-success-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-editable-text.bp3-intent-warning .bp3-editable-text-input,
  .bp3-editable-text.bp3-intent-warning .bp3-editable-text-content {
    color: hsl(30, 70%, 51%);
    color: var(--pt-intent-warning);
}

.bp3-editable-text.bp3-intent-warning:hover::before {
    box-shadow: 0 0 0 0 hsla(30, 70%, 51%, 0), 0 0 0 0 hsla(30, 70%, 51%, 0), inset 0 0 0 1px hsla(30, 70%, 51%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 0.4);
}

.bp3-editable-text.bp3-intent-warning.bp3-editable-text-editing::before {
    box-shadow: 0 0 0 1px hsla(30, 70%, 51%, 1), 0 0 0 3px hsla(30, 70%, 51%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-warning-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-editable-text.bp3-intent-danger .bp3-editable-text-input,
  .bp3-editable-text.bp3-intent-danger .bp3-editable-text-content {
    color: hsl(0, 69%, 54%);
    color: var(--pt-intent-danger);
}

.bp3-editable-text.bp3-intent-danger:hover::before {
    box-shadow: 0 0 0 0 hsla(0, 69%, 54%, 0), 0 0 0 0 hsla(0, 69%, 54%, 0), inset 0 0 0 1px hsla(0, 69%, 54%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 0.4);
}

.bp3-editable-text.bp3-intent-danger.bp3-editable-text-editing::before {
    box-shadow: 0 0 0 1px hsla(0, 69%, 54%, 1), 0 0 0 3px hsla(0, 69%, 54%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-danger-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-dark .bp3-editable-text:hover::before {
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209, 0%, 100%, 0.15);
    box-shadow: 0 0 0 0 hsla(var(--dark-input-shadow-color-focus-hsl), 0), 0 0 0 0 hsla(var(--dark-input-shadow-color-focus-hsl), 0), inset 0 0 0 1px var(--pt-dark-divider-white);
}

.bp3-dark .bp3-editable-text.bp3-editable-text-editing::before {
    background-color: hsla(209, 0%, 9%, 0.3);
    background-color: var(--dark-input-background-color);
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--dark-input-shadow-color-focus-hsl), 1), 0 0 0 3px hsla(var(--dark-input-shadow-color-focus-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-editable-text.bp3-disabled::before {
    box-shadow: none;
}

.bp3-dark .bp3-editable-text.bp3-intent-primary .bp3-editable-text-content {
    color: hsl(209,   100%, 59%);
    color: var(--pt-dark-intent-primary-text-color);
}

.bp3-dark .bp3-editable-text.bp3-intent-primary:hover::before {
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209,   90%,  50%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 0.4);
}

.bp3-dark .bp3-editable-text.bp3-intent-primary.bp3-editable-text-editing::before {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-primary-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-editable-text.bp3-intent-success .bp3-editable-text-content {
    color: hsl(113, 57%,  57%);
    color: var(--pt-dark-intent-success-text-color);
}

.bp3-dark .bp3-editable-text.bp3-intent-success:hover::before {
    box-shadow: 0 0 0 0 hsla(113, 100%, 34%, 0), 0 0 0 0 hsla(113, 100%, 34%, 0), inset 0 0 0 1px hsla(113, 100%, 34%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-success-hsl), 0.4);
}

.bp3-dark .bp3-editable-text.bp3-intent-success.bp3-editable-text-editing::before {
    box-shadow: 0 0 0 1px hsla(113, 100%, 34%, 1), 0 0 0 3px hsla(113, 100%, 34%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-success-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-editable-text.bp3-intent-warning .bp3-editable-text-content {
    color: hsl(30, 100%, 70%);
    color: var(--pt-dark-intent-warning-text-color);
}

.bp3-dark .bp3-editable-text.bp3-intent-warning:hover::before {
    box-shadow: 0 0 0 0 hsla(30, 70%, 51%, 0), 0 0 0 0 hsla(30, 70%, 51%, 0), inset 0 0 0 1px hsla(30, 70%, 51%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 0.4);
}

.bp3-dark .bp3-editable-text.bp3-intent-warning.bp3-editable-text-editing::before {
    box-shadow: 0 0 0 1px hsla(30, 70%, 51%, 1), 0 0 0 3px hsla(30, 70%, 51%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-warning-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-editable-text.bp3-intent-danger .bp3-editable-text-content {
    color: hsl(0, 100%, 73%);
    color: var(--pt-dark-intent-danger-text-color);
}

.bp3-dark .bp3-editable-text.bp3-intent-danger:hover::before {
    box-shadow: 0 0 0 0 hsla(0, 69%, 54%, 0), 0 0 0 0 hsla(0, 69%, 54%, 0), inset 0 0 0 1px hsla(0, 69%, 54%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 0.4);
}

.bp3-dark .bp3-editable-text.bp3-intent-danger.bp3-editable-text-editing::before {
    box-shadow: 0 0 0 1px hsla(0, 69%, 54%, 1), 0 0 0 3px hsla(0, 69%, 54%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-danger-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-editable-text-input,
.bp3-editable-text-content {
    color: inherit;
    display: inherit;
    font: inherit;
    letter-spacing: inherit;
    max-width: inherit;
    min-width: inherit;
    position: relative;
    resize: none;
    text-transform: inherit;
    vertical-align: top;
}

.bp3-editable-text-input {
    background: none;
    border: none;
    box-shadow: none;
    padding: 0;
    white-space: pre-wrap;
    width: 100%;
}

.bp3-editable-text-input::-webkit-input-placeholder {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-placeholder-color);
    opacity: 1;
}

.bp3-editable-text-input:-ms-input-placeholder {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-placeholder-color);
    opacity: 1;
}

.bp3-editable-text-input::placeholder {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-placeholder-color);
    opacity: 1;
}

.bp3-editable-text-input:focus {
    outline: none;
}

.bp3-editable-text-input::-ms-clear {
    display: none;
}

.bp3-editable-text-content {
    overflow: hidden;
    padding-right: 2px;
    text-overflow: ellipsis;
    white-space: pre;
}

.bp3-editable-text-editing > .bp3-editable-text-content {
    left: 0;
    position: absolute;
    visibility: hidden;
}

.bp3-editable-text-placeholder > .bp3-editable-text-content {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-placeholder-color);
}

.bp3-dark .bp3-editable-text-placeholder > .bp3-editable-text-content {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-placeholder-color);
}

.bp3-editable-text.bp3-multiline {
    display: block;
}

.bp3-editable-text.bp3-multiline .bp3-editable-text-content {
    overflow: auto;
    white-space: pre-wrap;
    word-wrap: break-word;
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
.bp3-divider {
    border-bottom: 1px solid hsla(209, 0%, 9%, 0.15);
    border-bottom: 1px solid var(--pt-divider-black);
    border-right: 1px solid hsla(209, 0%, 9%, 0.15);
    border-right: 1px solid var(--pt-divider-black);
    margin: 5px;
}

.bp3-dark .bp3-divider {
    border-color: hsla(209, 0%, 9%, 0.4);
    border-color: var(--pt-dark-divider-black);
}

/*
Control groups

Markup:
<div class="bp3-control-group">
  <button class="bp3-button bp3-icon-filter">Filter</button>
  <input type="text" class="bp3-input" placeholder="Find filters..." />
</div>
<div class="bp3-control-group">
  <div class="bp3-select">
    <select>
      <option selected>Filter...</option>
      <option value="1">Issues</option>
      <option value="2">Requests</option>
      <option value="3">Projects</option>
    </select>
  </div>
  <div class="bp3-input-group">
    <span class="bp3-icon bp3-icon-search"></span>
    <input type="text" class="bp3-input" value="from:ggray to:allorca" />
  </div>
</div>
<div class="bp3-control-group">
  <div class="bp3-input-group">
    <span class="bp3-icon bp3-icon-people"></span>
    <input type="text" class="bp3-input" placeholder="Find collaborators..." style="padding-right:94px" />
    <div class="bp3-input-action">
      <button class="bp3-button bp3-minimal bp3-intent-primary">
        can view<span class="bp3-icon-standard bp3-icon-caret-down bp3-align-right"></span>
      </button>
    </div>
  </div>
  <button class="bp3-button bp3-intent-primary">Add</button>
</div>
<div class="bp3-control-group">
  <div class="bp3-select">
    <select>
      <option selected value="dollar">$</option>
      <option value="euro">€</option>
    </select>
  </div>
  <div class="bp3-control-group bp3-numeric-input">
    <div class="bp3-input-group">
      <input type="text" autocomplete="off" class="bp3-input" style="padding-right: 10px;" value="1">
    </div>
    <div class="bp3-button-group bp3-vertical bp3-fixed">
      <button type="button" class="bp3-button">
        <span icon="chevron-up" class="bp3-icon bp3-icon-chevron-up">
          <svg data-icon="chevron-up" width="16" height="16" viewBox="0 0 16 16"><desc>chevron-up</desc><path d="M12.71 9.29l-4-4C8.53 5.11 8.28 5 8 5s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 7.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z" fill-rule="evenodd"></path></svg>
        </span>
      </button>
      <button type="button" class="bp3-button">
        <span icon="chevron-down" class="bp3-icon bp3-icon-chevron-down">
          <svg data-icon="chevron-down" width="16" height="16" viewBox="0 0 16 16"><desc>chevron-down</desc><path d="M12 5c-.28 0-.53.11-.71.29L8 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 5z" fill-rule="evenodd"></path></svg>
        </span>
      </button>
    </div>
  </div>
</div>

Styleguide control-group
*/
.bp3-control-group {
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: stretch;
    align-items: stretch;
  /*
  Responsive control groups

  Markup:
  <div class="bp3-control-group">
    <div class="bp3-input-group bp3-fill">
      <span class="bp3-icon bp3-icon-people"></span>
      <input type="text" class="bp3-input" placeholder="Find collaborators..." />
    </div>
    <button class="bp3-button bp3-intent-primary">Add</button>
  </div>
  <div class="bp3-control-group bp3-fill">
    <button class="bp3-button bp3-icon-minus bp3-fixed"></button>
    <input type="text" class="bp3-input" placeholder="Enter a value..." />
    <button class="bp3-button bp3-icon-plus bp3-fixed"></button>
  </div>

  Styleguide control-group-fill
  */
  /*
  Vertical control groups

  Markup:
  <div class="bp3-control-group bp3-vertical" style="width: 300px;">
    <div class="bp3-input-group bp3-large">
      <span class="bp3-icon bp3-icon-person"></span>
      <input type="text" class="bp3-input" placeholder="Username" />
    </div>
    <div class="bp3-input-group bp3-large">
      <span class="bp3-icon bp3-icon-lock"></span>
      <input type="password" class="bp3-input" placeholder="Password" />
    </div>
    <button class="bp3-button bp3-large bp3-intent-primary">Login</button>
  </div>

  Styleguide control-group-vertical
  */
}

.bp3-control-group > * {
    -webkit-flex-grow: 0;
    flex-grow: 0;
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
}

.bp3-control-group > .bp3-fill {
    -webkit-flex-grow: 1;
    flex-grow: 1;
    -webkit-flex-shrink: 1;
    flex-shrink: 1;
}

.bp3-control-group .bp3-button,
  .bp3-control-group .bp3-html-select,
  .bp3-control-group .bp3-input,
  .bp3-control-group .bp3-select {
    position: relative;
}

.bp3-control-group .bp3-input {
    border-radius: inherit;
    z-index: 2;
}

.bp3-control-group .bp3-input:focus {
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    z-index: 14;
}

.bp3-control-group .bp3-input[class*="bp3-intent"] {
    z-index: 13;
}

.bp3-control-group .bp3-input[class*="bp3-intent"]:focus {
    z-index: 15;
}

.bp3-control-group .bp3-input[readonly], .bp3-control-group .bp3-input:disabled, .bp3-control-group .bp3-input.bp3-disabled {
    z-index: 1;
}

.bp3-control-group .bp3-input-group[class*="bp3-intent"] .bp3-input {
    z-index: 13;
}

.bp3-control-group .bp3-input-group[class*="bp3-intent"] .bp3-input:focus {
    z-index: 15;
}

.bp3-control-group .bp3-button,
  .bp3-control-group .bp3-html-select select,
  .bp3-control-group .bp3-select select {
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    border-radius: inherit;
    z-index: 4;
}

.bp3-control-group .bp3-button:focus,
    .bp3-control-group .bp3-html-select select:focus,
    .bp3-control-group .bp3-select select:focus {
    z-index: 5;
}

.bp3-control-group .bp3-button:hover,
    .bp3-control-group .bp3-html-select select:hover,
    .bp3-control-group .bp3-select select:hover {
    z-index: 6;
}

.bp3-control-group .bp3-button:active,
    .bp3-control-group .bp3-html-select select:active,
    .bp3-control-group .bp3-select select:active {
    z-index: 7;
}

.bp3-control-group .bp3-button[readonly], .bp3-control-group .bp3-button:disabled, .bp3-control-group .bp3-button.bp3-disabled,
    .bp3-control-group .bp3-html-select select[readonly],
    .bp3-control-group .bp3-html-select select:disabled,
    .bp3-control-group .bp3-html-select select.bp3-disabled,
    .bp3-control-group .bp3-select select[readonly],
    .bp3-control-group .bp3-select select:disabled,
    .bp3-control-group .bp3-select select.bp3-disabled {
    z-index: 3;
}

.bp3-control-group .bp3-button[class*="bp3-intent"],
    .bp3-control-group .bp3-html-select select[class*="bp3-intent"],
    .bp3-control-group .bp3-select select[class*="bp3-intent"] {
    z-index: 9;
}

.bp3-control-group .bp3-button[class*="bp3-intent"]:focus,
      .bp3-control-group .bp3-html-select select[class*="bp3-intent"]:focus,
      .bp3-control-group .bp3-select select[class*="bp3-intent"]:focus {
    z-index: 10;
}

.bp3-control-group .bp3-button[class*="bp3-intent"]:hover,
      .bp3-control-group .bp3-html-select select[class*="bp3-intent"]:hover,
      .bp3-control-group .bp3-select select[class*="bp3-intent"]:hover {
    z-index: 11;
}

.bp3-control-group .bp3-button[class*="bp3-intent"]:active,
      .bp3-control-group .bp3-html-select select[class*="bp3-intent"]:active,
      .bp3-control-group .bp3-select select[class*="bp3-intent"]:active {
    z-index: 12;
}

.bp3-control-group .bp3-button[class*="bp3-intent"][readonly], .bp3-control-group .bp3-button[class*="bp3-intent"]:disabled, .bp3-control-group .bp3-button[class*="bp3-intent"].bp3-disabled,
      .bp3-control-group .bp3-html-select select[class*="bp3-intent"][readonly],
      .bp3-control-group .bp3-html-select select[class*="bp3-intent"]:disabled,
      .bp3-control-group .bp3-html-select select[class*="bp3-intent"].bp3-disabled,
      .bp3-control-group .bp3-select select[class*="bp3-intent"][readonly],
      .bp3-control-group .bp3-select select[class*="bp3-intent"]:disabled,
      .bp3-control-group .bp3-select select[class*="bp3-intent"].bp3-disabled {
    z-index: 8;
}

.bp3-control-group .bp3-input-group > .bp3-icon,
  .bp3-control-group .bp3-input-group > .bp3-button,
  .bp3-control-group .bp3-input-group > .bp3-input-action {
    z-index: 16;
}

.bp3-control-group .bp3-select::after,
  .bp3-control-group .bp3-html-select::after,
  .bp3-control-group .bp3-select > .bp3-icon,
  .bp3-control-group .bp3-html-select > .bp3-icon {
    z-index: 17;
}

.bp3-control-group .bp3-select:focus-within {
    z-index: 5;
}

.bp3-control-group:not(.bp3-vertical) > *:not(.bp3-divider) {
    margin-right: -1px;
}

.bp3-control-group:not(.bp3-vertical) > .bp3-divider:not(:first-child) {
    margin-left: 6px;
}

.bp3-dark .bp3-control-group:not(.bp3-vertical) > *:not(.bp3-divider) {
    margin-right: 0;
}

.bp3-dark .bp3-control-group:not(.bp3-vertical) > .bp3-button + .bp3-button {
    margin-left: 1px;
}

.bp3-control-group .bp3-popover-wrapper,
  .bp3-control-group .bp3-popover-target {
    border-radius: inherit;
}

.bp3-control-group > :first-child {
    border-radius: 6px 0 0 6px;
    border-radius: var(--pt-border-radius) 0 0 var(--pt-border-radius);
}

.bp3-control-group > :last-child {
    border-radius: 0 6px 6px 0;
    border-radius: 0 var(--pt-border-radius) var(--pt-border-radius) 0;
    margin-right: 0;
}

.bp3-control-group > :only-child {
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    margin-right: 0;
}

.bp3-control-group .bp3-input-group .bp3-button {
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
}

.bp3-control-group .bp3-numeric-input:not(:first-child) .bp3-input-group {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
}

.bp3-control-group.bp3-fill {
    width: 100%;
}

.bp3-control-group > .bp3-fill {
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
}

.bp3-control-group.bp3-fill > *:not(.bp3-fixed) {
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
}

.bp3-control-group.bp3-vertical {
    -webkit-flex-direction: column;
    flex-direction: column;
}

.bp3-control-group.bp3-vertical > * {
    margin-top: -1px;
}

.bp3-control-group.bp3-vertical > :first-child {
    border-radius: 6px 6px 0 0;
    border-radius: var(--pt-border-radius) var(--pt-border-radius) 0 0;
    margin-top: 0;
}

.bp3-control-group.bp3-vertical > :last-child {
    border-radius: 0 0 6px 6px;
    border-radius: 0 0 var(--pt-border-radius) var(--pt-border-radius);
}

/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
.bp3-control {
    cursor: pointer;
    display: block;
    margin-bottom: 10px;
    position: relative;
    text-transform: none;
  /*
  Checkbox

  Markup:
  <label class="bp3-control bp3-checkbox {{.modifier}}">
    <input type="checkbox" {{:modifier}} />
    <span class="bp3-control-indicator"></span>
    Checkbox
  </label>

  :checked  - Checked
  :disabled - Disabled. Also add <code>.bp3-disabled</code> to <code>.bp3-control</code> to change text color (not shown below).
  :indeterminate - Indeterminate. Note that this style can only be achieved via JavaScript
                   <code>input.indeterminate = true</code>.
  .bp3-align-right - Right-aligned indicator
  .bp3-large - Large

  Styleguide checkbox
  */
  /*
  Radio

  Markup:
  <label class="bp3-control bp3-radio {{.modifier}}">
    <input type="radio" name="docs-radio-regular" {{:modifier}} />
    <span class="bp3-control-indicator"></span>
    Radio
  </label>

  :checked  - Selected
  :disabled - Disabled. Also add <code>.bp3-disabled</code> to <code>.bp3-control</code> to change text color (not shown below).
  .bp3-align-right - Right-aligned indicator
  .bp3-large - Large

  Styleguide radio
  */
  /*
  Switch

  Markup:
  <label class="bp3-control bp3-switch {{.modifier}}">
    <input type="checkbox" {{:modifier}} />
    <span class="bp3-control-indicator"></span>
    Switch
  </label>

  :checked  - Selected
  :disabled - Disabled. Also add <code>.bp3-disabled</code> to <code>.bp3-control</code> to change text color (not shown below).
  .bp3-align-right - Right-aligned indicator
  .bp3-large - Large

  Styleguide switch
  */
  /* stylelint-disable-next-line order/order */
  /*
  Inline labels

  Markup:
  <div>
    <label class="bp3-label">A group of related options</label>
    <label class="bp3-control bp3-checkbox bp3-inline">
      <input type="checkbox" />
      <span class="bp3-control-indicator"></span>
      First
    </label>
    <label class="bp3-control bp3-checkbox bp3-inline">
      <input type="checkbox" />
      <span class="bp3-control-indicator"></span>
      Second
    </label>
    <label class="bp3-control bp3-checkbox bp3-inline">
      <input type="checkbox" />
      <span class="bp3-control-indicator"></span>
      Third
    </label>
  </div>

  Styleguide checkbox-inline
  */
}

.bp3-control input:checked ~ .bp3-control-indicator {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--control-checked-background-color);
    background-image: unset;
    background-image: var(--button-intent-gradient);
    box-shadow: unset;
    box-shadow: var(--button-intent-box-shadow);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-control:hover input:checked ~ .bp3-control-indicator {
    background-color: hsl(209,   100%, 54%);
    background-color: var(--control-checked-background-color-hover);
    box-shadow: unset;
    box-shadow: var(--button-intent-box-shadow);
}

.bp3-control input:not(:disabled):active:checked ~ .bp3-control-indicator {
    background: hsl(209,   83%,  46%);
    background: var(--control-checked-background-color-active);
    box-shadow: unset;
    box-shadow: var(--button-intent-box-shadow-active);
}

.bp3-control input:disabled:checked ~ .bp3-control-indicator {
    background: hsla(209,   90%,  50%, 0.5);
    background: hsla(var(--control-checked-background-color-hsl), 0.5);
    box-shadow: none;
}

.bp3-dark .bp3-control input:checked ~ .bp3-control-indicator {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-intent-box-shadow);
}

.bp3-dark .bp3-control:hover input:checked ~ .bp3-control-indicator {
    background-color: hsl(209,   100%, 54%);
    background-color: var(--control-checked-background-color-hover);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-intent-box-shadow);
}

.bp3-dark .bp3-control input:not(:disabled):active:checked ~ .bp3-control-indicator {
    background-color: hsl(209,   83%,  46%);
    background-color: var(--control-checked-background-color-active);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4),
  inset 0 1px 2px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--dark-button-intent-box-shadow-active);
}

.bp3-dark .bp3-control input:disabled:checked ~ .bp3-control-indicator {
    background: hsla(209,   83%,  46%, 0.5);
    background: hsla(var(--control-checked-background-color-active-hsl), 0.5);
    box-shadow: none;
}

.bp3-control:not(.bp3-align-right) {
    padding-left: 26px;
}

.bp3-control:not(.bp3-align-right) .bp3-control-indicator {
    margin-left: -26px;
}

.bp3-control.bp3-align-right {
    padding-right: 26px;
}

.bp3-control.bp3-align-right .bp3-control-indicator {
    margin-right: -26px;
}

.bp3-control.bp3-disabled {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
    cursor: not-allowed;
}

.bp3-control.bp3-inline {
    display: inline-block;
    margin-right: 20px;
}

.bp3-control input {
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    z-index: -1;
}

.bp3-control .bp3-control-indicator {
    background-clip: padding-box;
    background-color: hsl(209, 0%, 97%);
    background-color: var(--control-background-color);
    background-image: unset;
    background-image: var(--button-gradient);
    border: none;
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: var(--button-box-shadow);
    cursor: pointer;
    display: inline-block;
    font-size: 16px;
    height: 1em;
    margin-right: 10px;
    margin-top: -3px;
    position: relative;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
    vertical-align: middle;
    width: 1em;
}

.bp3-control .bp3-control-indicator::before {
    content: "";
    display: block;
    height: 1em;
    width: 1em;
}

.bp3-control:hover .bp3-control-indicator {
    background-color: hsl(209, 0%, 94%);
    background-color: var(--control-background-color-hover);
}

.bp3-control input:not(:disabled):active ~ .bp3-control-indicator {
    background: hsl(209, 0%, 87%);
    background: var(--control-background-color-active);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.3);
    box-shadow: var(--button-box-shadow-active);
}

.bp3-control input:disabled ~ .bp3-control-indicator {
    background: hsla(209, 0%, 85%, 0.5);
    background: var(--button-background-color-disabled);
    box-shadow: none;
    cursor: not-allowed;
}

.bp3-control input:focus ~ .bp3-control-indicator {
    outline: hsla(209,   90%,  50%, 0.6) auto 2px;
    outline: var(--pt-outline-color) auto 2px;
    outline-offset: 2px;
    -moz-outline-radius: 6px;
}

.bp3-control.bp3-align-right .bp3-control-indicator {
    float: right;
    margin-left: 10px;
    margin-top: 1px;
}

.bp3-control.bp3-large {
    font-size: 16px;
}

.bp3-control.bp3-large:not(.bp3-align-right) {
    padding-left: 30px;
}

.bp3-control.bp3-large:not(.bp3-align-right) .bp3-control-indicator {
    margin-left: -30px;
}

.bp3-control.bp3-large.bp3-align-right {
    padding-right: 30px;
}

.bp3-control.bp3-large.bp3-align-right .bp3-control-indicator {
    margin-right: -30px;
}

.bp3-control.bp3-large .bp3-control-indicator {
    font-size: 20px;
}

.bp3-control.bp3-large.bp3-align-right .bp3-control-indicator {
    margin-top: 0;
}

.bp3-control.bp3-checkbox input:indeterminate ~ .bp3-control-indicator {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--control-checked-background-color);
    background-image: unset;
    background-image: var(--button-intent-gradient);
    box-shadow: unset;
    box-shadow: var(--button-intent-box-shadow);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-control.bp3-checkbox:hover input:indeterminate ~ .bp3-control-indicator {
    background-color: hsl(209,   100%, 54%);
    background-color: var(--control-checked-background-color-hover);
    box-shadow: unset;
    box-shadow: var(--button-intent-box-shadow);
}

.bp3-control.bp3-checkbox input:not(:disabled):active:indeterminate ~ .bp3-control-indicator {
    background: hsl(209,   83%,  46%);
    background: var(--control-checked-background-color-active);
    box-shadow: unset;
    box-shadow: var(--button-intent-box-shadow-active);
}

.bp3-control.bp3-checkbox input:disabled:indeterminate ~ .bp3-control-indicator {
    background: hsla(209,   90%,  50%, 0.5);
    background: hsla(var(--control-checked-background-color-hsl), 0.5);
    box-shadow: none;
}

.bp3-dark .bp3-control.bp3-checkbox input:indeterminate ~ .bp3-control-indicator {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-intent-box-shadow);
}

.bp3-dark .bp3-control.bp3-checkbox:hover input:indeterminate ~ .bp3-control-indicator {
    background-color: hsl(209,   100%, 54%);
    background-color: var(--control-checked-background-color-hover);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-intent-box-shadow);
}

.bp3-dark .bp3-control.bp3-checkbox input:not(:disabled):active:indeterminate ~ .bp3-control-indicator {
    background-color: hsl(209,   83%,  46%);
    background-color: var(--control-checked-background-color-active);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4),
  inset 0 1px 2px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--dark-button-intent-box-shadow-active);
}

.bp3-dark .bp3-control.bp3-checkbox input:disabled:indeterminate ~ .bp3-control-indicator {
    background: hsla(209,   83%,  46%, 0.5);
    background: hsla(var(--control-checked-background-color-active-hsl), 0.5);
    box-shadow: none;
}

.bp3-control.bp3-checkbox .bp3-control-indicator {
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
}

.bp3-control.bp3-checkbox input:checked ~ .bp3-control-indicator::before {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='white' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z'/%3E%3C/svg%3E");
}

.bp3-control.bp3-checkbox input:indeterminate ~ .bp3-control-indicator::before {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='white' d='M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z'/%3E%3C/svg%3E");
}

.bp3-control.bp3-radio .bp3-control-indicator {
    border-radius: 50%;
}

.bp3-control.bp3-radio input:checked ~ .bp3-control-indicator::before {
    background-image: radial-gradient(hsl(209, 0%, 100%), hsl(209, 0%, 100%) 28%, transparent 32%);
    background-image: radial-gradient(var(--white), var(--white) 28%, transparent 32%);
}

.bp3-control.bp3-radio input:checked:disabled ~ .bp3-control-indicator::before {
    opacity: 0.5;
}

.bp3-control.bp3-radio input:focus ~ .bp3-control-indicator {
    -moz-outline-radius: 16px;
}

.bp3-control.bp3-switch input ~ .bp3-control-indicator {
    background: hsla(209, 0%, 73%, 0.5);
    background: var(--switch-background-color);
}

.bp3-control.bp3-switch:hover input ~ .bp3-control-indicator {
    background: hsla(209, 0%, 54%, 0.5);
    background: var(--switch-background-color-hover);
}

.bp3-control.bp3-switch input:not(:disabled):active ~ .bp3-control-indicator {
    background: hsla(209, 0%, 47%, 0.5);
    background: var(--switch-background-color-active);
}

.bp3-control.bp3-switch input:disabled ~ .bp3-control-indicator {
    background: hsla(209, 0%, 85%, 0.5);
    background: var(--switch-background-color-disabled);
}

.bp3-control.bp3-switch input:disabled ~ .bp3-control-indicator::before {
    background: hsla(209, 0%, 100%, 0.8);
    background: var(--switch-indicator-background-color-disabled);
}

.bp3-control.bp3-switch input:checked ~ .bp3-control-indicator {
    background: hsl(209,   90%,  50%);
    background: var(--switch-checked-background-color);
}

.bp3-control.bp3-switch:hover input:checked ~ .bp3-control-indicator {
    background: hsl(209,   100%, 54%);
    background: var(--switch-checked-background-color-hover);
}

.bp3-control.bp3-switch input:checked:not(:disabled):active ~ .bp3-control-indicator {
    background: hsl(209,   83%,  46%);
    background: var(--switch-checked-background-color-active);
}

.bp3-control.bp3-switch input:checked:disabled ~ .bp3-control-indicator {
    background: hsla(209,   90%,  50%, 0.5);
    background: var(--switch-checked-background-color-disabled);
}

.bp3-control.bp3-switch input:checked:disabled ~ .bp3-control-indicator::before {
    background: hsla(209, 0%, 100%, 0.8);
    background: var(--switch-indicator-background-color-disabled);
}

.bp3-control.bp3-switch:not(.bp3-align-right) {
    padding-left: 38px;
}

.bp3-control.bp3-switch:not(.bp3-align-right) .bp3-control-indicator {
    margin-left: -38px;
}

.bp3-control.bp3-switch.bp3-align-right {
    padding-right: 38px;
}

.bp3-control.bp3-switch.bp3-align-right .bp3-control-indicator {
    margin-right: -38px;
}

.bp3-control.bp3-switch .bp3-control-indicator {
    border: none;
    border-radius: 1.75em;
    /* stylelint-disable-next-line declaration-no-important */
    box-shadow: none !important;
    min-width: 1.75em;
    transition: background-color 100ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: background-color 100ms var(--pt-transition-ease);
    width: auto;
}

.bp3-control.bp3-switch .bp3-control-indicator::before {
    background: hsl(209, 0%, 100%);
    background: var(--switch-indicator-background-color);
    border-radius: 50%;
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--button-box-shadow-overlay);
    height: calc(1em - 4px);
    left: 0;
    margin: 2px;
    position: absolute;
    transition: left 100ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: left 100ms var(--pt-transition-ease);
    width: calc(1em - 4px);
}

.bp3-control.bp3-switch input:checked ~ .bp3-control-indicator::before {
    left: calc(100% - 1em);
}

.bp3-control.bp3-switch.bp3-large:not(.bp3-align-right) {
    padding-left: 45px;
}

.bp3-control.bp3-switch.bp3-large:not(.bp3-align-right) .bp3-control-indicator {
    margin-left: -45px;
}

.bp3-control.bp3-switch.bp3-large.bp3-align-right {
    padding-right: 45px;
}

.bp3-control.bp3-switch.bp3-large.bp3-align-right .bp3-control-indicator {
    margin-right: -45px;
}

.bp3-dark .bp3-control.bp3-switch input ~ .bp3-control-indicator {
    background: hsla(209, 0%, 9%, 0.5);
    background: var(--dark-switch-background-color);
}

.bp3-dark .bp3-control.bp3-switch:hover input ~ .bp3-control-indicator {
    background: hsla(209, 0%, 9%, 0.7);
    background: var(--dark-switch-background-color-hover);
}

.bp3-dark .bp3-control.bp3-switch input:not(:disabled):active ~ .bp3-control-indicator {
    background: hsla(209, 0%, 9%, 0.9);
    background: var(--dark-switch-background-color-active);
}

.bp3-dark .bp3-control.bp3-switch input:disabled ~ .bp3-control-indicator {
    background: hsla(209, 0%, 38%, 0.5);
    background: var(--dark-switch-background-color-disabled);
}

.bp3-dark .bp3-control.bp3-switch input:disabled ~ .bp3-control-indicator::before {
    background: hsla(209, 0%, 9%, 0.4);
    background: var(--dark-switch-indicator-background-color-disabled);
}

.bp3-dark .bp3-control.bp3-switch input:checked ~ .bp3-control-indicator {
    background: hsl(209,   90%,  50%);
    background: var(--dark-switch-checked-background-color);
}

.bp3-dark .bp3-control.bp3-switch:hover input:checked ~ .bp3-control-indicator {
    background: hsl(209,   100%, 54%);
    background: var(--dark-switch-checked-background-color-hover);
}

.bp3-dark .bp3-control.bp3-switch input:checked:not(:disabled):active ~ .bp3-control-indicator {
    background: hsl(209,   83%,  46%);
    background: var(--dark-switch-checked-background-color-active);
}

.bp3-dark .bp3-control.bp3-switch input:checked:disabled ~ .bp3-control-indicator {
    background: hsla(209,   90%,  50%, 0.5);
    background: var(--dark-switch-checked-background-color-disabled);
}

.bp3-dark .bp3-control.bp3-switch input:checked:disabled ~ .bp3-control-indicator::before {
    background: hsla(209, 0%, 9%, 0.4);
    background: var(--dark-switch-indicator-background-color-disabled);
}

.bp3-dark .bp3-control.bp3-switch .bp3-control-indicator::before {
    background: hsl(209, 0%, 38%);
    background: var(--dark-switch-indicator-background-color);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-box-shadow);
}

.bp3-dark .bp3-control.bp3-switch input:checked ~ .bp3-control-indicator::before {
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: inset var(--dark-button-box-shadow);
}

.bp3-control.bp3-switch .bp3-switch-inner-text {
    font-size: 0.7em;
    text-align: center;
}

.bp3-control.bp3-switch .bp3-control-indicator-child:first-child {
    line-height: 0;
    margin-left: 0.5em;
    margin-right: 1.2em;
    visibility: hidden;
}

.bp3-control.bp3-switch .bp3-control-indicator-child:last-child {
    line-height: 1em;
    margin-left: 1.2em;
    margin-right: 0.5em;
    visibility: visible;
}

.bp3-control.bp3-switch input:checked ~ .bp3-control-indicator .bp3-control-indicator-child:first-child {
    line-height: 1em;
    visibility: visible;
}

.bp3-control.bp3-switch input:checked ~ .bp3-control-indicator .bp3-control-indicator-child:last-child {
    line-height: 0;
    visibility: hidden;
}

.bp3-dark .bp3-control {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dark .bp3-control.bp3-disabled {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
}

.bp3-dark .bp3-control .bp3-control-indicator {
    background-color: hsl(209, 0%, 38%);
    background-color: var(--dark-control-background-color);
    background-image: unset;
    background-image: var(--dark-button-gradient);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-box-shadow);
}

.bp3-dark .bp3-control:hover .bp3-control-indicator {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-control-background-color-hover);
}

.bp3-dark .bp3-control input:not(:disabled):active ~ .bp3-control-indicator {
    background: hsl(209, 0%, 18%);
    background: var(--dark-control-background-color-active);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.6),
  inset 0 1px 2px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--dark-button-box-shadow-active);
}

.bp3-dark .bp3-control input:disabled ~ .bp3-control-indicator {
    background: hsla(209, 0%, 38%, 0.5);
    background: var(--dark-button-background-color-disabled);
    box-shadow: none;
    cursor: not-allowed;
}

.bp3-dark .bp3-control.bp3-checkbox input:disabled:checked ~ .bp3-control-indicator, .bp3-dark .bp3-control.bp3-checkbox input:disabled:indeterminate ~ .bp3-control-indicator {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-button-color-disabled);
}

/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
/*
File input

Markup:
<label class="bp3-file-input {{.modifier}}">
  <input type="file" {{:modifier}}/>
  <span class="bp3-file-upload-input">Choose file...</span>
</label>

:disabled - Disabled
.bp3-large - Larger size
.bp3-fill - Take up full width of parent element
.bp3-file-input-has-selection - User has made a selection

Styleguide file-input
*/
.bp3-file-input {
    cursor: pointer;
    display: inline-block;
    height: 30px;
    position: relative;
}

.bp3-file-input input {
    margin: 0;
    min-width: 200px;
    opacity: 0;
}

.bp3-file-input input:disabled + .bp3-file-upload-input,
    .bp3-file-input input.bp3-disabled + .bp3-file-upload-input {
    background: hsla(209, 0%, 85%, 0.5);
    background: var(--input-background-color-disabled);
    box-shadow: none;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-color-disabled);
    cursor: not-allowed;
    resize: none;
}

.bp3-file-input input:disabled + .bp3-file-upload-input::after,
      .bp3-file-input input.bp3-disabled + .bp3-file-upload-input::after {
    background-color: hsla(209, 0%, 85%, 0.5);
    background-color: var(--button-background-color-disabled);
    background-image: none;
    box-shadow: none;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--button-color-disabled);
    cursor: not-allowed;
    outline: none;
}

.bp3-file-input input:disabled + .bp3-file-upload-input::after.bp3-active, .bp3-file-input input:disabled + .bp3-file-upload-input::after.bp3-active:hover,
        .bp3-file-input input.bp3-disabled + .bp3-file-upload-input::after.bp3-active,
        .bp3-file-input input.bp3-disabled + .bp3-file-upload-input::after.bp3-active:hover {
    background: hsla(209, 0%, 85%, 0.7);
    background: var(--button-background-color-active-disabled);
}

.bp3-dark .bp3-file-input input:disabled + .bp3-file-upload-input, .bp3-dark
      .bp3-file-input input.bp3-disabled + .bp3-file-upload-input {
    background: hsla(209, 0%, 38%, 0.5);
    background: var(--dark-input-background-color-disabled);
    box-shadow: none;
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-color-disabled);
}

.bp3-dark .bp3-file-input input:disabled + .bp3-file-upload-input::after, .bp3-dark
        .bp3-file-input input.bp3-disabled + .bp3-file-upload-input::after {
    background-color: hsla(209, 0%, 38%, 0.5);
    background-color: var(--dark-button-background-color-disabled);
    background-image: none;
    box-shadow: none;
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-button-color-disabled);
}

.bp3-dark .bp3-file-input input:disabled + .bp3-file-upload-input::after.bp3-active, .bp3-dark
          .bp3-file-input input.bp3-disabled + .bp3-file-upload-input::after.bp3-active {
    background: hsla(209, 0%, 38%, 0.7);
    background: var(--dark-button-background-color-active-disabled);
}

.bp3-file-input.bp3-file-input-has-selection .bp3-file-upload-input {
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
}

.bp3-dark .bp3-file-input.bp3-file-input-has-selection .bp3-file-upload-input {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-file-input.bp3-fill {
    width: 100%;
}

.bp3-file-input.bp3-large,
  .bp3-large .bp3-file-input {
    height: 40px;
}

.bp3-file-input .bp3-file-upload-input-custom-text::after {
    content: attr(bp3-button-text);
}

.bp3-file-upload-input {
    -webkit-appearance: none;
    appearance: none;
    background: hsl(209, 0%, 100%);
    background: var(--input-background-color);
    border: none;
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--input-shadow-color-focus-hsl), 0), 0 0 0 0 hsla(var(--input-shadow-color-focus-hsl), 0), var(--pt-input-box-shadow);
    color: hsl(209, 0%, 15%);
    color: var(--input-color);
    font-size: 14px;
    font-weight: 400;
    height: 30px;
    line-height: 30px;
    outline: none;
    padding: 0 10px;
    transition: box-shadow 100ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: box-shadow 100ms var(--pt-transition-ease);
    vertical-align: middle;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
    left: 0;
    padding-right: 80px;
    position: absolute;
    right: 0;
    top: 0;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.bp3-file-upload-input::-webkit-input-placeholder {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-placeholder-color);
    opacity: 1;
}

.bp3-file-upload-input:-ms-input-placeholder {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-placeholder-color);
    opacity: 1;
}

.bp3-file-upload-input::placeholder {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-placeholder-color);
    opacity: 1;
}

.bp3-file-upload-input:focus, .bp3-file-upload-input.bp3-active {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--input-shadow-color-focus-hsl), 1), 0 0 0 3px hsla(var(--input-shadow-color-focus-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-file-upload-input[type="search"], .bp3-file-upload-input.bp3-round {
    border-radius: 30px;
    box-sizing: border-box;
    padding-left: 10px;
}

.bp3-file-upload-input[readonly] {
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 0 0 1px var(--pt-divider-black);
}

.bp3-file-upload-input:disabled, .bp3-file-upload-input.bp3-disabled {
    background: hsla(209, 0%, 85%, 0.5);
    background: var(--input-background-color-disabled);
    box-shadow: none;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-color-disabled);
    cursor: not-allowed;
    resize: none;
}

.bp3-file-upload-input::after {
    background-color: hsl(209, 0%, 97%);
    background-color: var(--button-background-color);
    background-image: unset;
    background-image: var(--button-gradient);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: var(--button-box-shadow);
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
    min-height: 24px;
    min-width: 24px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    content: "Browse";
    line-height: 24px;
    margin: 3px;
    position: absolute;
    right: 0;
    text-align: center;
    top: 0;
    width: 70px;
}

.bp3-file-upload-input::after:hover {
    background-clip: padding-box;
    background-color: hsl(209, 0%, 94%);
    background-color: var(--button-background-color-hover);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: var(--button-box-shadow);
}

.bp3-file-upload-input::after:active, .bp3-file-upload-input::after.bp3-active {
    background-color: hsl(209, 0%, 87%);
    background-color: var(--button-background-color-active);
    background-image: none;
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.3);
    box-shadow: var(--button-box-shadow-active);
}

.bp3-file-upload-input::after:disabled, .bp3-file-upload-input::after.bp3-disabled {
    background-color: hsla(209, 0%, 85%, 0.5);
    background-color: var(--button-background-color-disabled);
    background-image: none;
    box-shadow: none;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--button-color-disabled);
    cursor: not-allowed;
    outline: none;
}

.bp3-file-upload-input::after:disabled.bp3-active, .bp3-file-upload-input::after:disabled.bp3-active:hover, .bp3-file-upload-input::after.bp3-disabled.bp3-active, .bp3-file-upload-input::after.bp3-disabled.bp3-active:hover {
    background: hsla(209, 0%, 85%, 0.7);
    background: var(--button-background-color-active-disabled);
}

.bp3-file-upload-input:hover::after, .bp3-file-upload-input .💩💩💩 {
    background-clip: padding-box;
    background-color: hsl(209, 0%, 94%);
    background-color: var(--button-background-color-hover);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: var(--button-box-shadow);
}

.bp3-file-upload-input:active::after {
    background-color: hsl(209, 0%, 87%);
    background-color: var(--button-background-color-active);
    background-image: none;
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.3);
    box-shadow: var(--button-box-shadow-active);
}

.bp3-large .bp3-file-upload-input {
    font-size: 16px;
    height: 40px;
    line-height: 40px;
    padding-right: 95px;
}

.bp3-large .bp3-file-upload-input[type="search"], .bp3-large .bp3-file-upload-input.bp3-round {
    padding: 0 15px;
}

.bp3-large .bp3-file-upload-input::after {
    min-height: 30px;
    min-width: 30px;
    line-height: 30px;
    margin: 5px;
    width: 85px;
}

.bp3-dark .bp3-file-upload-input {
    background: hsla(209, 0%, 9%, 0.3);
    background: var(--dark-input-background-color);
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--dark-input-shadow-color-focus-hsl), 0), 0 0 0 0 hsla(var(--dark-input-shadow-color-focus-hsl), 0), 0 0 0 0 hsla(var(--dark-input-shadow-color-focus-hsl), 0), var(--pt-dark-input-box-shadow);
    color: hsl(209, 0%, 97%);
    color: var(--dark-input-color);
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
}

.bp3-dark .bp3-file-upload-input::-webkit-input-placeholder {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-placeholder-color);
}

.bp3-dark .bp3-file-upload-input:-ms-input-placeholder {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-placeholder-color);
}

.bp3-dark .bp3-file-upload-input::placeholder {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-placeholder-color);
}

.bp3-dark .bp3-file-upload-input:focus {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--dark-input-shadow-color-focus-hsl), 1), 0 0 0 1px hsla(var(--dark-input-shadow-color-focus-hsl), 1), 0 0 0 3px hsla(var(--dark-input-shadow-color-focus-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-file-upload-input[readonly] {
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 0 0 1px var(--pt-dark-divider-black);
}

.bp3-dark .bp3-file-upload-input:disabled, .bp3-dark .bp3-file-upload-input.bp3-disabled {
    background: hsla(209, 0%, 38%, 0.5);
    background: var(--dark-input-background-color-disabled);
    box-shadow: none;
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-color-disabled);
}

.bp3-dark .bp3-file-upload-input::after {
    background-color: hsl(209, 0%, 38%);
    background-color: var(--dark-button-background-color);
    background-image: unset;
    background-image: var(--dark-button-gradient);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-box-shadow);
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dark .bp3-file-upload-input::after:hover, .bp3-dark .bp3-file-upload-input::after:active, .bp3-dark .bp3-file-upload-input::after.bp3-active {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dark .bp3-file-upload-input::after:hover {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-button-background-color-hover);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-box-shadow);
}

.bp3-dark .bp3-file-upload-input::after:active, .bp3-dark .bp3-file-upload-input::after.bp3-active {
    background-color: hsl(209, 0%, 18%);
    background-color: var(--dark-button-background-color-active);
    background-image: none;
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.6),
  inset 0 1px 2px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--dark-button-box-shadow-active);
}

.bp3-dark .bp3-file-upload-input::after:disabled, .bp3-dark .bp3-file-upload-input::after.bp3-disabled {
    background-color: hsla(209, 0%, 38%, 0.5);
    background-color: var(--dark-button-background-color-disabled);
    background-image: none;
    box-shadow: none;
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-button-color-disabled);
}

.bp3-dark .bp3-file-upload-input::after:disabled.bp3-active, .bp3-dark .bp3-file-upload-input::after.bp3-disabled.bp3-active {
    background: hsla(209, 0%, 38%, 0.7);
    background: var(--dark-button-background-color-active-disabled);
}

.bp3-dark .bp3-file-upload-input::after .bp3-button-spinner .bp3-spinner-head {
    background: hsla(209, 0%, 9%, 0.5);
    background: var(--dark-progress-track-color);
    stroke: hsl(209, 0%, 63%);
    stroke: var(--dark-progress-head-color);
}

.bp3-dark .bp3-file-upload-input:hover::after, .bp3-dark .bp3-file-upload-input .💩💩💩 {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-button-background-color-hover);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-box-shadow);
}

.bp3-dark .bp3-file-upload-input:active::after {
    background-color: hsl(209, 0%, 18%);
    background-color: var(--dark-button-background-color-active);
    background-image: none;
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.6),
  inset 0 1px 2px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--dark-button-box-shadow-active);
}

/* stylelint-disable-next-line no-duplicate-selectors */
.bp3-file-upload-input::after {
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: var(--button-box-shadow);
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
/*
Form groups

Markup:
<div class="bp3-form-group {{.modifier}}">
  <label class="bp3-label" for="form-group-input">
    Label
    <span class="bp3-text-muted">(required)</span>
  </label>
  <div class="bp3-form-content">
    <div class="bp3-input-group {{.modifier}}">
      <span class="bp3-icon bp3-icon-calendar"></span>
      <input id="form-group-input" type="text" {{:modifier}} class="bp3-input"
             style="width: 200px;" placeholder="Placeholder text" dir="auto" />
    </div>
    <div class="bp3-form-helper-text">Please enter a value</div>
  </div>
</div>

:disabled - Disable the input.
.bp3-disabled - Disabled styles. Input must be disabled separately via attribute.
.bp3-inline - Label and content appear side by side.
.bp3-intent-primary - Apply intent to form group and input separately.

Styleguide form-group
*/
.bp3-form-group {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
    margin: 0 0 15px;
  /* stylelint-disable-next-line order/declaration-block-order */
}

.bp3-form-group label.bp3-label {
    margin-bottom: 5px;
}

.bp3-form-group .bp3-control {
    margin-top: 7px;
}

.bp3-form-group .bp3-form-helper-text {
    color: hsl(209, 0%, 47%);
    color: var(--pt-text-color-muted);
    font-size: 12px;
    margin-top: 5px;
}

.bp3-form-group.bp3-intent-primary .bp3-form-helper-text {
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-form-group.bp3-intent-success .bp3-form-helper-text {
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-form-group.bp3-intent-warning .bp3-form-helper-text {
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-form-group.bp3-intent-danger .bp3-form-helper-text {
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-form-group.bp3-inline {
    -webkit-align-items: flex-start;
    align-items: flex-start;
    -webkit-flex-direction: row;
    flex-direction: row;
}

.bp3-form-group.bp3-inline.bp3-large label.bp3-label {
    line-height: 40px;
    margin: 0 10px 0 0;
}

.bp3-form-group.bp3-inline label.bp3-label {
    line-height: 30px;
    margin: 0 10px 0 0;
}

.bp3-form-group.bp3-disabled .bp3-label,
  .bp3-form-group.bp3-disabled .bp3-text-muted,
  .bp3-form-group.bp3-disabled .bp3-form-helper-text {
    /* stylelint-disable-next-line declaration-no-important */
    color: hsla(209, 0%, 9%, 0.3) !important;
    color: var(--pt-text-color-disabled) !important;
}

.bp3-dark .bp3-form-group.bp3-intent-primary .bp3-form-helper-text {
    color: hsl(209,   100%, 59%);
    color: var(--pt-dark-intent-primary-text-color);
}

.bp3-dark .bp3-form-group.bp3-intent-success .bp3-form-helper-text {
    color: hsl(113, 57%,  57%);
    color: var(--pt-dark-intent-success-text-color);
}

.bp3-dark .bp3-form-group.bp3-intent-warning .bp3-form-helper-text {
    color: hsl(30, 100%, 70%);
    color: var(--pt-dark-intent-warning-text-color);
}

.bp3-dark .bp3-form-group.bp3-intent-danger .bp3-form-helper-text {
    color: hsl(0, 100%, 73%);
    color: var(--pt-dark-intent-danger-text-color);
}

.bp3-dark .bp3-form-group .bp3-form-helper-text {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-text-color-muted);
}

.bp3-dark .bp3-form-group.bp3-disabled .bp3-label,
  .bp3-dark .bp3-form-group.bp3-disabled .bp3-text-muted,
  .bp3-dark .bp3-form-group.bp3-disabled .bp3-form-helper-text {
    /* stylelint-disable-next-line declaration-no-important */
    color: hsla(209, 0%, 100%, 0.3) !important;
    color: var(--pt-dark-text-color-disabled) !important;
}

/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
/*
Input groups

Markup:
<div class="bp3-input-group {{.modifier}}">
  <span class="bp3-icon bp3-icon-filter"></span>
  <input type="text" class="bp3-input" {{:modifier}} placeholder="Filter histogram..." />
</div>
<div class="bp3-input-group {{.modifier}}">
  <input type="password" class="bp3-input" {{:modifier}} placeholder="Enter your password..." />
  <button class="bp3-button bp3-minimal bp3-intent-warning bp3-icon-lock" {{:modifier}}></button>
</div>
<div class="bp3-input-group {{.modifier}}">
  <span class="bp3-icon bp3-icon-search"></span>
  <input type="text" class="bp3-input" {{:modifier}} placeholder="Search" />
  <button class="bp3-button bp3-minimal bp3-intent-primary bp3-icon-arrow-right" {{:modifier}}></button>
</div>

:disabled - Disabled input. Must be added separately to the <code>&#60;input&#62;</code> and <code>&#60;button&#62;</code>. Also add <code>.bp3-disabled</code> to <code>.bp3-input-group</code> for icon coloring (not shown below).
.bp3-round - Rounded caps. Button will also be rounded.
.bp3-large - Large group. Children will adjust size accordingly.
.bp3-small - Small group. Children will adjust size accordingly.
.bp3-intent-primary - Primary intent. (All 4 intents are supported.)
.bp3-fill - Take up full width of parent element.

Styleguide input-group
*/
.bp3-input-group {
    display: block;
    position: relative;
}

.bp3-input-group .bp3-input {
    position: relative;
    width: 100%;
}

.bp3-input-group .bp3-input:not(:first-child) {
    padding-left: 30px;
}

.bp3-input-group .bp3-input:not(:last-child) {
    padding-right: 30px;
}

.bp3-input-group .bp3-input-action,
  .bp3-input-group > .bp3-input-left-container,
  .bp3-input-group > .bp3-button,
  .bp3-input-group > .bp3-icon {
    position: absolute;
    top: 0;
}

.bp3-input-group .bp3-input-action:first-child,
    .bp3-input-group > .bp3-input-left-container:first-child,
    .bp3-input-group > .bp3-button:first-child,
    .bp3-input-group > .bp3-icon:first-child {
    left: 0;
}

.bp3-input-group .bp3-input-action:last-child,
    .bp3-input-group > .bp3-input-left-container:last-child,
    .bp3-input-group > .bp3-button:last-child,
    .bp3-input-group > .bp3-icon:last-child {
    right: 0;
}

.bp3-input-group .bp3-button {
    min-height: 24px;
    min-width: 24px;
    margin: 3px;
    padding: 0 7px;
}

.bp3-input-group .bp3-button:empty {
    padding: 0;
}

.bp3-input-group > .bp3-input-left-container,
  .bp3-input-group > .bp3-icon {
    z-index: 1;
}

.bp3-input-group > .bp3-input-left-container > .bp3-icon,
  .bp3-input-group > .bp3-icon {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
}

.bp3-input-group > .bp3-input-left-container > .bp3-icon:empty,
    .bp3-input-group > .bp3-icon:empty {
    font-family: "Icons16", sans-serif;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 1;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
}

.bp3-input-group > .bp3-input-left-container > .bp3-icon,
  .bp3-input-group > .bp3-icon,
  .bp3-input-group .bp3-input-action > .bp3-spinner {
    margin: 7px;
}

.bp3-input-group .bp3-tag {
    margin: 5px;
}

.bp3-input-group .bp3-input:not(:focus) + .bp3-button.bp3-minimal:not(:hover):not(:focus),
  .bp3-input-group .bp3-input:not(:focus) + .bp3-input-action .bp3-button.bp3-minimal:not(:hover):not(:focus) {
    color: hsl(209, 0%, 47%);
    color: var(--pt-text-color-muted);
    /* stylelint-disable-next-line selector-max-compound-selectors */
}

.bp3-dark .bp3-input-group .bp3-input:not(:focus) + .bp3-button.bp3-minimal:not(:hover):not(:focus), .bp3-dark
    .bp3-input-group .bp3-input:not(:focus) + .bp3-input-action .bp3-button.bp3-minimal:not(:hover):not(:focus) {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-text-color-muted);
}

.bp3-input-group .bp3-input:not(:focus) + .bp3-button.bp3-minimal:not(:hover):not(:focus) .bp3-icon, .bp3-input-group .bp3-input:not(:focus) + .bp3-button.bp3-minimal:not(:hover):not(:focus) .bp3-icon-standard, .bp3-input-group .bp3-input:not(:focus) + .bp3-button.bp3-minimal:not(:hover):not(:focus) .bp3-icon-large,
    .bp3-input-group .bp3-input:not(:focus) + .bp3-input-action .bp3-button.bp3-minimal:not(:hover):not(:focus) .bp3-icon,
    .bp3-input-group .bp3-input:not(:focus) + .bp3-input-action .bp3-button.bp3-minimal:not(:hover):not(:focus) .bp3-icon-standard,
    .bp3-input-group .bp3-input:not(:focus) + .bp3-input-action .bp3-button.bp3-minimal:not(:hover):not(:focus) .bp3-icon-large {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
}

.bp3-input-group .bp3-input:not(:focus) + .bp3-button.bp3-minimal:disabled,
  .bp3-input-group .bp3-input:not(:focus) + .bp3-input-action .bp3-button.bp3-minimal:disabled {
    /* stylelint-disable declaration-no-important */
    color: hsla(209, 0%, 9%, 0.3) !important;
    color: var(--pt-icon-color-disabled) !important;
}

.bp3-input-group .bp3-input:not(:focus) + .bp3-button.bp3-minimal:disabled .bp3-icon, .bp3-input-group .bp3-input:not(:focus) + .bp3-button.bp3-minimal:disabled .bp3-icon-standard, .bp3-input-group .bp3-input:not(:focus) + .bp3-button.bp3-minimal:disabled .bp3-icon-large,
    .bp3-input-group .bp3-input:not(:focus) + .bp3-input-action .bp3-button.bp3-minimal:disabled .bp3-icon,
    .bp3-input-group .bp3-input:not(:focus) + .bp3-input-action .bp3-button.bp3-minimal:disabled .bp3-icon-standard,
    .bp3-input-group .bp3-input:not(:focus) + .bp3-input-action .bp3-button.bp3-minimal:disabled .bp3-icon-large {
    color: hsla(209, 0%, 9%, 0.3) !important;
    color: var(--pt-icon-color-disabled) !important;
}

.bp3-input-group.bp3-disabled {
    cursor: not-allowed;
}

.bp3-input-group.bp3-disabled .bp3-icon {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-icon-color-disabled);
}

.bp3-input-group.bp3-large .bp3-button {
    min-height: 30px;
    min-width: 30px;
    margin: 5px;
}

.bp3-input-group.bp3-large > .bp3-input-left-container > .bp3-icon,
  .bp3-input-group.bp3-large > .bp3-icon,
  .bp3-input-group.bp3-large .bp3-input-action > .bp3-spinner {
    margin: 12px;
}

.bp3-input-group.bp3-large .bp3-input {
    font-size: 16px;
    height: 40px;
    line-height: 40px;
}

.bp3-input-group.bp3-large .bp3-input[type="search"], .bp3-input-group.bp3-large .bp3-input.bp3-round {
    padding: 0 15px;
}

.bp3-input-group.bp3-large .bp3-input:not(:first-child) {
    padding-left: 40px;
}

.bp3-input-group.bp3-large .bp3-input:not(:last-child) {
    padding-right: 40px;
}

.bp3-input-group.bp3-small .bp3-button {
    min-height: 20px;
    min-width: 20px;
    margin: 2px;
}

.bp3-input-group.bp3-small .bp3-tag {
    min-height: 20px;
    min-width: 20px;
    margin: 2px;
}

.bp3-input-group.bp3-small > .bp3-input-left-container > .bp3-icon,
  .bp3-input-group.bp3-small > .bp3-icon,
  .bp3-input-group.bp3-small .bp3-input-action > .bp3-spinner {
    margin: 4px;
}

.bp3-input-group.bp3-small .bp3-input {
    font-size: 12px;
    height: 24px;
    line-height: 24px;
    padding-left: 8px;
    padding-right: 8px;
}

.bp3-input-group.bp3-small .bp3-input[type="search"], .bp3-input-group.bp3-small .bp3-input.bp3-round {
    padding: 0 12px;
}

.bp3-input-group.bp3-small .bp3-input:not(:first-child) {
    padding-left: 24px;
}

.bp3-input-group.bp3-small .bp3-input:not(:last-child) {
    padding-right: 24px;
}

.bp3-input-group.bp3-fill {
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
    width: 100%;
}

.bp3-input-group.bp3-round .bp3-button,
  .bp3-input-group.bp3-round .bp3-input,
  .bp3-input-group.bp3-round .bp3-tag {
    border-radius: 30px;
}

.bp3-dark .bp3-input-group .bp3-icon {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-icon-color);
}

.bp3-dark .bp3-input-group.bp3-disabled .bp3-icon {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-icon-color-disabled);
}

.bp3-input-group.bp3-intent-primary .bp3-input {
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209,   90%,  50%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), var(--pt-input-box-shadow);
}

.bp3-input-group.bp3-intent-primary .bp3-input:focus {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-primary-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-input-group.bp3-intent-primary .bp3-input[readonly] {
    box-shadow: inset 0 0 0 1px hsl(209,   90%,  50%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-primary);
}

.bp3-input-group.bp3-intent-primary .bp3-input:disabled, .bp3-input-group.bp3-intent-primary .bp3-input.bp3-disabled {
    box-shadow: none;
}

.bp3-input-group.bp3-intent-primary > .bp3-icon {
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-dark .bp3-input-group.bp3-intent-primary > .bp3-icon {
    color: hsl(209,   100%, 59%);
    color: var(--pt-dark-intent-primary-text-color);
}

.bp3-input-group.bp3-intent-success .bp3-input {
    box-shadow: 0 0 0 0 hsla(113, 100%, 34%, 0), 0 0 0 0 hsla(113, 100%, 34%, 0), inset 0 0 0 1px hsla(113, 100%, 34%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), var(--pt-input-box-shadow);
}

.bp3-input-group.bp3-intent-success .bp3-input:focus {
    box-shadow: 0 0 0 1px hsla(113, 100%, 34%, 1), 0 0 0 3px hsla(113, 100%, 34%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-success-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-input-group.bp3-intent-success .bp3-input[readonly] {
    box-shadow: inset 0 0 0 1px hsl(113, 100%, 34%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-success);
}

.bp3-input-group.bp3-intent-success .bp3-input:disabled, .bp3-input-group.bp3-intent-success .bp3-input.bp3-disabled {
    box-shadow: none;
}

.bp3-input-group.bp3-intent-success > .bp3-icon {
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-dark .bp3-input-group.bp3-intent-success > .bp3-icon {
    color: hsl(113, 57%,  57%);
    color: var(--pt-dark-intent-success-text-color);
}

.bp3-input-group.bp3-intent-warning .bp3-input {
    box-shadow: 0 0 0 0 hsla(30, 70%, 51%, 0), 0 0 0 0 hsla(30, 70%, 51%, 0), inset 0 0 0 1px hsla(30, 70%, 51%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), var(--pt-input-box-shadow);
}

.bp3-input-group.bp3-intent-warning .bp3-input:focus {
    box-shadow: 0 0 0 1px hsla(30, 70%, 51%, 1), 0 0 0 3px hsla(30, 70%, 51%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-warning-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-input-group.bp3-intent-warning .bp3-input[readonly] {
    box-shadow: inset 0 0 0 1px hsl(30, 70%, 51%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-warning);
}

.bp3-input-group.bp3-intent-warning .bp3-input:disabled, .bp3-input-group.bp3-intent-warning .bp3-input.bp3-disabled {
    box-shadow: none;
}

.bp3-input-group.bp3-intent-warning > .bp3-icon {
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-dark .bp3-input-group.bp3-intent-warning > .bp3-icon {
    color: hsl(30, 100%, 70%);
    color: var(--pt-dark-intent-warning-text-color);
}

.bp3-input-group.bp3-intent-danger .bp3-input {
    box-shadow: 0 0 0 0 hsla(0, 69%, 54%, 0), 0 0 0 0 hsla(0, 69%, 54%, 0), inset 0 0 0 1px hsla(0, 69%, 54%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), var(--pt-input-box-shadow);
}

.bp3-input-group.bp3-intent-danger .bp3-input:focus {
    box-shadow: 0 0 0 1px hsla(0, 69%, 54%, 1), 0 0 0 3px hsla(0, 69%, 54%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-danger-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-input-group.bp3-intent-danger .bp3-input[readonly] {
    box-shadow: inset 0 0 0 1px hsl(0, 69%, 54%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-danger);
}

.bp3-input-group.bp3-intent-danger .bp3-input:disabled, .bp3-input-group.bp3-intent-danger .bp3-input.bp3-disabled {
    box-shadow: none;
}

.bp3-input-group.bp3-intent-danger > .bp3-icon {
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-dark .bp3-input-group.bp3-intent-danger > .bp3-icon {
    color: hsl(0, 100%, 73%);
    color: var(--pt-dark-intent-danger-text-color);
}

/*
Text inputs

Markup:
<input class="bp3-input {{.modifier}}" {{:modifier}} type="text" placeholder="Text input" dir="auto" />

:disabled - Disabled
:readonly - Readonly
.bp3-round - Rounded ends
.bp3-large - Larger size
.bp3-small - Small size
.bp3-intent-primary - Primary intent
.bp3-intent-success - Success intent
.bp3-intent-warning - Warning intent
.bp3-intent-danger - Danger intent
.bp3-fill - Take up full width of parent element

Styleguide input
*/
.bp3-input {
    -webkit-appearance: none;
    appearance: none;
    background: hsl(209, 0%, 100%);
    background: var(--input-background-color);
    border: none;
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--input-shadow-color-focus-hsl), 0), 0 0 0 0 hsla(var(--input-shadow-color-focus-hsl), 0), var(--pt-input-box-shadow);
    color: hsl(209, 0%, 15%);
    color: var(--input-color);
    font-size: 14px;
    font-weight: 400;
    height: 30px;
    line-height: 30px;
    outline: none;
    padding: 0 10px;
    transition: box-shadow 100ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: box-shadow 100ms var(--pt-transition-ease);
    vertical-align: middle;
}

.bp3-input::-webkit-input-placeholder {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-placeholder-color);
    opacity: 1;
}

.bp3-input:-ms-input-placeholder {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-placeholder-color);
    opacity: 1;
}

.bp3-input::placeholder {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-placeholder-color);
    opacity: 1;
}

.bp3-input:focus, .bp3-input.bp3-active {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--input-shadow-color-focus-hsl), 1), 0 0 0 3px hsla(var(--input-shadow-color-focus-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-input[type="search"], .bp3-input.bp3-round {
    border-radius: 30px;
    box-sizing: border-box;
    padding-left: 10px;
}

.bp3-input[readonly] {
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 0 0 1px var(--pt-divider-black);
}

.bp3-input:disabled, .bp3-input.bp3-disabled {
    background: hsla(209, 0%, 85%, 0.5);
    background: var(--input-background-color-disabled);
    box-shadow: none;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-color-disabled);
    cursor: not-allowed;
    resize: none;
}

.bp3-input.bp3-large {
    font-size: 16px;
    height: 40px;
    line-height: 40px;
}

.bp3-input.bp3-large[type="search"], .bp3-input.bp3-large.bp3-round {
    padding: 0 15px;
}

.bp3-input.bp3-small {
    font-size: 12px;
    height: 24px;
    line-height: 24px;
    padding-left: 8px;
    padding-right: 8px;
}

.bp3-input.bp3-small[type="search"], .bp3-input.bp3-small.bp3-round {
    padding: 0 12px;
}

.bp3-input.bp3-fill {
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
    width: 100%;
}

.bp3-dark .bp3-input {
    background: hsla(209, 0%, 9%, 0.3);
    background: var(--dark-input-background-color);
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--dark-input-shadow-color-focus-hsl), 0), 0 0 0 0 hsla(var(--dark-input-shadow-color-focus-hsl), 0), 0 0 0 0 hsla(var(--dark-input-shadow-color-focus-hsl), 0), var(--pt-dark-input-box-shadow);
    color: hsl(209, 0%, 97%);
    color: var(--dark-input-color);
}

.bp3-dark .bp3-input::-webkit-input-placeholder {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-placeholder-color);
}

.bp3-dark .bp3-input:-ms-input-placeholder {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-placeholder-color);
}

.bp3-dark .bp3-input::placeholder {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-placeholder-color);
}

.bp3-dark .bp3-input:focus {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--dark-input-shadow-color-focus-hsl), 1), 0 0 0 1px hsla(var(--dark-input-shadow-color-focus-hsl), 1), 0 0 0 3px hsla(var(--dark-input-shadow-color-focus-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-input[readonly] {
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 0 0 1px var(--pt-dark-divider-black);
}

.bp3-dark .bp3-input:disabled, .bp3-dark .bp3-input.bp3-disabled {
    background: hsla(209, 0%, 38%, 0.5);
    background: var(--dark-input-background-color-disabled);
    box-shadow: none;
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-color-disabled);
}

.bp3-input.bp3-intent-primary {
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209,   90%,  50%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), var(--pt-input-box-shadow);
}

.bp3-input.bp3-intent-primary:focus {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-primary-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-input.bp3-intent-primary[readonly] {
    box-shadow: inset 0 0 0 1px hsl(209,   90%,  50%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-primary);
}

.bp3-input.bp3-intent-primary:disabled, .bp3-input.bp3-intent-primary.bp3-disabled {
    box-shadow: none;
}

.bp3-dark .bp3-input.bp3-intent-primary {
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209,   90%,  50%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-input.bp3-intent-primary:focus {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-primary-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-input.bp3-intent-primary[readonly] {
    box-shadow: inset 0 0 0 1px hsl(209,   90%,  50%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-primary);
}

.bp3-dark .bp3-input.bp3-intent-primary:disabled, .bp3-dark .bp3-input.bp3-intent-primary.bp3-disabled {
    box-shadow: none;
}

.bp3-input.bp3-intent-success {
    box-shadow: 0 0 0 0 hsla(113, 100%, 34%, 0), 0 0 0 0 hsla(113, 100%, 34%, 0), inset 0 0 0 1px hsla(113, 100%, 34%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), var(--pt-input-box-shadow);
}

.bp3-input.bp3-intent-success:focus {
    box-shadow: 0 0 0 1px hsla(113, 100%, 34%, 1), 0 0 0 3px hsla(113, 100%, 34%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-success-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-input.bp3-intent-success[readonly] {
    box-shadow: inset 0 0 0 1px hsl(113, 100%, 34%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-success);
}

.bp3-input.bp3-intent-success:disabled, .bp3-input.bp3-intent-success.bp3-disabled {
    box-shadow: none;
}

.bp3-dark .bp3-input.bp3-intent-success {
    box-shadow: 0 0 0 0 hsla(113, 100%, 34%, 0), 0 0 0 0 hsla(113, 100%, 34%, 0), 0 0 0 0 hsla(113, 100%, 34%, 0), inset 0 0 0 1px hsla(113, 100%, 34%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-input.bp3-intent-success:focus {
    box-shadow: 0 0 0 1px hsla(113, 100%, 34%, 1), 0 0 0 1px hsla(113, 100%, 34%, 1), 0 0 0 3px hsla(113, 100%, 34%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-success-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-input.bp3-intent-success[readonly] {
    box-shadow: inset 0 0 0 1px hsl(113, 100%, 34%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-success);
}

.bp3-dark .bp3-input.bp3-intent-success:disabled, .bp3-dark .bp3-input.bp3-intent-success.bp3-disabled {
    box-shadow: none;
}

.bp3-input.bp3-intent-warning {
    box-shadow: 0 0 0 0 hsla(30, 70%, 51%, 0), 0 0 0 0 hsla(30, 70%, 51%, 0), inset 0 0 0 1px hsla(30, 70%, 51%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), var(--pt-input-box-shadow);
}

.bp3-input.bp3-intent-warning:focus {
    box-shadow: 0 0 0 1px hsla(30, 70%, 51%, 1), 0 0 0 3px hsla(30, 70%, 51%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-warning-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-input.bp3-intent-warning[readonly] {
    box-shadow: inset 0 0 0 1px hsl(30, 70%, 51%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-warning);
}

.bp3-input.bp3-intent-warning:disabled, .bp3-input.bp3-intent-warning.bp3-disabled {
    box-shadow: none;
}

.bp3-dark .bp3-input.bp3-intent-warning {
    box-shadow: 0 0 0 0 hsla(30, 70%, 51%, 0), 0 0 0 0 hsla(30, 70%, 51%, 0), 0 0 0 0 hsla(30, 70%, 51%, 0), inset 0 0 0 1px hsla(30, 70%, 51%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-input.bp3-intent-warning:focus {
    box-shadow: 0 0 0 1px hsla(30, 70%, 51%, 1), 0 0 0 1px hsla(30, 70%, 51%, 1), 0 0 0 3px hsla(30, 70%, 51%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-warning-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-input.bp3-intent-warning[readonly] {
    box-shadow: inset 0 0 0 1px hsl(30, 70%, 51%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-warning);
}

.bp3-dark .bp3-input.bp3-intent-warning:disabled, .bp3-dark .bp3-input.bp3-intent-warning.bp3-disabled {
    box-shadow: none;
}

.bp3-input.bp3-intent-danger {
    box-shadow: 0 0 0 0 hsla(0, 69%, 54%, 0), 0 0 0 0 hsla(0, 69%, 54%, 0), inset 0 0 0 1px hsla(0, 69%, 54%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), var(--pt-input-box-shadow);
}

.bp3-input.bp3-intent-danger:focus {
    box-shadow: 0 0 0 1px hsla(0, 69%, 54%, 1), 0 0 0 3px hsla(0, 69%, 54%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-danger-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-input.bp3-intent-danger[readonly] {
    box-shadow: inset 0 0 0 1px hsl(0, 69%, 54%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-danger);
}

.bp3-input.bp3-intent-danger:disabled, .bp3-input.bp3-intent-danger.bp3-disabled {
    box-shadow: none;
}

.bp3-dark .bp3-input.bp3-intent-danger {
    box-shadow: 0 0 0 0 hsla(0, 69%, 54%, 0), 0 0 0 0 hsla(0, 69%, 54%, 0), 0 0 0 0 hsla(0, 69%, 54%, 0), inset 0 0 0 1px hsla(0, 69%, 54%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-input.bp3-intent-danger:focus {
    box-shadow: 0 0 0 1px hsla(0, 69%, 54%, 1), 0 0 0 1px hsla(0, 69%, 54%, 1), 0 0 0 3px hsla(0, 69%, 54%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-danger-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-input.bp3-intent-danger[readonly] {
    box-shadow: inset 0 0 0 1px hsl(0, 69%, 54%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-danger);
}

.bp3-dark .bp3-input.bp3-intent-danger:disabled, .bp3-dark .bp3-input.bp3-intent-danger.bp3-disabled {
    box-shadow: none;
}

.bp3-input::-ms-clear {
    display: none;
}

/*
Search inputs

Markup:
<div class="bp3-input-group {{.modifier}}">
  <span class="bp3-icon bp3-icon-search"></span>
  <input class="bp3-input" {{:modifier}} type="search" placeholder="Search input" dir="auto" />
</div>

:disabled - Disabled. Also add <code>.bp3-disabled</code> to <code>.bp3-input-group</code> for icon coloring (not shown below).
.bp3-large - Large
.bp3-small - Small

Styleguide input-search
*/
/*
Textareas

Markup:
<textarea class="bp3-input {{.modifier}}" {{:modifier}} dir="auto"></textarea>

:disabled - Disabled
:readonly - Readonly
.bp3-large - Larger font size
.bp3-small - Small font size
.bp3-intent-primary - Primary intent
.bp3-intent-danger  - Danger intent
.bp3-fill  - Take up full width of parent element

Styleguide textarea
*/
/* stylelint-disable-next-line selector-no-qualifying-type */
textarea.bp3-input {
    max-width: 100%;
    padding: 10px;
}

textarea.bp3-input, textarea.bp3-input.bp3-large, textarea.bp3-input.bp3-small {
    height: auto;
    line-height: inherit;
}

textarea.bp3-input.bp3-small {
    padding: 8px;
}

.bp3-dark textarea.bp3-input {
    background: hsla(209, 0%, 9%, 0.3);
    background: var(--dark-input-background-color);
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--dark-input-shadow-color-focus-hsl), 0), 0 0 0 0 hsla(var(--dark-input-shadow-color-focus-hsl), 0), 0 0 0 0 hsla(var(--dark-input-shadow-color-focus-hsl), 0), var(--pt-dark-input-box-shadow);
    color: hsl(209, 0%, 97%);
    color: var(--dark-input-color);
}

.bp3-dark textarea.bp3-input::-webkit-input-placeholder {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-placeholder-color);
}

.bp3-dark textarea.bp3-input:-ms-input-placeholder {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-placeholder-color);
}

.bp3-dark textarea.bp3-input::placeholder {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-placeholder-color);
}

.bp3-dark textarea.bp3-input:focus {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--dark-input-shadow-color-focus-hsl), 1), 0 0 0 1px hsla(var(--dark-input-shadow-color-focus-hsl), 1), 0 0 0 3px hsla(var(--dark-input-shadow-color-focus-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark textarea.bp3-input[readonly] {
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 0 0 1px var(--pt-dark-divider-black);
}

.bp3-dark textarea.bp3-input:disabled, .bp3-dark textarea.bp3-input.bp3-disabled {
    background: hsla(209, 0%, 38%, 0.5);
    background: var(--dark-input-background-color-disabled);
    box-shadow: none;
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-color-disabled);
}

/*
Labels

Markup:
<div>
  <label class="bp3-label {{.modifier}}">
    Label A
    <span class="bp3-text-muted">(optional)</span>
    <input {{:modifier}} class="bp3-input" style="width: 200px;" type="text" placeholder="Text input" dir="auto" />
  </label>
  <label class="bp3-label {{.modifier}}">
    Label B
    <div class="bp3-input-group {{.modifier}}">
      <span class="bp3-icon bp3-icon-calendar"></span>
      <input {{:modifier}} class="bp3-input" style="width: 200px;" type="text" placeholder="Input group" dir="auto" />
    </div>
  </label>
  <label class="bp3-label {{.modifier}}">
    Label C
    <div class="bp3-select {{.modifier}}">
      <select {{:modifier}}>
        <option selected>Choose an item...</option>
        <option value="1">One</option>
      </select>
    </div>
  </label>
</div>

:disabled - Disable the input.
.bp3-disabled - Disabled styles. Input must be disabled separately via attribute.
.bp3-inline - Label and content appear side by side.

Styleguide label
*/
label.bp3-label {
    display: block;
    margin-bottom: 15px;
    margin-top: 0;
}

label.bp3-label .bp3-html-select,
  label.bp3-label .bp3-input,
  label.bp3-label .bp3-select,
  label.bp3-label .bp3-slider,
  label.bp3-label .bp3-popover-wrapper {
    display: block;
    margin-top: 5px;
    text-transform: none;
}

label.bp3-label .bp3-button-group {
    margin-top: 5px;
}

label.bp3-label .bp3-select select,
  label.bp3-label .bp3-html-select select {
    font-weight: 400;
    vertical-align: top;
    width: 100%;
}

label.bp3-label.bp3-disabled,
  label.bp3-label.bp3-disabled .bp3-text-muted {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
}

label.bp3-label.bp3-inline {
    line-height: 30px;
}

label.bp3-label.bp3-inline .bp3-html-select,
    label.bp3-label.bp3-inline .bp3-input,
    label.bp3-label.bp3-inline .bp3-input-group,
    label.bp3-label.bp3-inline .bp3-select,
    label.bp3-label.bp3-inline .bp3-popover-wrapper {
    display: inline-block;
    margin: 0 0 0 5px;
    vertical-align: top;
}

label.bp3-label.bp3-inline .bp3-button-group {
    margin: 0 0 0 5px;
}

label.bp3-label.bp3-inline .bp3-input-group .bp3-input {
    margin-left: 0;
}

label.bp3-label.bp3-inline.bp3-large {
    line-height: 40px;
}

label.bp3-label:not(.bp3-inline) .bp3-popover-target {
    display: block;
}

.bp3-dark label.bp3-label {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-heading-color);
}

.bp3-dark label.bp3-label.bp3-disabled,
    .bp3-dark label.bp3-label.bp3-disabled .bp3-text-muted {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
.bp3-numeric-input .bp3-button-group.bp3-vertical > .bp3-button {
    -webkit-flex: 1 1 14px;
    flex: 1 1 14px;
    min-height: 0;
    padding: 0;
    width: 30px;
}

.bp3-numeric-input .bp3-button-group.bp3-vertical > .bp3-button:first-child {
    border-radius: 0 6px 0 0;
    border-radius: 0 var(--pt-border-radius) 0 0;
}

.bp3-numeric-input .bp3-button-group.bp3-vertical > .bp3-button:last-child {
    border-radius: 0 0 6px 0;
    border-radius: 0 0 var(--pt-border-radius) 0;
}

.bp3-numeric-input .bp3-button-group.bp3-vertical:first-child > .bp3-button:first-child {
    border-radius: 6px 0 0 0;
    border-radius: var(--pt-border-radius) 0 0 0;
}

.bp3-numeric-input .bp3-button-group.bp3-vertical:first-child > .bp3-button:last-child {
    border-radius: 0 0 0 6px;
    border-radius: 0 0 0 var(--pt-border-radius);
}

.bp3-numeric-input.bp3-large .bp3-button-group.bp3-vertical > .bp3-button {
    width: 40px;
}

form {
    display: block;
}

/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
.bp3-html-select select,
.bp3-select select {
    display: -webkit-inline-flex;
    display: inline-flex;
    -webkit-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: center;
    align-items: center;
    border: none;
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    cursor: pointer;
    font-size: 14px;
    -webkit-justify-content: center;
    justify-content: center;
    padding: 5px 10px;
    text-align: left;
    vertical-align: middle;
    background-color: hsl(209, 0%, 97%);
    background-color: var(--button-background-color);
    background-image: unset;
    background-image: var(--button-gradient);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: var(--button-box-shadow);
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
  /* stylelint-disable property-no-vendor-prefix */
    -moz-appearance: none;
    -webkit-appearance: none;
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    height: 30px;
    padding: 0 25px 0 10px;
    width: 100%;
  /* stylelint-enable property-no-vendor-prefix */
}

.bp3-html-select select > *, .bp3-select select > * {
    -webkit-flex-grow: 0;
    flex-grow: 0;
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
}

.bp3-html-select select > .bp3-fill, .bp3-select select > .bp3-fill {
    -webkit-flex-grow: 1;
    flex-grow: 1;
    -webkit-flex-shrink: 1;
    flex-shrink: 1;
}

.bp3-html-select select::before,
  .bp3-select select::before, .bp3-html-select select > *, .bp3-select select > * {
    margin-right: 7px;
}

.bp3-html-select select:empty::before,
  .bp3-select select:empty::before,
  .bp3-html-select select > :last-child,
  .bp3-select select > :last-child {
    margin-right: 0;
}

.bp3-html-select select:hover,
  .bp3-select select:hover {
    background-clip: padding-box;
    background-color: hsl(209, 0%, 94%);
    background-color: var(--button-background-color-hover);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: var(--button-box-shadow);
}

.bp3-html-select select:active,
  .bp3-select select:active, .bp3-html-select select.bp3-active,
  .bp3-select select.bp3-active {
    background-color: hsl(209, 0%, 87%);
    background-color: var(--button-background-color-active);
    background-image: none;
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.3);
    box-shadow: var(--button-box-shadow-active);
}

.bp3-html-select select:disabled,
  .bp3-select select:disabled, .bp3-html-select select.bp3-disabled,
  .bp3-select select.bp3-disabled {
    background-color: hsla(209, 0%, 85%, 0.5);
    background-color: var(--button-background-color-disabled);
    background-image: none;
    box-shadow: none;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--button-color-disabled);
    cursor: not-allowed;
    outline: none;
}

.bp3-html-select select:disabled.bp3-active,
    .bp3-select select:disabled.bp3-active, .bp3-html-select select:disabled.bp3-active:hover,
    .bp3-select select:disabled.bp3-active:hover, .bp3-html-select select.bp3-disabled.bp3-active,
    .bp3-select select.bp3-disabled.bp3-active, .bp3-html-select select.bp3-disabled.bp3-active:hover,
    .bp3-select select.bp3-disabled.bp3-active:hover {
    background: hsla(209, 0%, 85%, 0.7);
    background: var(--button-background-color-active-disabled);
}

.bp3-html-select.bp3-minimal select,
.bp3-select.bp3-minimal select {
    background: none;
    background: var(--minimal-button-background-color);
    box-shadow: none;
}

.bp3-html-select.bp3-minimal select:hover,
  .bp3-select.bp3-minimal select:hover {
    background: hsla(209, 0%, 73%, 0.3);
    background: var(--minimal-button-background-color-hover);
    box-shadow: none;
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
    text-decoration: none;
}

.bp3-html-select.bp3-minimal select:active,
  .bp3-select.bp3-minimal select:active, .bp3-html-select.bp3-minimal select.bp3-active,
  .bp3-select.bp3-minimal select.bp3-active {
    background: hsla(209, 0%, 54%, 0.3);
    background: var(--minimal-button-background-color-active);
    box-shadow: none;
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
}

.bp3-html-select.bp3-minimal select:disabled,
  .bp3-select.bp3-minimal select:disabled, .bp3-html-select.bp3-minimal select:disabled:hover,
  .bp3-select.bp3-minimal select:disabled:hover, .bp3-html-select.bp3-minimal select.bp3-disabled,
  .bp3-select.bp3-minimal select.bp3-disabled, .bp3-html-select.bp3-minimal select.bp3-disabled:hover,
  .bp3-select.bp3-minimal select.bp3-disabled:hover {
    background: none;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
    cursor: not-allowed;
}

.bp3-html-select.bp3-minimal select:disabled.bp3-active,
    .bp3-select.bp3-minimal select:disabled.bp3-active, .bp3-html-select.bp3-minimal select:disabled:hover.bp3-active,
    .bp3-select.bp3-minimal select:disabled:hover.bp3-active, .bp3-html-select.bp3-minimal select.bp3-disabled.bp3-active,
    .bp3-select.bp3-minimal select.bp3-disabled.bp3-active, .bp3-html-select.bp3-minimal select.bp3-disabled:hover.bp3-active,
    .bp3-select.bp3-minimal select.bp3-disabled:hover.bp3-active {
    background: hsla(209, 0%, 54%, 0.3);
    background: var(--minimal-button-background-color-active);
}

.bp3-dark .bp3-html-select.bp3-minimal select, .bp3-html-select.bp3-minimal .bp3-dark select,
  .bp3-dark .bp3-select.bp3-minimal select, .bp3-select.bp3-minimal .bp3-dark select {
    background: none;
    background: var(--dark-minimal-button-background-color);
    box-shadow: none;
    color: inherit;
}

.bp3-dark .bp3-html-select.bp3-minimal select:hover, .bp3-html-select.bp3-minimal .bp3-dark select:hover,
    .bp3-dark .bp3-select.bp3-minimal select:hover, .bp3-select.bp3-minimal .bp3-dark select:hover, .bp3-dark .bp3-html-select.bp3-minimal select:active, .bp3-html-select.bp3-minimal .bp3-dark select:active,
    .bp3-dark .bp3-select.bp3-minimal select:active, .bp3-select.bp3-minimal .bp3-dark select:active, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-active,
    .bp3-dark .bp3-select.bp3-minimal select.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-active {
    background: none;
    box-shadow: none;
}

.bp3-dark .bp3-html-select.bp3-minimal select:hover, .bp3-html-select.bp3-minimal .bp3-dark select:hover,
    .bp3-dark .bp3-select.bp3-minimal select:hover, .bp3-select.bp3-minimal .bp3-dark select:hover {
    background: hsla(209, 0%, 80%, 0.3);
    background: var(--dark-minimal-button-background-color-hover);
}

.bp3-dark .bp3-html-select.bp3-minimal select:active, .bp3-html-select.bp3-minimal .bp3-dark select:active,
    .bp3-dark .bp3-select.bp3-minimal select:active, .bp3-select.bp3-minimal .bp3-dark select:active, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-active,
    .bp3-dark .bp3-select.bp3-minimal select.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-active {
    background: hsla(209, 0%, 63%, 0.3);
    background: var(--dark-minimal-button-background-color-active);
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select:disabled, .bp3-html-select.bp3-minimal .bp3-dark select:disabled,
    .bp3-dark .bp3-select.bp3-minimal select:disabled, .bp3-select.bp3-minimal .bp3-dark select:disabled, .bp3-dark .bp3-html-select.bp3-minimal select:disabled:hover, .bp3-html-select.bp3-minimal .bp3-dark select:disabled:hover,
    .bp3-dark .bp3-select.bp3-minimal select:disabled:hover, .bp3-select.bp3-minimal .bp3-dark select:disabled:hover, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-disabled, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-disabled,
    .bp3-dark .bp3-select.bp3-minimal select.bp3-disabled, .bp3-select.bp3-minimal .bp3-dark select.bp3-disabled, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-disabled:hover, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-disabled:hover,
    .bp3-dark .bp3-select.bp3-minimal select.bp3-disabled:hover, .bp3-select.bp3-minimal .bp3-dark select.bp3-disabled:hover {
    background: none;
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
    cursor: not-allowed;
}

.bp3-dark .bp3-html-select.bp3-minimal select:disabled.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select:disabled.bp3-active,
      .bp3-dark .bp3-select.bp3-minimal select:disabled.bp3-active, .bp3-select.bp3-minimal .bp3-dark select:disabled.bp3-active, .bp3-dark .bp3-html-select.bp3-minimal select:disabled:hover.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select:disabled:hover.bp3-active,
      .bp3-dark .bp3-select.bp3-minimal select:disabled:hover.bp3-active, .bp3-select.bp3-minimal .bp3-dark select:disabled:hover.bp3-active, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-disabled.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-disabled.bp3-active,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-disabled.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-disabled.bp3-active, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-disabled:hover.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-disabled:hover.bp3-active,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-disabled:hover.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-disabled:hover.bp3-active {
    background: hsla(209, 0%, 63%, 0.3);
    background: var(--dark-minimal-button-background-color-active);
}

.bp3-html-select.bp3-minimal select.bp3-intent-primary,
  .bp3-select.bp3-minimal select.bp3-intent-primary {
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-primary:hover,
    .bp3-select.bp3-minimal select.bp3-intent-primary:hover, .bp3-html-select.bp3-minimal select.bp3-intent-primary:active,
    .bp3-select.bp3-minimal select.bp3-intent-primary:active, .bp3-html-select.bp3-minimal select.bp3-intent-primary.bp3-active,
    .bp3-select.bp3-minimal select.bp3-intent-primary.bp3-active {
    background: none;
    box-shadow: none;
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-primary:hover,
    .bp3-select.bp3-minimal select.bp3-intent-primary:hover {
    background: hsla(209,   90%,  50%, 0.15);
    background: hsla(var(--pt-intent-primary-hsl), 0.15);
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-primary:active,
    .bp3-select.bp3-minimal select.bp3-intent-primary:active, .bp3-html-select.bp3-minimal select.bp3-intent-primary.bp3-active,
    .bp3-select.bp3-minimal select.bp3-intent-primary.bp3-active {
    background: hsla(209,   90%,  50%, 0.3);
    background: hsla(var(--pt-intent-primary-hsl), 0.3);
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-primary:disabled,
    .bp3-select.bp3-minimal select.bp3-intent-primary:disabled, .bp3-html-select.bp3-minimal select.bp3-intent-primary.bp3-disabled,
    .bp3-select.bp3-minimal select.bp3-intent-primary.bp3-disabled {
    background: none;
    color: hsla(209,   83%,  46%, 0.5);
    color: hsla(var(--pt-intent-primary-text-color-hsl), 0.5);
}

.bp3-html-select.bp3-minimal select.bp3-intent-primary:disabled.bp3-active,
      .bp3-select.bp3-minimal select.bp3-intent-primary:disabled.bp3-active, .bp3-html-select.bp3-minimal select.bp3-intent-primary.bp3-disabled.bp3-active,
      .bp3-select.bp3-minimal select.bp3-intent-primary.bp3-disabled.bp3-active {
    background: hsla(209,   90%,  50%, 0.3);
    background: hsla(var(--pt-intent-primary-hsl), 0.3);
}

.bp3-html-select.bp3-minimal select.bp3-intent-primary .bp3-button-spinner .bp3-spinner-head, .bp3-select.bp3-minimal select.bp3-intent-primary .bp3-button-spinner .bp3-spinner-head {
    stroke: hsl(209,   83%,  46%);
    stroke: var(--pt-intent-primary-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-primary, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-primary,
    .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-primary, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-primary {
    color: hsl(209,   100%, 59%);
    color: var(--pt-dark-intent-primary-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-primary:hover, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-primary:hover,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-primary:hover, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-primary:hover {
    background: hsla(209,   90%,  50%, 0.2);
    background: hsla(var(--pt-intent-primary-hsl), 0.2);
    color: hsl(209,   100%, 59%);
    color: var(--pt-dark-intent-primary-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-primary:active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-primary:active,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-primary:active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-primary:active, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-primary.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-primary.bp3-active,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-primary.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-primary.bp3-active {
    background: hsla(209,   90%,  50%, 0.3);
    background: hsla(var(--pt-intent-primary-hsl), 0.3);
    color: hsl(209,   100%, 59%);
    color: var(--pt-dark-intent-primary-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-primary:disabled, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-primary:disabled,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-primary:disabled, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-primary:disabled, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-primary.bp3-disabled, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-primary.bp3-disabled,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-primary.bp3-disabled, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-primary.bp3-disabled {
    background: none;
    color: hsla(209,   100%, 59%, 0.5);
    color: hsla(var(--pt-dark-intent-primary-text-color-hsl), 0.5);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-primary:disabled.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-primary:disabled.bp3-active,
        .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-primary:disabled.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-primary:disabled.bp3-active, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-primary.bp3-disabled.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-primary.bp3-disabled.bp3-active,
        .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-primary.bp3-disabled.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-primary.bp3-disabled.bp3-active {
    background: hsla(209,   90%,  50%, 0.3);
    background: hsla(var(--pt-intent-primary-hsl), 0.3);
}

.bp3-html-select.bp3-minimal select.bp3-intent-success,
  .bp3-select.bp3-minimal select.bp3-intent-success {
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-success:hover,
    .bp3-select.bp3-minimal select.bp3-intent-success:hover, .bp3-html-select.bp3-minimal select.bp3-intent-success:active,
    .bp3-select.bp3-minimal select.bp3-intent-success:active, .bp3-html-select.bp3-minimal select.bp3-intent-success.bp3-active,
    .bp3-select.bp3-minimal select.bp3-intent-success.bp3-active {
    background: none;
    box-shadow: none;
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-success:hover,
    .bp3-select.bp3-minimal select.bp3-intent-success:hover {
    background: hsla(113, 100%, 34%, 0.15);
    background: hsla(var(--pt-intent-success-hsl), 0.15);
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-success:active,
    .bp3-select.bp3-minimal select.bp3-intent-success:active, .bp3-html-select.bp3-minimal select.bp3-intent-success.bp3-active,
    .bp3-select.bp3-minimal select.bp3-intent-success.bp3-active {
    background: hsla(113, 100%, 34%, 0.3);
    background: hsla(var(--pt-intent-success-hsl), 0.3);
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-success:disabled,
    .bp3-select.bp3-minimal select.bp3-intent-success:disabled, .bp3-html-select.bp3-minimal select.bp3-intent-success.bp3-disabled,
    .bp3-select.bp3-minimal select.bp3-intent-success.bp3-disabled {
    background: none;
    color: hsla(113, 100%, 29%, 0.5);
    color: hsla(var(--pt-intent-success-text-color-hsl), 0.5);
}

.bp3-html-select.bp3-minimal select.bp3-intent-success:disabled.bp3-active,
      .bp3-select.bp3-minimal select.bp3-intent-success:disabled.bp3-active, .bp3-html-select.bp3-minimal select.bp3-intent-success.bp3-disabled.bp3-active,
      .bp3-select.bp3-minimal select.bp3-intent-success.bp3-disabled.bp3-active {
    background: hsla(113, 100%, 34%, 0.3);
    background: hsla(var(--pt-intent-success-hsl), 0.3);
}

.bp3-html-select.bp3-minimal select.bp3-intent-success .bp3-button-spinner .bp3-spinner-head, .bp3-select.bp3-minimal select.bp3-intent-success .bp3-button-spinner .bp3-spinner-head {
    stroke: hsl(113, 100%, 29%);
    stroke: var(--pt-intent-success-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-success, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-success,
    .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-success, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-success {
    color: hsl(113, 57%,  57%);
    color: var(--pt-dark-intent-success-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-success:hover, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-success:hover,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-success:hover, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-success:hover {
    background: hsla(113, 100%, 34%, 0.2);
    background: hsla(var(--pt-intent-success-hsl), 0.2);
    color: hsl(113, 57%,  57%);
    color: var(--pt-dark-intent-success-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-success:active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-success:active,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-success:active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-success:active, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-success.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-success.bp3-active,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-success.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-success.bp3-active {
    background: hsla(113, 100%, 34%, 0.3);
    background: hsla(var(--pt-intent-success-hsl), 0.3);
    color: hsl(113, 57%,  57%);
    color: var(--pt-dark-intent-success-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-success:disabled, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-success:disabled,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-success:disabled, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-success:disabled, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-success.bp3-disabled, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-success.bp3-disabled,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-success.bp3-disabled, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-success.bp3-disabled {
    background: none;
    color: hsla(113, 57%,  57%, 0.5);
    color: hsla(var(--pt-dark-intent-success-text-color-hsl), 0.5);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-success:disabled.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-success:disabled.bp3-active,
        .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-success:disabled.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-success:disabled.bp3-active, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-success.bp3-disabled.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-success.bp3-disabled.bp3-active,
        .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-success.bp3-disabled.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-success.bp3-disabled.bp3-active {
    background: hsla(113, 100%, 34%, 0.3);
    background: hsla(var(--pt-intent-success-hsl), 0.3);
}

.bp3-html-select.bp3-minimal select.bp3-intent-warning,
  .bp3-select.bp3-minimal select.bp3-intent-warning {
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-warning:hover,
    .bp3-select.bp3-minimal select.bp3-intent-warning:hover, .bp3-html-select.bp3-minimal select.bp3-intent-warning:active,
    .bp3-select.bp3-minimal select.bp3-intent-warning:active, .bp3-html-select.bp3-minimal select.bp3-intent-warning.bp3-active,
    .bp3-select.bp3-minimal select.bp3-intent-warning.bp3-active {
    background: none;
    box-shadow: none;
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-warning:hover,
    .bp3-select.bp3-minimal select.bp3-intent-warning:hover {
    background: hsla(30, 70%, 51%, 0.15);
    background: hsla(var(--pt-intent-warning-hsl), 0.15);
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-warning:active,
    .bp3-select.bp3-minimal select.bp3-intent-warning:active, .bp3-html-select.bp3-minimal select.bp3-intent-warning.bp3-active,
    .bp3-select.bp3-minimal select.bp3-intent-warning.bp3-active {
    background: hsla(30, 70%, 51%, 0.3);
    background: hsla(var(--pt-intent-warning-hsl), 0.3);
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-warning:disabled,
    .bp3-select.bp3-minimal select.bp3-intent-warning:disabled, .bp3-html-select.bp3-minimal select.bp3-intent-warning.bp3-disabled,
    .bp3-select.bp3-minimal select.bp3-intent-warning.bp3-disabled {
    background: none;
    color: hsla(30, 67%, 45%, 0.5);
    color: hsla(var(--pt-intent-warning-text-color-hsl), 0.5);
}

.bp3-html-select.bp3-minimal select.bp3-intent-warning:disabled.bp3-active,
      .bp3-select.bp3-minimal select.bp3-intent-warning:disabled.bp3-active, .bp3-html-select.bp3-minimal select.bp3-intent-warning.bp3-disabled.bp3-active,
      .bp3-select.bp3-minimal select.bp3-intent-warning.bp3-disabled.bp3-active {
    background: hsla(30, 70%, 51%, 0.3);
    background: hsla(var(--pt-intent-warning-hsl), 0.3);
}

.bp3-html-select.bp3-minimal select.bp3-intent-warning .bp3-button-spinner .bp3-spinner-head, .bp3-select.bp3-minimal select.bp3-intent-warning .bp3-button-spinner .bp3-spinner-head {
    stroke: hsl(30, 67%, 45%);
    stroke: var(--pt-intent-warning-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-warning, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-warning,
    .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-warning, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-warning {
    color: hsl(30, 100%, 70%);
    color: var(--pt-dark-intent-warning-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-warning:hover, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-warning:hover,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-warning:hover, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-warning:hover {
    background: hsla(30, 70%, 51%, 0.2);
    background: hsla(var(--pt-intent-warning-hsl), 0.2);
    color: hsl(30, 100%, 70%);
    color: var(--pt-dark-intent-warning-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-warning:active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-warning:active,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-warning:active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-warning:active, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-warning.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-warning.bp3-active,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-warning.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-warning.bp3-active {
    background: hsla(30, 70%, 51%, 0.3);
    background: hsla(var(--pt-intent-warning-hsl), 0.3);
    color: hsl(30, 100%, 70%);
    color: var(--pt-dark-intent-warning-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-warning:disabled, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-warning:disabled,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-warning:disabled, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-warning:disabled, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-warning.bp3-disabled, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-warning.bp3-disabled,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-warning.bp3-disabled, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-warning.bp3-disabled {
    background: none;
    color: hsla(30, 100%, 70%, 0.5);
    color: hsla(var(--pt-dark-intent-warning-text-color-hsl), 0.5);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-warning:disabled.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-warning:disabled.bp3-active,
        .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-warning:disabled.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-warning:disabled.bp3-active, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-warning.bp3-disabled.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-warning.bp3-disabled.bp3-active,
        .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-warning.bp3-disabled.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-warning.bp3-disabled.bp3-active {
    background: hsla(30, 70%, 51%, 0.3);
    background: hsla(var(--pt-intent-warning-hsl), 0.3);
}

.bp3-html-select.bp3-minimal select.bp3-intent-danger,
  .bp3-select.bp3-minimal select.bp3-intent-danger {
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-danger:hover,
    .bp3-select.bp3-minimal select.bp3-intent-danger:hover, .bp3-html-select.bp3-minimal select.bp3-intent-danger:active,
    .bp3-select.bp3-minimal select.bp3-intent-danger:active, .bp3-html-select.bp3-minimal select.bp3-intent-danger.bp3-active,
    .bp3-select.bp3-minimal select.bp3-intent-danger.bp3-active {
    background: none;
    box-shadow: none;
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-danger:hover,
    .bp3-select.bp3-minimal select.bp3-intent-danger:hover {
    background: hsla(0, 69%, 54%, 0.15);
    background: hsla(var(--pt-intent-danger-hsl), 0.15);
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-danger:active,
    .bp3-select.bp3-minimal select.bp3-intent-danger:active, .bp3-html-select.bp3-minimal select.bp3-intent-danger.bp3-active,
    .bp3-select.bp3-minimal select.bp3-intent-danger.bp3-active {
    background: hsla(0, 69%, 54%, 0.3);
    background: hsla(var(--pt-intent-danger-hsl), 0.3);
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-html-select.bp3-minimal select.bp3-intent-danger:disabled,
    .bp3-select.bp3-minimal select.bp3-intent-danger:disabled, .bp3-html-select.bp3-minimal select.bp3-intent-danger.bp3-disabled,
    .bp3-select.bp3-minimal select.bp3-intent-danger.bp3-disabled {
    background: none;
    color: hsla(0, 60%, 47%, 0.5);
    color: hsla(var(--pt-intent-danger-text-color-hsl), 0.5);
}

.bp3-html-select.bp3-minimal select.bp3-intent-danger:disabled.bp3-active,
      .bp3-select.bp3-minimal select.bp3-intent-danger:disabled.bp3-active, .bp3-html-select.bp3-minimal select.bp3-intent-danger.bp3-disabled.bp3-active,
      .bp3-select.bp3-minimal select.bp3-intent-danger.bp3-disabled.bp3-active {
    background: hsla(0, 69%, 54%, 0.3);
    background: hsla(var(--pt-intent-danger-hsl), 0.3);
}

.bp3-html-select.bp3-minimal select.bp3-intent-danger .bp3-button-spinner .bp3-spinner-head, .bp3-select.bp3-minimal select.bp3-intent-danger .bp3-button-spinner .bp3-spinner-head {
    stroke: hsl(0, 60%, 47%);
    stroke: var(--pt-intent-danger-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-danger, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-danger,
    .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-danger, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-danger {
    color: hsl(0, 100%, 73%);
    color: var(--pt-dark-intent-danger-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-danger:hover, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-danger:hover,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-danger:hover, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-danger:hover {
    background: hsla(0, 69%, 54%, 0.2);
    background: hsla(var(--pt-intent-danger-hsl), 0.2);
    color: hsl(0, 100%, 73%);
    color: var(--pt-dark-intent-danger-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-danger:active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-danger:active,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-danger:active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-danger:active, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-danger.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-danger.bp3-active,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-danger.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-danger.bp3-active {
    background: hsla(0, 69%, 54%, 0.3);
    background: hsla(var(--pt-intent-danger-hsl), 0.3);
    color: hsl(0, 100%, 73%);
    color: var(--pt-dark-intent-danger-text-color);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-danger:disabled, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-danger:disabled,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-danger:disabled, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-danger:disabled, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-danger.bp3-disabled, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-danger.bp3-disabled,
      .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-danger.bp3-disabled, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-danger.bp3-disabled {
    background: none;
    color: hsla(0, 100%, 73%, 0.5);
    color: hsla(var(--pt-dark-intent-danger-text-color-hsl), 0.5);
}

.bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-danger:disabled.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-danger:disabled.bp3-active,
        .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-danger:disabled.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-danger:disabled.bp3-active, .bp3-dark .bp3-html-select.bp3-minimal select.bp3-intent-danger.bp3-disabled.bp3-active, .bp3-html-select.bp3-minimal .bp3-dark select.bp3-intent-danger.bp3-disabled.bp3-active,
        .bp3-dark .bp3-select.bp3-minimal select.bp3-intent-danger.bp3-disabled.bp3-active, .bp3-select.bp3-minimal .bp3-dark select.bp3-intent-danger.bp3-disabled.bp3-active {
    background: hsla(0, 69%, 54%, 0.3);
    background: hsla(var(--pt-intent-danger-hsl), 0.3);
}

.bp3-html-select.bp3-large select,
.bp3-select.bp3-large select {
    font-size: 16px;
    height: 40px;
    padding-right: 35px;
}

.bp3-dark .bp3-html-select select, .bp3-dark .bp3-select select {
    background-color: hsl(209, 0%, 38%);
    background-color: var(--dark-button-background-color);
    background-image: unset;
    background-image: var(--dark-button-gradient);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-box-shadow);
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dark .bp3-html-select select:hover, .bp3-dark .bp3-select select:hover, .bp3-dark .bp3-html-select select:active, .bp3-dark .bp3-select select:active, .bp3-dark .bp3-html-select select.bp3-active, .bp3-dark .bp3-select select.bp3-active {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dark .bp3-html-select select:hover, .bp3-dark .bp3-select select:hover {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-button-background-color-hover);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-box-shadow);
}

.bp3-dark .bp3-html-select select:active, .bp3-dark .bp3-select select:active, .bp3-dark .bp3-html-select select.bp3-active, .bp3-dark .bp3-select select.bp3-active {
    background-color: hsl(209, 0%, 18%);
    background-color: var(--dark-button-background-color-active);
    background-image: none;
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.6),
  inset 0 1px 2px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--dark-button-box-shadow-active);
}

.bp3-dark .bp3-html-select select:disabled, .bp3-dark .bp3-select select:disabled, .bp3-dark .bp3-html-select select.bp3-disabled, .bp3-dark .bp3-select select.bp3-disabled {
    background-color: hsla(209, 0%, 38%, 0.5);
    background-color: var(--dark-button-background-color-disabled);
    background-image: none;
    box-shadow: none;
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-button-color-disabled);
}

.bp3-dark .bp3-html-select select:disabled.bp3-active, .bp3-dark .bp3-select select:disabled.bp3-active, .bp3-dark .bp3-html-select select.bp3-disabled.bp3-active, .bp3-dark .bp3-select select.bp3-disabled.bp3-active {
    background: hsla(209, 0%, 38%, 0.7);
    background: var(--dark-button-background-color-active-disabled);
}

.bp3-dark .bp3-html-select select .bp3-button-spinner .bp3-spinner-head, .bp3-dark .bp3-select select .bp3-button-spinner .bp3-spinner-head {
    background: hsla(209, 0%, 9%, 0.5);
    background: var(--dark-progress-track-color);
    stroke: hsl(209, 0%, 63%);
    stroke: var(--dark-progress-head-color);
}

.bp3-html-select select:disabled,
.bp3-select select:disabled {
    background-color: hsla(209, 0%, 85%, 0.5);
    background-color: var(--button-background-color-disabled);
    box-shadow: none;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--button-color-disabled);
    cursor: not-allowed;
}

.bp3-html-select .bp3-icon,
.bp3-select .bp3-icon, .bp3-select::after {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
    pointer-events: none;
    position: absolute;
    right: 7px;
    top: 7px;
}

.bp3-html-select .bp3-disabled.bp3-icon,
  .bp3-select .bp3-disabled.bp3-icon, .bp3-disabled.bp3-select::after {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-icon-color-disabled);
}

/*
HTML select

Markup:
<div class="bp3-select {{.modifier}}">
  <select {{:modifier}}>
    <option selected>Choose an item...</option>
    <option value="1">One</option>
    <option value="2">Two</option>
    <option value="3">Three</option>
    <option value="4">Four</option>
  </select>
</div>

:disabled - Disabled. Also add <code>.bp3-disabled</code> to <code>.bp3-select</code> for icon coloring (not shown below).
.bp3-fill - Expand to fill parent container
.bp3-large - Large size
.bp3-minimal - Minimal appearance

Styleguide select
*/
.bp3-html-select,
.bp3-select {
    display: inline-block;
    letter-spacing: normal;
    position: relative;
    vertical-align: middle;
}

.bp3-html-select select::-ms-expand,
  .bp3-select select::-ms-expand {
    display: none;
}

.bp3-html-select .bp3-icon,
  .bp3-select .bp3-icon {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
}

.bp3-html-select .bp3-icon:hover,
    .bp3-select .bp3-icon:hover {
    color: hsl(209, 0%, 15%);
    color: var(--pt-icon-color-hover);
}

.bp3-dark .bp3-html-select .bp3-icon, .bp3-dark
    .bp3-select .bp3-icon {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-icon-color);
}

.bp3-dark .bp3-html-select .bp3-icon:hover, .bp3-dark
      .bp3-select .bp3-icon:hover {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-icon-color-hover);
}

.bp3-html-select.bp3-large::after,
  .bp3-html-select.bp3-large .bp3-icon,
  .bp3-select.bp3-large::after,
  .bp3-select.bp3-large .bp3-icon {
    right: 12px;
    top: 12px;
}

.bp3-html-select.bp3-fill,
  .bp3-html-select.bp3-fill select,
  .bp3-select.bp3-fill,
  .bp3-select.bp3-fill select {
    width: 100%;
}

.bp3-dark .bp3-html-select option, .bp3-dark
  .bp3-select option {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-popover-background-color);
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dark .bp3-html-select option:disabled, .bp3-dark
  .bp3-select option:disabled {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
}

.bp3-dark .bp3-html-select::after, .bp3-dark
  .bp3-select::after {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-icon-color);
}

.bp3-select::after {
    font-family: "Icons16", sans-serif;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 1;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    content: "";
}

/*
Tables

Markup:
<table class="bp3-html-table {{.modifier}}">
  <thead>
    <tr>
      <th>Project</th>
      <th>Description</th>
      <th>Technologies</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Blueprint</td>
      <td>CSS framework and UI toolkit</td>
      <td>Sass, TypeScript, React</td>
    </tr>
    <tr>
      <td>TSLint</td>
      <td>Static analysis linter for TypeScript</td>
      <td>TypeScript</td>
    </tr>
    <tr>
      <td>Plottable</td>
      <td>Composable charting library built on top of D3</td>
      <td>SVG, TypeScript, D3</td>
    </tr>
  </tbody>
</table>

.bp3-html-table-bordered - Bordered appearance
.bp3-html-table-condensed - Condensed smaller appearance
.bp3-html-table-striped - Striped appearance
.bp3-interactive - Enables hover styles on rows
.bp3-small - Small, condensed appearance for this element _and all child elements_

Styleguide html-table
*/
.bp3-running-text table, table.bp3-html-table {
    border-spacing: 0;
    font-size: 14px;
  /* stylelint-disable selector-max-compound-selectors */
  /* stylelint-enable selector-max-compound-selectors */
}

.bp3-running-text table th, table.bp3-html-table th,
  .bp3-running-text table td,
  table.bp3-html-table td {
    padding: 11px;
    text-align: left;
    vertical-align: top;
}

.bp3-running-text table th, table.bp3-html-table th {
    color: hsl(209, 0%, 15%);
    color: var(--pt-heading-color);
    font-weight: 600;
}

.bp3-running-text table td,
  table.bp3-html-table td {
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
}

.bp3-running-text table tbody tr:first-child th, table.bp3-html-table tbody tr:first-child th,
  .bp3-running-text table tbody tr:first-child td,
  table.bp3-html-table tbody tr:first-child td {
    box-shadow: inset 0 1px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 1px 0 0 var(--table-border-color);
}

.bp3-dark .bp3-running-text table th, .bp3-running-text .bp3-dark table th, .bp3-dark table.bp3-html-table th {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-heading-color);
}

.bp3-dark .bp3-running-text table td, .bp3-running-text .bp3-dark table td, .bp3-dark table.bp3-html-table td {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dark .bp3-running-text table tbody tr:first-child th, .bp3-running-text .bp3-dark table tbody tr:first-child th, .bp3-dark table.bp3-html-table tbody tr:first-child th,
  .bp3-dark .bp3-running-text table tbody tr:first-child td,
  .bp3-running-text .bp3-dark table tbody tr:first-child td,
  .bp3-dark table.bp3-html-table tbody tr:first-child td {
    box-shadow: inset 0 1px 0 0 hsla(209, 0%, 100%, 0.15);
    box-shadow: inset 0 1px 0 0 var(--dark-table-border-color);
}

table.bp3-html-table.bp3-html-table-condensed th,
table.bp3-html-table.bp3-html-table-condensed td, table.bp3-html-table.bp3-small th,
table.bp3-html-table.bp3-small td {
    padding-bottom: 6px;
    padding-top: 6px;
}

table.bp3-html-table.bp3-html-table-striped tbody tr:nth-child(odd) td {
    background: hsla(209, 0%, 80%, 0.15);
    background: hsla(var(--gray5-hsl), 0.15);
}

table.bp3-html-table.bp3-html-table-bordered th:not(:first-child) {
    box-shadow: inset 1px 0 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 1px 0 0 0 var(--table-border-color);
}

table.bp3-html-table.bp3-html-table-bordered tbody tr td {
    box-shadow: inset 0 1px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 1px 0 0 var(--table-border-color);
}

table.bp3-html-table.bp3-html-table-bordered tbody tr td:not(:first-child) {
    box-shadow: inset 1px 1px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 1px 1px 0 0 var(--table-border-color);
}

table.bp3-html-table.bp3-html-table-bordered.bp3-html-table-striped tbody tr:not(:first-child) td {
    box-shadow: none;
}

table.bp3-html-table.bp3-html-table-bordered.bp3-html-table-striped tbody tr:not(:first-child) td:not(:first-child) {
    box-shadow: inset 1px 0 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 1px 0 0 0 var(--table-border-color);
}

table.bp3-html-table.bp3-interactive tbody tr:hover td {
    background-color: hsla(209, 0%, 80%, 0.3);
    background-color: hsla(var(--gray5-hsl), 0.3);
    cursor: pointer;
}

table.bp3-html-table.bp3-interactive tbody tr:active td {
    background-color: hsla(209, 0%, 80%, 0.4);
    background-color: hsla(var(--gray5-hsl), 0.4);
}

.bp3-dark table.bp3-html-table {
  /* stylelint-disable selector-max-compound-selectors */
  /* stylelint-enable selector-max-compound-selectors */
}

.bp3-dark table.bp3-html-table.bp3-html-table-striped tbody tr:nth-child(odd) td {
    background: hsla(209, 0%, 47%, 0.15);
    background: hsla(var(--gray1-hsl), 0.15);
}

.bp3-dark table.bp3-html-table.bp3-html-table-bordered th:not(:first-child) {
    box-shadow: inset 1px 0 0 0 hsla(209, 0%, 100%, 0.15);
    box-shadow: inset 1px 0 0 0 var(--dark-table-border-color);
}

.bp3-dark table.bp3-html-table.bp3-html-table-bordered tbody tr td {
    box-shadow: inset 0 1px 0 0 hsla(209, 0%, 100%, 0.15);
    box-shadow: inset 0 1px 0 0 var(--dark-table-border-color);
}

.bp3-dark table.bp3-html-table.bp3-html-table-bordered tbody tr td:not(:first-child) {
    box-shadow: inset 1px 1px 0 0 hsla(209, 0%, 100%, 0.15);
    box-shadow: inset 1px 1px 0 0 var(--dark-table-border-color);
}

.bp3-dark table.bp3-html-table.bp3-html-table-bordered.bp3-html-table-striped tbody tr:not(:first-child) td {
    box-shadow: inset 1px 0 0 0 hsla(209, 0%, 100%, 0.15);
    box-shadow: inset 1px 0 0 0 var(--dark-table-border-color);
    /* stylelint-disable max-nesting-depth */
}

.bp3-dark table.bp3-html-table.bp3-html-table-bordered.bp3-html-table-striped tbody tr:not(:first-child) td:first-child {
    box-shadow: none;
}

.bp3-dark table.bp3-html-table.bp3-interactive tbody tr:hover td {
    background-color: hsla(209, 0%, 47%, 0.3);
    background-color: hsla(var(--gray1-hsl), 0.3);
    cursor: pointer;
}

.bp3-dark table.bp3-html-table.bp3-interactive tbody tr:active td {
    background-color: hsla(209, 0%, 47%, 0.4);
    background-color: hsla(var(--gray1-hsl), 0.4);
}

.bp3-key-combo {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: center;
    align-items: center;
}

.bp3-key-combo > * {
    -webkit-flex-grow: 0;
    flex-grow: 0;
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
}

.bp3-key-combo > .bp3-fill {
    -webkit-flex-grow: 1;
    flex-grow: 1;
    -webkit-flex-shrink: 1;
    flex-shrink: 1;
}

.bp3-key-combo::before,
  .bp3-key-combo > * {
    margin-right: 5px;
}

.bp3-key-combo:empty::before,
  .bp3-key-combo > :last-child {
    margin-right: 0;
}

.bp3-hotkey-dialog {
    padding-bottom: 0;
    top: 40px;
}

.bp3-hotkey-dialog .bp3-dialog-body {
    margin: 0;
    padding: 0;
}

.bp3-hotkey-dialog .bp3-hotkey-label {
    -webkit-flex-grow: 1;
    flex-grow: 1;
}

.bp3-hotkey-column {
    margin: auto;
    max-height: 80vh;
    overflow-y: auto;
    padding: 30px;
}

.bp3-hotkey-column .bp3-heading {
    margin-bottom: 20px;
}

.bp3-hotkey-column .bp3-heading:not(:first-child) {
    margin-top: 40px;
}

.bp3-hotkey {
    -webkit-align-items: center;
    align-items: center;
    display: -webkit-flex;
    display: flex;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    margin-left: 0;
    margin-right: 0;
}

.bp3-hotkey:not(:last-child) {
    margin-bottom: 10px;
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
.bp3-icon {
    display: inline-block;
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto;
    vertical-align: text-bottom;
}

.bp3-icon:not(:empty)::before {
    /* stylelint-disable */
    content: "" !important;
    content: unset !important;
    /* stylelint-enable */
}

.bp3-icon > svg {
    display: block;
}

.bp3-icon > svg:not([fill]) {
    fill: currentColor;
}

.bp3-icon.bp3-intent-primary, .bp3-icon-standard.bp3-intent-primary, .bp3-icon-large.bp3-intent-primary {
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-dark .bp3-icon.bp3-intent-primary, .bp3-dark .bp3-icon-standard.bp3-intent-primary, .bp3-dark .bp3-icon-large.bp3-intent-primary {
    color: hsl(209,   100%, 59%);
    color: var(--pt-dark-intent-primary-text-color);
}

.bp3-icon.bp3-intent-success, .bp3-icon-standard.bp3-intent-success, .bp3-icon-large.bp3-intent-success {
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-dark .bp3-icon.bp3-intent-success, .bp3-dark .bp3-icon-standard.bp3-intent-success, .bp3-dark .bp3-icon-large.bp3-intent-success {
    color: hsl(113, 57%,  57%);
    color: var(--pt-dark-intent-success-text-color);
}

.bp3-icon.bp3-intent-warning, .bp3-icon-standard.bp3-intent-warning, .bp3-icon-large.bp3-intent-warning {
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-dark .bp3-icon.bp3-intent-warning, .bp3-dark .bp3-icon-standard.bp3-intent-warning, .bp3-dark .bp3-icon-large.bp3-intent-warning {
    color: hsl(30, 100%, 70%);
    color: var(--pt-dark-intent-warning-text-color);
}

.bp3-icon.bp3-intent-danger, .bp3-icon-standard.bp3-intent-danger, .bp3-icon-large.bp3-intent-danger {
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-dark .bp3-icon.bp3-intent-danger, .bp3-dark .bp3-icon-standard.bp3-intent-danger, .bp3-dark .bp3-icon-large.bp3-intent-danger {
    color: hsl(0, 100%, 73%);
    color: var(--pt-dark-intent-danger-text-color);
}

span.bp3-icon-standard {
    font-family: "Icons16", sans-serif;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 1;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    display: inline-block;
}

span.bp3-icon-large {
    font-family: "Icons20", sans-serif;
    font-size: 20px;
    font-style: normal;
    font-weight: 400;
    line-height: 1;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    display: inline-block;
}

span.bp3-icon:empty {
    font-family: "Icons20";
    font-size: inherit;
    font-style: normal;
    font-weight: 400;
    line-height: 1;
}

span.bp3-icon:empty::before {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
.bp3-submenu > .bp3-popover-wrapper {
    display: block;
}

.bp3-submenu .bp3-popover-target {
    display: block;
}

.bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-menu-item {
    /* stylelint-disable-next-line scss/at-extend-no-missing-placeholder */
}

.bp3-submenu.bp3-popover {
    box-shadow: none;
    padding: 0 5px;
}

.bp3-submenu.bp3-popover > .bp3-popover-content {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 2px 4px hsla(209, 0%, 9%, 0.2),
  0 8px 24px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-popover-box-shadow);
}

.bp3-dark .bp3-submenu.bp3-popover, .bp3-submenu.bp3-popover.bp3-dark {
    box-shadow: none;
}

.bp3-dark .bp3-submenu.bp3-popover > .bp3-popover-content, .bp3-submenu.bp3-popover.bp3-dark > .bp3-popover-content {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 2px 4px hsla(209, 0%, 9%, 0.4),
  0 8px 24px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-popover-box-shadow);
}

/*
Menus

Markup:
<ul class="bp3-menu {{.modifier}} bp3-elevation-1">
  <li>
    <a class="bp3-menu-item bp3-icon-people" tabindex="0">Share...</a>
  </li>
  <li>
    <a class="bp3-menu-item bp3-icon-circle-arrow-right" tabindex="0">Move...</a>
  </li>
  <li>
    <a class="bp3-menu-item bp3-icon-edit" tabindex="0">Rename</a>
  </li>
  <li class="bp3-menu-divider"></li>
  <li>
    <a class="bp3-menu-item bp3-icon-trash bp3-intent-danger" tabindex="0">Delete</a>
  </li>
</ul>

.bp3-large - Large size (only supported on <code>.bp3-menu</code>)

Styleguide menu
*/
.bp3-menu {
    background: hsl(209, 0%, 100%);
    background: var(--menu-background-color);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
    list-style: none;
    margin: 0;
    min-width: 180px;
    padding: 5px;
    text-align: left;
}

.bp3-menu-divider {
    border-top: 1px solid hsla(209, 0%, 9%, 0.15);
    border-top: 1px solid var(--pt-divider-black);
    display: block;
    margin: 5px;
}

.bp3-dark .bp3-menu-divider {
    border-top-color: hsla(209, 0%, 100%, 0.15);
    border-top-color: var(--pt-dark-divider-white);
}

.bp3-menu-item {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: flex-start;
    align-items: flex-start;
    border-radius: calc(6px - 1);
    border-radius: calc(var(--pt-border-radius) - 1);
    color: inherit;
    line-height: 20px;
    padding: 5px 7px;
    text-decoration: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
  /* stylelint-disable declaration-no-important */
  /* stylelint-enable declaration-no-important */
}

.bp3-menu-item > * {
    -webkit-flex-grow: 0;
    flex-grow: 0;
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
}

.bp3-menu-item > .bp3-fill {
    -webkit-flex-grow: 1;
    flex-grow: 1;
    -webkit-flex-shrink: 1;
    flex-shrink: 1;
}

.bp3-menu-item::before,
  .bp3-menu-item > * {
    margin-right: 7px;
}

.bp3-menu-item:empty::before,
  .bp3-menu-item > :last-child {
    margin-right: 0;
}

.bp3-menu-item > .bp3-fill {
    word-break: break-word;
}

.bp3-menu-item:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-menu-item {
    background-color: hsla(209, 0%, 73%, 0.3);
    background-color: var(--menu-item-color-hover);
    cursor: pointer;
    text-decoration: none;
}

.bp3-menu-item.bp3-disabled {
    background-color: inherit;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
    cursor: not-allowed;
}

.bp3-dark .bp3-menu-item {
    color: inherit;
}

.bp3-dark .bp3-menu-item:hover, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-menu-item, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-menu-item {
    background-color: hsla(209, 0%, 80%, 0.3);
    background-color: var(--dark-menu-item-color-hover);
    color: inherit;
}

.bp3-dark .bp3-menu-item.bp3-disabled {
    background-color: inherit;
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
}

.bp3-menu-item.bp3-intent-primary {
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-menu-item.bp3-intent-primary .bp3-icon {
    color: inherit;
}

.bp3-menu-item.bp3-intent-primary::before, .bp3-menu-item.bp3-intent-primary::after,
    .bp3-menu-item.bp3-intent-primary .bp3-menu-item-label {
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-menu-item.bp3-intent-primary:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item, .bp3-menu-item.bp3-intent-primary.bp3-active {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--pt-intent-primary);
}

.bp3-menu-item.bp3-intent-primary:active {
    background-color: hsl(209,   100%, 54%);
    background-color: var(--pt-intent-primary-hover);
}

.bp3-menu-item.bp3-intent-primary:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item, .bp3-menu-item.bp3-intent-primary:hover::before, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item::before, .bp3-menu-item.bp3-intent-primary:hover::after, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item::after,
    .bp3-menu-item.bp3-intent-primary:hover .bp3-menu-item-label,
    .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item .bp3-menu-item-label, .bp3-menu-item.bp3-intent-primary:active, .bp3-menu-item.bp3-intent-primary:active::before, .bp3-menu-item.bp3-intent-primary:active::after,
    .bp3-menu-item.bp3-intent-primary:active .bp3-menu-item-label, .bp3-menu-item.bp3-intent-primary.bp3-active, .bp3-menu-item.bp3-intent-primary.bp3-active::before, .bp3-menu-item.bp3-intent-primary.bp3-active::after,
    .bp3-menu-item.bp3-intent-primary.bp3-active .bp3-menu-item-label {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-menu-item.bp3-intent-success {
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-menu-item.bp3-intent-success .bp3-icon {
    color: inherit;
}

.bp3-menu-item.bp3-intent-success::before, .bp3-menu-item.bp3-intent-success::after,
    .bp3-menu-item.bp3-intent-success .bp3-menu-item-label {
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-menu-item.bp3-intent-success:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item, .bp3-menu-item.bp3-intent-success.bp3-active {
    background-color: hsl(113, 100%, 34%);
    background-color: var(--pt-intent-success);
}

.bp3-menu-item.bp3-intent-success:active {
    background-color: hsl(113, 53%,  49%);
    background-color: var(--pt-intent-success-hover);
}

.bp3-menu-item.bp3-intent-success:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item, .bp3-menu-item.bp3-intent-success:hover::before, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item::before, .bp3-menu-item.bp3-intent-success:hover::after, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item::after,
    .bp3-menu-item.bp3-intent-success:hover .bp3-menu-item-label,
    .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item .bp3-menu-item-label, .bp3-menu-item.bp3-intent-success:active, .bp3-menu-item.bp3-intent-success:active::before, .bp3-menu-item.bp3-intent-success:active::after,
    .bp3-menu-item.bp3-intent-success:active .bp3-menu-item-label, .bp3-menu-item.bp3-intent-success.bp3-active, .bp3-menu-item.bp3-intent-success.bp3-active::before, .bp3-menu-item.bp3-intent-success.bp3-active::after,
    .bp3-menu-item.bp3-intent-success.bp3-active .bp3-menu-item-label {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-menu-item.bp3-intent-warning {
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-menu-item.bp3-intent-warning .bp3-icon {
    color: inherit;
}

.bp3-menu-item.bp3-intent-warning::before, .bp3-menu-item.bp3-intent-warning::after,
    .bp3-menu-item.bp3-intent-warning .bp3-menu-item-label {
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-menu-item.bp3-intent-warning:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item, .bp3-menu-item.bp3-intent-warning.bp3-active {
    background-color: hsl(30, 70%, 51%);
    background-color: var(--pt-intent-warning);
}

.bp3-menu-item.bp3-intent-warning:active {
    background-color: hsl(30, 87%, 62%);
    background-color: var(--pt-intent-warning-hover);
}

.bp3-menu-item.bp3-intent-warning:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item, .bp3-menu-item.bp3-intent-warning:hover::before, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item::before, .bp3-menu-item.bp3-intent-warning:hover::after, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item::after,
    .bp3-menu-item.bp3-intent-warning:hover .bp3-menu-item-label,
    .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item .bp3-menu-item-label, .bp3-menu-item.bp3-intent-warning:active, .bp3-menu-item.bp3-intent-warning:active::before, .bp3-menu-item.bp3-intent-warning:active::after,
    .bp3-menu-item.bp3-intent-warning:active .bp3-menu-item-label, .bp3-menu-item.bp3-intent-warning.bp3-active, .bp3-menu-item.bp3-intent-warning.bp3-active::before, .bp3-menu-item.bp3-intent-warning.bp3-active::after,
    .bp3-menu-item.bp3-intent-warning.bp3-active .bp3-menu-item-label {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-menu-item.bp3-intent-danger {
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-menu-item.bp3-intent-danger .bp3-icon {
    color: inherit;
}

.bp3-menu-item.bp3-intent-danger::before, .bp3-menu-item.bp3-intent-danger::after,
    .bp3-menu-item.bp3-intent-danger .bp3-menu-item-label {
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-menu-item.bp3-intent-danger:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item, .bp3-menu-item.bp3-intent-danger.bp3-active {
    background-color: hsl(0, 69%, 54%);
    background-color: var(--pt-intent-danger);
}

.bp3-menu-item.bp3-intent-danger:active {
    background-color: hsl(0, 89%, 65%);
    background-color: var(--pt-intent-danger-hover);
}

.bp3-menu-item.bp3-intent-danger:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item, .bp3-menu-item.bp3-intent-danger:hover::before, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item::before, .bp3-menu-item.bp3-intent-danger:hover::after, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item::after,
    .bp3-menu-item.bp3-intent-danger:hover .bp3-menu-item-label,
    .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item .bp3-menu-item-label, .bp3-menu-item.bp3-intent-danger:active, .bp3-menu-item.bp3-intent-danger:active::before, .bp3-menu-item.bp3-intent-danger:active::after,
    .bp3-menu-item.bp3-intent-danger:active .bp3-menu-item-label, .bp3-menu-item.bp3-intent-danger.bp3-active, .bp3-menu-item.bp3-intent-danger.bp3-active::before, .bp3-menu-item.bp3-intent-danger.bp3-active::after,
    .bp3-menu-item.bp3-intent-danger.bp3-active .bp3-menu-item-label {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-menu-item::before {
    font-family: "Icons16", sans-serif;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 1;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    margin-right: 7px;
}

.bp3-menu-item::before,
  .bp3-menu-item > .bp3-icon {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
    margin-top: 2px;
}

.bp3-menu-item .bp3-menu-item-label {
    color: hsl(209, 0%, 47%);
    color: var(--pt-text-color-muted);
}

.bp3-menu-item:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-menu-item {
    color: inherit;
}

.bp3-menu-item.bp3-active, .bp3-menu-item:active {
    background-color: hsla(209, 0%, 54%, 0.3);
    background-color: var(--menu-item-color-active);
}

.bp3-menu-item.bp3-disabled {
    background-color: inherit !important;
    color: hsla(209, 0%, 9%, 0.3) !important;
    color: var(--pt-text-color-disabled) !important;
    cursor: not-allowed !important;
    outline: none !important;
}

.bp3-menu-item.bp3-disabled::before,
    .bp3-menu-item.bp3-disabled > .bp3-icon,
    .bp3-menu-item.bp3-disabled .bp3-menu-item-label {
    color: hsla(209, 0%, 9%, 0.3) !important;
    color: var(--pt-icon-color-disabled) !important;
}

.bp3-large .bp3-menu-item {
    font-size: 16px;
    line-height: 22px;
    padding: 9px 7px;
}

.bp3-large .bp3-menu-item .bp3-icon {
    margin-top: 3px;
}

.bp3-large .bp3-menu-item::before {
    font-family: "Icons20", sans-serif;
    font-size: 20px;
    font-style: normal;
    font-weight: 400;
    line-height: 1;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    margin-right: 10px;
    margin-top: 1px;
}

button.bp3-menu-item {
    background: none;
    border: none;
    text-align: left;
    width: 100%;
}

/*
Menu headers

Markup:
<ul class="bp3-menu bp3-elevation-1">
  <li class="bp3-menu-header"><h6 class="bp3-heading">Layouts</h6></li>
  <li><button type="button" class="bp3-menu-item bp3-icon-layout-auto">Auto</button></li>
  <li><button type="button" class="bp3-menu-item bp3-icon-layout-circle">Circle</button></li>
  <li><button type="button" class="bp3-menu-item bp3-icon-layout-grid">Grid</button></li>
  <li class="bp3-menu-header"><h6 class="bp3-heading">Views</h6></li>
  <li><button type="button" class="bp3-menu-item bp3-icon-history">History</button></li>
  <li><button type="button" class="bp3-menu-item bp3-icon-star">Favorites</button></li>
  <li><button type="button" class="bp3-menu-item bp3-icon-envelope">Messages</button></li>
</ul>

Styleguide menu-header
*/
.bp3-menu-header {
    border-top: 1px solid hsla(209, 0%, 9%, 0.15);
    border-top: 1px solid var(--pt-divider-black);
    display: block;
    margin: 5px;
    cursor: default;
    padding-left: 2px;
}

.bp3-dark .bp3-menu-header {
    border-top-color: hsla(209, 0%, 100%, 0.15);
    border-top-color: var(--pt-dark-divider-white);
}

.bp3-menu-header:first-of-type {
    border-top: none;
}

.bp3-menu-header > h6 {
    color: hsl(209, 0%, 15%);
    color: var(--pt-heading-color);
    font-weight: 600;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    line-height: 17px;
    margin: 0;
    padding: 10px 7px 0 1px;
}

.bp3-dark .bp3-menu-header > h6 {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-heading-color);
}

.bp3-menu-header:first-of-type > h6 {
    padding-top: 0;
}

.bp3-large .bp3-menu-header > h6 {
    font-size: 18px;
    padding-bottom: 5px;
    padding-top: 15px;
}

.bp3-large .bp3-menu-header:first-of-type > h6 {
    padding-top: 0;
}

.bp3-dark .bp3-menu {
    background: hsl(209, 0%, 31%);
    background: var(--dark-menu-background-color);
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dark .bp3-menu-item {
  /* stylelint-disable declaration-no-important */
  /* stylelint-enable declaration-no-important */
}

.bp3-dark .bp3-menu-item.bp3-intent-primary {
    color: hsl(209,   100%, 59%);
    color: var(--pt-dark-intent-primary-text-color);
}

.bp3-dark .bp3-menu-item.bp3-intent-primary .bp3-icon {
    color: inherit;
}

.bp3-dark .bp3-menu-item.bp3-intent-primary::before, .bp3-dark .bp3-menu-item.bp3-intent-primary::after,
    .bp3-dark .bp3-menu-item.bp3-intent-primary .bp3-menu-item-label {
    color: hsl(209,   100%, 59%);
    color: var(--pt-dark-intent-primary-text-color);
}

.bp3-dark .bp3-menu-item.bp3-intent-primary:hover, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item, .bp3-dark .bp3-menu-item.bp3-intent-primary.bp3-active {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--pt-intent-primary);
}

.bp3-dark .bp3-menu-item.bp3-intent-primary:active {
    background-color: hsl(209,   100%, 54%);
    background-color: var(--pt-intent-primary-hover);
}

.bp3-dark .bp3-menu-item.bp3-intent-primary:hover, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item, .bp3-dark .bp3-menu-item.bp3-intent-primary:hover::before, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item::before, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item::before, .bp3-dark .bp3-menu-item.bp3-intent-primary:hover::after, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item::after, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item::after,
    .bp3-dark .bp3-menu-item.bp3-intent-primary:hover .bp3-menu-item-label,
    .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item .bp3-menu-item-label,
    .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-primary.bp3-menu-item .bp3-menu-item-label, .bp3-dark .bp3-menu-item.bp3-intent-primary:active, .bp3-dark .bp3-menu-item.bp3-intent-primary:active::before, .bp3-dark .bp3-menu-item.bp3-intent-primary:active::after,
    .bp3-dark .bp3-menu-item.bp3-intent-primary:active .bp3-menu-item-label, .bp3-dark .bp3-menu-item.bp3-intent-primary.bp3-active, .bp3-dark .bp3-menu-item.bp3-intent-primary.bp3-active::before, .bp3-dark .bp3-menu-item.bp3-intent-primary.bp3-active::after,
    .bp3-dark .bp3-menu-item.bp3-intent-primary.bp3-active .bp3-menu-item-label {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-dark .bp3-menu-item.bp3-intent-success {
    color: hsl(113, 57%,  57%);
    color: var(--pt-dark-intent-success-text-color);
}

.bp3-dark .bp3-menu-item.bp3-intent-success .bp3-icon {
    color: inherit;
}

.bp3-dark .bp3-menu-item.bp3-intent-success::before, .bp3-dark .bp3-menu-item.bp3-intent-success::after,
    .bp3-dark .bp3-menu-item.bp3-intent-success .bp3-menu-item-label {
    color: hsl(113, 57%,  57%);
    color: var(--pt-dark-intent-success-text-color);
}

.bp3-dark .bp3-menu-item.bp3-intent-success:hover, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item, .bp3-dark .bp3-menu-item.bp3-intent-success.bp3-active {
    background-color: hsl(113, 100%, 34%);
    background-color: var(--pt-intent-success);
}

.bp3-dark .bp3-menu-item.bp3-intent-success:active {
    background-color: hsl(113, 53%,  49%);
    background-color: var(--pt-intent-success-hover);
}

.bp3-dark .bp3-menu-item.bp3-intent-success:hover, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item, .bp3-dark .bp3-menu-item.bp3-intent-success:hover::before, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item::before, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item::before, .bp3-dark .bp3-menu-item.bp3-intent-success:hover::after, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item::after, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item::after,
    .bp3-dark .bp3-menu-item.bp3-intent-success:hover .bp3-menu-item-label,
    .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item .bp3-menu-item-label,
    .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-success.bp3-menu-item .bp3-menu-item-label, .bp3-dark .bp3-menu-item.bp3-intent-success:active, .bp3-dark .bp3-menu-item.bp3-intent-success:active::before, .bp3-dark .bp3-menu-item.bp3-intent-success:active::after,
    .bp3-dark .bp3-menu-item.bp3-intent-success:active .bp3-menu-item-label, .bp3-dark .bp3-menu-item.bp3-intent-success.bp3-active, .bp3-dark .bp3-menu-item.bp3-intent-success.bp3-active::before, .bp3-dark .bp3-menu-item.bp3-intent-success.bp3-active::after,
    .bp3-dark .bp3-menu-item.bp3-intent-success.bp3-active .bp3-menu-item-label {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-dark .bp3-menu-item.bp3-intent-warning {
    color: hsl(30, 100%, 70%);
    color: var(--pt-dark-intent-warning-text-color);
}

.bp3-dark .bp3-menu-item.bp3-intent-warning .bp3-icon {
    color: inherit;
}

.bp3-dark .bp3-menu-item.bp3-intent-warning::before, .bp3-dark .bp3-menu-item.bp3-intent-warning::after,
    .bp3-dark .bp3-menu-item.bp3-intent-warning .bp3-menu-item-label {
    color: hsl(30, 100%, 70%);
    color: var(--pt-dark-intent-warning-text-color);
}

.bp3-dark .bp3-menu-item.bp3-intent-warning:hover, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item, .bp3-dark .bp3-menu-item.bp3-intent-warning.bp3-active {
    background-color: hsl(30, 70%, 51%);
    background-color: var(--pt-intent-warning);
}

.bp3-dark .bp3-menu-item.bp3-intent-warning:active {
    background-color: hsl(30, 87%, 62%);
    background-color: var(--pt-intent-warning-hover);
}

.bp3-dark .bp3-menu-item.bp3-intent-warning:hover, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item, .bp3-dark .bp3-menu-item.bp3-intent-warning:hover::before, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item::before, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item::before, .bp3-dark .bp3-menu-item.bp3-intent-warning:hover::after, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item::after, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item::after,
    .bp3-dark .bp3-menu-item.bp3-intent-warning:hover .bp3-menu-item-label,
    .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item .bp3-menu-item-label,
    .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-warning.bp3-menu-item .bp3-menu-item-label, .bp3-dark .bp3-menu-item.bp3-intent-warning:active, .bp3-dark .bp3-menu-item.bp3-intent-warning:active::before, .bp3-dark .bp3-menu-item.bp3-intent-warning:active::after,
    .bp3-dark .bp3-menu-item.bp3-intent-warning:active .bp3-menu-item-label, .bp3-dark .bp3-menu-item.bp3-intent-warning.bp3-active, .bp3-dark .bp3-menu-item.bp3-intent-warning.bp3-active::before, .bp3-dark .bp3-menu-item.bp3-intent-warning.bp3-active::after,
    .bp3-dark .bp3-menu-item.bp3-intent-warning.bp3-active .bp3-menu-item-label {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-dark .bp3-menu-item.bp3-intent-danger {
    color: hsl(0, 100%, 73%);
    color: var(--pt-dark-intent-danger-text-color);
}

.bp3-dark .bp3-menu-item.bp3-intent-danger .bp3-icon {
    color: inherit;
}

.bp3-dark .bp3-menu-item.bp3-intent-danger::before, .bp3-dark .bp3-menu-item.bp3-intent-danger::after,
    .bp3-dark .bp3-menu-item.bp3-intent-danger .bp3-menu-item-label {
    color: hsl(0, 100%, 73%);
    color: var(--pt-dark-intent-danger-text-color);
}

.bp3-dark .bp3-menu-item.bp3-intent-danger:hover, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item, .bp3-dark .bp3-menu-item.bp3-intent-danger.bp3-active {
    background-color: hsl(0, 69%, 54%);
    background-color: var(--pt-intent-danger);
}

.bp3-dark .bp3-menu-item.bp3-intent-danger:active {
    background-color: hsl(0, 89%, 65%);
    background-color: var(--pt-intent-danger-hover);
}

.bp3-dark .bp3-menu-item.bp3-intent-danger:hover, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item, .bp3-dark .bp3-menu-item.bp3-intent-danger:hover::before, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item::before, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item::before, .bp3-dark .bp3-menu-item.bp3-intent-danger:hover::after, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item::after, .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item::after,
    .bp3-dark .bp3-menu-item.bp3-intent-danger:hover .bp3-menu-item-label,
    .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item .bp3-menu-item-label,
    .bp3-submenu .bp3-dark .bp3-popover-target.bp3-popover-open > .bp3-intent-danger.bp3-menu-item .bp3-menu-item-label, .bp3-dark .bp3-menu-item.bp3-intent-danger:active, .bp3-dark .bp3-menu-item.bp3-intent-danger:active::before, .bp3-dark .bp3-menu-item.bp3-intent-danger:active::after,
    .bp3-dark .bp3-menu-item.bp3-intent-danger:active .bp3-menu-item-label, .bp3-dark .bp3-menu-item.bp3-intent-danger.bp3-active, .bp3-dark .bp3-menu-item.bp3-intent-danger.bp3-active::before, .bp3-dark .bp3-menu-item.bp3-intent-danger.bp3-active::after,
    .bp3-dark .bp3-menu-item.bp3-intent-danger.bp3-active .bp3-menu-item-label {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-dark .bp3-menu-item::before,
  .bp3-dark .bp3-menu-item > .bp3-icon {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-icon-color);
}

.bp3-dark .bp3-menu-item .bp3-menu-item-label {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-text-color-muted);
}

.bp3-dark .bp3-menu-item.bp3-active, .bp3-dark .bp3-menu-item:active {
    background-color: hsla(209, 0%, 63%, 0.3);
    background-color: var(--dark-menu-item-color-active);
}

.bp3-dark .bp3-menu-item.bp3-disabled {
    color: hsla(209, 0%, 100%, 0.3) !important;
    color: var(--pt-dark-text-color-disabled) !important;
}

.bp3-dark .bp3-menu-item.bp3-disabled::before,
    .bp3-dark .bp3-menu-item.bp3-disabled > .bp3-icon,
    .bp3-dark .bp3-menu-item.bp3-disabled .bp3-menu-item-label {
    color: hsla(209, 0%, 100%, 0.3) !important;
    color: var(--pt-dark-icon-color-disabled) !important;
}

.bp3-dark .bp3-menu-divider,
.bp3-dark .bp3-menu-header {
    border-color: hsla(209, 0%, 100%, 0.15);
    border-color: var(--pt-dark-divider-white);
}

.bp3-dark .bp3-menu-header > h6 {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-heading-color);
}

.bp3-label .bp3-menu {
    margin-top: 5px;
}

/*
Navbars

Markup:
<nav class="bp3-navbar {{.modifier}}">
  <div class="bp3-navbar-group bp3-align-left">
    <div class="bp3-navbar-heading">Blueprint</div>
    <input class="bp3-input" placeholder="Search files..." type="text" />
  </div>
  <div class="bp3-navbar-group bp3-align-right">
    <button class="bp3-button bp3-minimal bp3-icon-home">Home</button>
    <button class="bp3-button bp3-minimal bp3-icon-document">Files</button>
    <span class="bp3-navbar-divider"></span>
    <button class="bp3-button bp3-minimal bp3-icon-user"></button>
    <button class="bp3-button bp3-minimal bp3-icon-notifications"></button>
    <button class="bp3-button bp3-minimal bp3-icon-cog"></button>
  </div>
</nav>

.bp3-dark - Dark theme

Styleguide navbar
*/
.bp3-navbar {
    background-color: hsl(209, 0%, 100%);
    background-color: var(--navbar-background-color);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 0 0 hsla(209, 0%, 9%, 0),
  0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-elevation-shadow-1);
    height: 50px;
    padding: 0 15px;
    position: relative;
    width: 100%;
    z-index: 10;
}

.bp3-navbar.bp3-dark,
  .bp3-dark .bp3-navbar {
    background-color: hsl(209, 0%, 38%);
    background-color: var(--dark-navbar-background-color);
}

.bp3-navbar.bp3-dark {
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 0 0 hsla(209, 0%, 9%, 0),
  0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: inset var(--pt-dark-elevation-shadow-1);
}

.bp3-dark .bp3-navbar {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 0 0 hsla(209, 0%, 9%, 0),
  0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-elevation-shadow-1);
}

.bp3-navbar.bp3-fixed-top {
    left: 0;
    position: fixed;
    right: 0;
    top: 0;
}

.bp3-navbar-heading {
    font-size: 16px;
    margin-right: 15px;
}

.bp3-navbar-group {
    -webkit-align-items: center;
    align-items: center;
    display: -webkit-flex;
    display: flex;
    height: 50px;
}

.bp3-navbar-group.bp3-align-left {
    float: left;
}

.bp3-navbar-group.bp3-align-right {
    float: right;
}

.bp3-navbar-divider {
    border-left: 1px solid hsla(209, 0%, 9%, 0.15);
    border-left: 1px solid var(--pt-divider-black);
    height: 20px;
    margin: 0 10px;
}

.bp3-dark .bp3-navbar-divider {
    border-left-color: hsla(209, 0%, 100%, 0.15);
    border-left-color: var(--pt-dark-divider-white);
}

/*
Fixed width

Markup:
<nav class="bp3-navbar bp3-dark">
  <div style="margin: 0 auto; width: 480px;"> <!-- ADD ME -->
    <div class="bp3-navbar-group bp3-align-left">
      <div class="bp3-navbar-heading">Blueprint</div>
    </div>
    <div class="bp3-navbar-group bp3-align-right">
      <button class="bp3-button bp3-minimal bp3-icon-home">Home</button>
      <button class="bp3-button bp3-minimal bp3-icon-document">Files</button>
      <span class="bp3-navbar-divider"></span>
      <button class="bp3-button bp3-minimal bp3-icon-user"></button>
      <button class="bp3-button bp3-minimal bp3-icon-notifications"></button>
      <button class="bp3-button bp3-minimal bp3-icon-cog"></button>
    </div>
  </div>
</nav>

Styleguide navbar-container
*/
/*
Non-ideal state

Markup:
<div class="bp3-non-ideal-state">
  <div class="bp3-non-ideal-state-visual">
    <span class="bp3-icon bp3-icon-folder-open"></span>
  </div>
  <h4 class="bp3-heading">This folder is empty</h4>
  <div>Create a new file to populate the folder.</div>
  <button class="bp3-button bp3-intent-primary">Create</button>
</div>

Styleguide non-ideal-state
*/
.bp3-non-ideal-state {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
    -webkit-align-items: center;
    align-items: center;
    height: 100%;
    -webkit-justify-content: center;
    justify-content: center;
    text-align: center;
    width: 100%;
}

.bp3-non-ideal-state > * {
    -webkit-flex-grow: 0;
    flex-grow: 0;
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
}

.bp3-non-ideal-state > .bp3-fill {
    -webkit-flex-grow: 1;
    flex-grow: 1;
    -webkit-flex-shrink: 1;
    flex-shrink: 1;
}

.bp3-non-ideal-state::before,
  .bp3-non-ideal-state > * {
    margin-bottom: 20px;
}

.bp3-non-ideal-state:empty::before,
  .bp3-non-ideal-state > :last-child {
    margin-bottom: 0;
}

.bp3-non-ideal-state > * {
    max-width: 400px;
}

.bp3-non-ideal-state-visual {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-icon-color-disabled);
    font-size: 60px;
}

.bp3-dark .bp3-non-ideal-state-visual {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-icon-color-disabled);
}

.bp3-overflow-list {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-wrap: nowrap;
    flex-wrap: nowrap;
    min-width: 0;
}

.bp3-overflow-list-spacer {
    -webkit-flex-shrink: 1;
    flex-shrink: 1;
    width: 1px;
}

body.bp3-overlay-open {
    overflow: hidden;
}

.bp3-overlay {
    bottom: 0;
    left: 0;
    position: static;
    right: 0;
    top: 0;
    z-index: 20;
}

.bp3-overlay:not(.bp3-overlay-open) {
    pointer-events: none;
}

.bp3-overlay.bp3-overlay-container {
    overflow: hidden;
    position: fixed;
}

.bp3-overlay.bp3-overlay-container.bp3-overlay-inline {
    position: absolute;
}

.bp3-overlay.bp3-overlay-scroll-container {
    overflow: auto;
    position: fixed;
}

.bp3-overlay.bp3-overlay-scroll-container.bp3-overlay-inline {
    position: absolute;
}

.bp3-overlay.bp3-overlay-inline {
    display: inline;
    overflow: visible;
}

.bp3-overlay-content {
    position: fixed;
    z-index: 20;
}

.bp3-overlay-inline .bp3-overlay-content,
  .bp3-overlay-scroll-container .bp3-overlay-content {
    position: absolute;
}

.bp3-overlay-backdrop {
    bottom: 0;
    left: 0;
    position: fixed;
    right: 0;
    top: 0;
    opacity: 1;
    background-color: hsla(209, 0%, 9%, 0.7);
    background-color: hsla(var(--black-hsl), 0.7);
    overflow: auto;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
    z-index: 20;
}

.bp3-overlay-backdrop.bp3-overlay-enter, .bp3-overlay-backdrop.bp3-overlay-appear {
    opacity: 0;
}

.bp3-overlay-backdrop.bp3-overlay-enter-active, .bp3-overlay-backdrop.bp3-overlay-appear-active {
    opacity: 1;
    transition-delay: 0;
    transition-duration: 200ms;
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-overlay-backdrop.bp3-overlay-exit {
    opacity: 1;
}

.bp3-overlay-backdrop.bp3-overlay-exit-active {
    opacity: 0;
    transition-delay: 0;
    transition-duration: 200ms;
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-overlay-backdrop:focus {
    outline: none;
}

.bp3-overlay-inline .bp3-overlay-backdrop {
    position: absolute;
}

/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-panel-stack {
    overflow: hidden;
    position: relative;
}

.bp3-panel-stack-header {
    -webkit-align-items: center;
    align-items: center;
    box-shadow: 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: 0 1px var(--pt-divider-black);
    display: -webkit-flex;
    display: flex;
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
    height: 30px;
    z-index: 1;
}

.bp3-dark .bp3-panel-stack-header {
    box-shadow: 0 1px hsla(209, 0%, 100%, 0.15);
    box-shadow: 0 1px var(--pt-dark-divider-white);
}

.bp3-panel-stack-header > span {
    -webkit-align-items: stretch;
    align-items: stretch;
    display: -webkit-flex;
    display: flex;
    -webkit-flex: 1 1;
    flex: 1 1;
}

.bp3-panel-stack-header .bp3-heading {
    margin: 0 5px;
}

.bp3-button.bp3-panel-stack-header-back {
    margin-left: 5px;
    padding-left: 0;
    white-space: nowrap;
}

.bp3-button.bp3-panel-stack-header-back .bp3-icon {
    margin: 0 2px;
}

.bp3-panel-stack-view {
    bottom: 0;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    background-color: hsl(209, 0%, 100%);
    background-color: var(--white);
    border-right: 1px solid hsla(209, 0%, 9%, 0.15);
    border-right: 1px solid var(--pt-divider-black);
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
    margin-right: -1px;
    overflow-y: auto;
    z-index: 1;
}

.bp3-dark .bp3-panel-stack-view {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-gray4);
}

.bp3-panel-stack-view:nth-last-child(n + 4) {
    display: none;
}

.bp3-panel-stack-push .bp3-panel-stack-enter, .bp3-panel-stack-push .bp3-panel-stack-appear {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
    opacity: 0;
}

.bp3-panel-stack-push .bp3-panel-stack-enter-active, .bp3-panel-stack-push .bp3-panel-stack-appear-active {
    -webkit-transform: translate(0%);
    transform: translate(0%);
    opacity: 1;
    transition-delay: 0;
    transition-duration: 400ms;
    transition-property: opacity, -webkit-transform;
    transition-property: transform, opacity;
    transition-property: transform, opacity, -webkit-transform;
    transition-timing-function: ease;
}

.bp3-panel-stack-push .bp3-panel-stack-exit {
    -webkit-transform: translate(0%);
    transform: translate(0%);
    opacity: 1;
}

.bp3-panel-stack-push .bp3-panel-stack-exit-active {
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
    opacity: 0;
    transition-delay: 0;
    transition-duration: 400ms;
    transition-property: opacity, -webkit-transform;
    transition-property: transform, opacity;
    transition-property: transform, opacity, -webkit-transform;
    transition-timing-function: ease;
}

.bp3-panel-stack-pop .bp3-panel-stack-enter, .bp3-panel-stack-pop .bp3-panel-stack-appear {
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
    opacity: 0;
}

.bp3-panel-stack-pop .bp3-panel-stack-enter-active, .bp3-panel-stack-pop .bp3-panel-stack-appear-active {
    -webkit-transform: translate(0%);
    transform: translate(0%);
    opacity: 1;
    transition-delay: 0;
    transition-duration: 400ms;
    transition-property: opacity, -webkit-transform;
    transition-property: transform, opacity;
    transition-property: transform, opacity, -webkit-transform;
    transition-timing-function: ease;
}

.bp3-panel-stack-pop .bp3-panel-stack-exit {
    -webkit-transform: translate(0%);
    transform: translate(0%);
    opacity: 1;
}

.bp3-panel-stack-pop .bp3-panel-stack-exit-active {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
    opacity: 0;
    transition-delay: 0;
    transition-duration: 400ms;
    transition-property: opacity, -webkit-transform;
    transition-property: transform, opacity;
    transition-property: transform, opacity, -webkit-transform;
    transition-timing-function: ease;
}

/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-panel-stack2 {
    overflow: hidden;
    position: relative;
}

.bp3-panel-stack2-header {
    -webkit-align-items: center;
    align-items: center;
    box-shadow: 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: 0 1px var(--pt-divider-black);
    display: -webkit-flex;
    display: flex;
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
    height: 30px;
    z-index: 1;
}

.bp3-dark .bp3-panel-stack2-header {
    box-shadow: 0 1px hsla(209, 0%, 100%, 0.15);
    box-shadow: 0 1px var(--pt-dark-divider-white);
}

.bp3-panel-stack2-header > span {
    -webkit-align-items: stretch;
    align-items: stretch;
    display: -webkit-flex;
    display: flex;
    -webkit-flex: 1 1;
    flex: 1 1;
}

.bp3-panel-stack2-header .bp3-heading {
    margin: 0 5px;
}

.bp3-button.bp3-panel-stack2-header-back {
    margin-left: 5px;
    padding-left: 0;
    white-space: nowrap;
}

.bp3-button.bp3-panel-stack2-header-back .bp3-icon {
    margin: 0 2px;
}

.bp3-panel-stack2-view {
    bottom: 0;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    background-color: hsl(209, 0%, 100%);
    background-color: var(--white);
    border-right: 1px solid hsla(209, 0%, 9%, 0.15);
    border-right: 1px solid var(--pt-divider-black);
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
    margin-right: -1px;
    overflow-y: auto;
    z-index: 1;
}

.bp3-dark .bp3-panel-stack2-view {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-gray4);
}

.bp3-panel-stack2-view:nth-last-child(n + 4) {
    display: none;
}

.bp3-panel-stack2-push .bp3-panel-stack2-enter, .bp3-panel-stack2-push .bp3-panel-stack2-appear {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
    opacity: 0;
}

.bp3-panel-stack2-push .bp3-panel-stack2-enter-active, .bp3-panel-stack2-push .bp3-panel-stack2-appear-active {
    -webkit-transform: translate(0%);
    transform: translate(0%);
    opacity: 1;
    transition-delay: 0;
    transition-duration: 400ms;
    transition-property: opacity, -webkit-transform;
    transition-property: transform, opacity;
    transition-property: transform, opacity, -webkit-transform;
    transition-timing-function: ease;
}

.bp3-panel-stack2-push .bp3-panel-stack2-exit {
    -webkit-transform: translate(0%);
    transform: translate(0%);
    opacity: 1;
}

.bp3-panel-stack2-push .bp3-panel-stack2-exit-active {
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
    opacity: 0;
    transition-delay: 0;
    transition-duration: 400ms;
    transition-property: opacity, -webkit-transform;
    transition-property: transform, opacity;
    transition-property: transform, opacity, -webkit-transform;
    transition-timing-function: ease;
}

.bp3-panel-stack2-pop .bp3-panel-stack2-enter, .bp3-panel-stack2-pop .bp3-panel-stack2-appear {
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
    opacity: 0;
}

.bp3-panel-stack2-pop .bp3-panel-stack2-enter-active, .bp3-panel-stack2-pop .bp3-panel-stack2-appear-active {
    -webkit-transform: translate(0%);
    transform: translate(0%);
    opacity: 1;
    transition-delay: 0;
    transition-duration: 400ms;
    transition-property: opacity, -webkit-transform;
    transition-property: transform, opacity;
    transition-property: transform, opacity, -webkit-transform;
    transition-timing-function: ease;
}

.bp3-panel-stack2-pop .bp3-panel-stack2-exit {
    -webkit-transform: translate(0%);
    transform: translate(0%);
    opacity: 1;
}

.bp3-panel-stack2-pop .bp3-panel-stack2-exit-active {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
    opacity: 0;
    transition-delay: 0;
    transition-duration: 400ms;
    transition-property: opacity, -webkit-transform;
    transition-property: transform, opacity;
    transition-property: transform, opacity, -webkit-transform;
    transition-timing-function: ease;
}

/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-popover {
  /* stylelint-disable-next-line max-line-length */
  /* stylelint-disable-next-line max-line-length */
  /* stylelint-disable-next-line max-line-length */
  /* stylelint-disable-next-line max-line-length */
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 2px 4px hsla(209, 0%, 9%, 0.2),
  0 8px 24px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-popover-box-shadow);
    -webkit-transform: scale(1);
    transform: scale(1);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    display: inline-block;
    z-index: 20;
}

.bp3-popover .bp3-popover-arrow {
    height: 30px;
    position: absolute;
    width: 30px;
}

.bp3-popover .bp3-popover-arrow::before {
    height: 20px;
    margin: 5px;
    width: 20px;
}

.bp3-tether-element-attached-bottom.bp3-tether-target-attached-top > .bp3-popover {
    margin-bottom: 17px;
    margin-top: -17px;
}

.bp3-tether-element-attached-bottom.bp3-tether-target-attached-top > .bp3-popover > .bp3-popover-arrow {
    bottom: -11px;
}

.bp3-tether-element-attached-bottom.bp3-tether-target-attached-top > .bp3-popover > .bp3-popover-arrow svg {
    -webkit-transform: rotate(-90deg);
    transform: rotate(-90deg);
}

.bp3-tether-element-attached-left.bp3-tether-target-attached-right > .bp3-popover {
    margin-left: 17px;
}

.bp3-tether-element-attached-left.bp3-tether-target-attached-right > .bp3-popover > .bp3-popover-arrow {
    left: -11px;
}

.bp3-tether-element-attached-left.bp3-tether-target-attached-right > .bp3-popover > .bp3-popover-arrow svg {
    -webkit-transform: rotate(0);
    transform: rotate(0);
}

.bp3-tether-element-attached-top.bp3-tether-target-attached-bottom > .bp3-popover {
    margin-top: 17px;
}

.bp3-tether-element-attached-top.bp3-tether-target-attached-bottom > .bp3-popover > .bp3-popover-arrow {
    top: -11px;
}

.bp3-tether-element-attached-top.bp3-tether-target-attached-bottom > .bp3-popover > .bp3-popover-arrow svg {
    -webkit-transform: rotate(90deg);
    transform: rotate(90deg);
}

.bp3-tether-element-attached-right.bp3-tether-target-attached-left > .bp3-popover {
    margin-left: -17px;
    margin-right: 17px;
}

.bp3-tether-element-attached-right.bp3-tether-target-attached-left > .bp3-popover > .bp3-popover-arrow {
    right: -11px;
}

.bp3-tether-element-attached-right.bp3-tether-target-attached-left > .bp3-popover > .bp3-popover-arrow svg {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg);
}

.bp3-tether-element-attached-middle > .bp3-popover > .bp3-popover-arrow {
    top: 50%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
}

.bp3-tether-element-attached-center > .bp3-popover > .bp3-popover-arrow {
    right: 50%;
    -webkit-transform: translateX(50%);
    transform: translateX(50%);
}

.bp3-tether-element-attached-top.bp3-tether-target-attached-top > .bp3-popover > .bp3-popover-arrow {
    top: -0.3934px;
}

.bp3-tether-element-attached-right.bp3-tether-target-attached-right > .bp3-popover > .bp3-popover-arrow {
    right: -0.3934px;
}

.bp3-tether-element-attached-left.bp3-tether-target-attached-left > .bp3-popover > .bp3-popover-arrow {
    left: -0.3934px;
}

.bp3-tether-element-attached-bottom.bp3-tether-target-attached-bottom > .bp3-popover > .bp3-popover-arrow {
    bottom: -0.3934px;
}

.bp3-tether-element-attached-top.bp3-tether-element-attached-left > .bp3-popover {
    -webkit-transform-origin: top left;
    transform-origin: top left;
}

.bp3-tether-element-attached-top.bp3-tether-element-attached-center > .bp3-popover {
    -webkit-transform-origin: top center;
    transform-origin: top center;
}

.bp3-tether-element-attached-top.bp3-tether-element-attached-right > .bp3-popover {
    -webkit-transform-origin: top right;
    transform-origin: top right;
}

.bp3-tether-element-attached-middle.bp3-tether-element-attached-left > .bp3-popover {
    -webkit-transform-origin: center left;
    transform-origin: center left;
}

.bp3-tether-element-attached-middle.bp3-tether-element-attached-center > .bp3-popover {
    -webkit-transform-origin: center center;
    transform-origin: center center;
}

.bp3-tether-element-attached-middle.bp3-tether-element-attached-right > .bp3-popover {
    -webkit-transform-origin: center right;
    transform-origin: center right;
}

.bp3-tether-element-attached-bottom.bp3-tether-element-attached-left > .bp3-popover {
    -webkit-transform-origin: bottom left;
    transform-origin: bottom left;
}

.bp3-tether-element-attached-bottom.bp3-tether-element-attached-center > .bp3-popover {
    -webkit-transform-origin: bottom center;
    transform-origin: bottom center;
}

.bp3-tether-element-attached-bottom.bp3-tether-element-attached-right > .bp3-popover {
    -webkit-transform-origin: bottom right;
    transform-origin: bottom right;
}

.bp3-popover .bp3-popover-content {
    background: hsl(209, 0%, 100%);
    background: var(--popover-background-color);
    color: inherit;
}

.bp3-popover .bp3-popover-arrow::before {
    box-shadow: 1px 1px 6px hsla(209, 0%, 9%, 0.2);
    box-shadow: 1px 1px 6px hsla(var(--black-hsl), var(--pt-drop-shadow-opacity));
}

.bp3-popover .bp3-popover-arrow-border {
    fill: hsl(209, 0%, 9%);
    fill: var(--black);
    fill-opacity: 0.1;
    fill-opacity: var(--pt-border-shadow-opacity);
}

.bp3-popover .bp3-popover-arrow-fill {
    fill: hsl(209, 0%, 100%);
    fill: var(--popover-background-color);
}

.bp3-popover-enter > .bp3-popover, .bp3-popover-appear > .bp3-popover {
    -webkit-transform: scale(0.3);
    transform: scale(0.3);
}

.bp3-popover-enter-active > .bp3-popover, .bp3-popover-appear-active > .bp3-popover {
    -webkit-transform: scale(1);
    transform: scale(1);
    transition-delay: 0;
    transition-duration: 300ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);
    transition-timing-function: var(--pt-transition-ease-bounce);
}

.bp3-popover-exit > .bp3-popover {
    -webkit-transform: scale(1);
    transform: scale(1);
}

.bp3-popover-exit-active > .bp3-popover {
    -webkit-transform: scale(0.3);
    transform: scale(0.3);
    transition-delay: 0;
    transition-duration: 300ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);
    transition-timing-function: var(--pt-transition-ease-bounce);
}

.bp3-popover .bp3-popover-content {
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    position: relative;
}

.bp3-popover.bp3-popover-content-sizing .bp3-popover-content {
    max-width: 350px;
    padding: 20px;
}

.bp3-popover-target + .bp3-overlay .bp3-popover.bp3-popover-content-sizing {
    width: 350px;
}

.bp3-popover.bp3-minimal {
    margin: 0 !important;
    /* stylelint-disable-line declaration-no-important */
}

.bp3-popover.bp3-minimal .bp3-popover-arrow {
    display: none;
}

.bp3-popover.bp3-minimal.bp3-popover {
    -webkit-transform: scale(1);
    transform: scale(1);
}

.bp3-popover-enter > .bp3-popover.bp3-minimal.bp3-popover, .bp3-popover-appear > .bp3-popover.bp3-minimal.bp3-popover {
    -webkit-transform: scale(1);
    transform: scale(1);
}

.bp3-popover-enter-active > .bp3-popover.bp3-minimal.bp3-popover, .bp3-popover-appear-active > .bp3-popover.bp3-minimal.bp3-popover {
    -webkit-transform: scale(1);
    transform: scale(1);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-popover-exit > .bp3-popover.bp3-minimal.bp3-popover {
    -webkit-transform: scale(1);
    transform: scale(1);
}

.bp3-popover-exit-active > .bp3-popover.bp3-minimal.bp3-popover {
    -webkit-transform: scale(1);
    transform: scale(1);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-popover.bp3-dark,
  .bp3-dark .bp3-popover {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 2px 4px hsla(209, 0%, 9%, 0.4),
  0 8px 24px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-popover-box-shadow);
}

.bp3-popover.bp3-dark .bp3-popover-content,
    .bp3-dark .bp3-popover .bp3-popover-content {
    background: hsl(209, 0%, 31%);
    background: var(--dark-popover-background-color);
    color: inherit;
}

.bp3-popover.bp3-dark .bp3-popover-arrow::before,
    .bp3-dark .bp3-popover .bp3-popover-arrow::before {
    box-shadow: 1px 1px 6px hsla(209, 0%, 9%, 0.4);
    box-shadow: 1px 1px 6px hsla(var(--black-hsl), var(--pt-dark-drop-shadow-opacity));
}

.bp3-popover.bp3-dark .bp3-popover-arrow-border,
    .bp3-dark .bp3-popover .bp3-popover-arrow-border {
    fill: hsl(209, 0%, 9%);
    fill: var(--black);
    fill-opacity: 0.2;
    fill-opacity: var(--pt-dark-border-shadow-opacity);
}

.bp3-popover.bp3-dark .bp3-popover-arrow-fill,
    .bp3-dark .bp3-popover .bp3-popover-arrow-fill {
    fill: hsl(209, 0%, 31%);
    fill: var(--dark-popover-background-color);
}

.bp3-popover-arrow::before {
    border-radius: calc(6px - 1);
    border-radius: calc(var(--pt-border-radius) - 1);
    content: "";
    display: block;
    position: absolute;
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg);
}

.bp3-tether-pinned .bp3-popover-arrow {
    display: none;
}

.bp3-popover-backdrop {
    background: hsla(209, 0%, 100%, 0);
    background: hsla(var(--white-hsl), 0);
}

.bp3-transition-container {
    opacity: 1;
    display: -webkit-flex;
    display: flex;
    z-index: 20;
}

.bp3-transition-container.bp3-popover-enter, .bp3-transition-container.bp3-popover-appear {
    opacity: 0;
}

.bp3-transition-container.bp3-popover-enter-active, .bp3-transition-container.bp3-popover-appear-active {
    opacity: 1;
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-transition-container.bp3-popover-exit {
    opacity: 1;
}

.bp3-transition-container.bp3-popover-exit-active {
    opacity: 0;
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-transition-container:focus {
    outline: none;
}

.bp3-transition-container.bp3-popover-leave .bp3-popover-content {
    pointer-events: none;
}

.bp3-transition-container[data-x-out-of-boundaries] {
    display: none;
}

span.bp3-popover-target {
    display: inline-block;
}

.bp3-popover-wrapper.bp3-fill {
    width: 100%;
}

.bp3-portal {
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
}

/*
Progress bars

Markup:
<div class="bp3-progress-bar {{.modifier}}">
  <div class="bp3-progress-meter" style="width: 25%"></div>
</div>
<div class="bp3-progress-bar bp3-intent-primary {{.modifier}}">
  <div class="bp3-progress-meter" style="width: 50%"></div>
</div>
<div class="bp3-progress-bar bp3-intent-success {{.modifier}}">
  <div class="bp3-progress-meter" style="width: 75%"></div>
</div>
<div class="bp3-progress-bar bp3-intent-danger {{.modifier}}">
  <div class="bp3-progress-meter" style="width: 100%"></div>
</div>

.bp3-no-stripes   - No stripes
.bp3-no-animation - No animation

Styleguide progress-bar
*/
@-webkit-keyframes linear-progress-bar-stripes {
    from {
        background-position: 0 0;
    }

    to {
        background-position: 30px 0;
    }
}

@keyframes linear-progress-bar-stripes {
    from {
        background-position: 0 0;
    }

    to {
        background-position: 30px 0;
    }
}

.bp3-progress-bar {
    background: hsla(209, 0%, 47%, 0.2);
    background: var(--progress-track-color);
    border-radius: 40px;
    display: block;
    height: 8px;
    overflow: hidden;
    position: relative;
    width: 100%;
}

.bp3-progress-bar .bp3-progress-meter {
    background: linear-gradient(
  -45deg,
  hsla(209, 0%, 100%, 0.2) 25%,
  transparent 25%,
  transparent 50%,
  hsla(209, 0%, 100%, 0.2) 50%,
  hsla(209, 0%, 100%, 0.2) 75%,
  transparent 75%
);
    background: var(--progress-bar-gradient);
    background-color: hsla(209, 0%, 47%, 0.8);
    background-color: var(--progress-head-color);
    background-size: 30px 30px;
    border-radius: 40px;
    height: 100%;
    position: absolute;
    transition: width 200ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: width 200ms var(--pt-transition-ease);
    width: 100%;
}

.bp3-progress-bar:not(.bp3-no-animation):not(.bp3-no-stripes) .bp3-progress-meter {
    animation: linear-progress-bar-stripes 300ms linear infinite reverse;
}

.bp3-progress-bar.bp3-no-stripes .bp3-progress-meter {
    background-image: none;
}

.bp3-dark .bp3-progress-bar {
    background: hsla(209, 0%, 9%, 0.5);
    background: var(--dark-progress-track-color);
}

.bp3-dark .bp3-progress-bar .bp3-progress-meter {
    background-color: hsl(209, 0%, 63%);
    background-color: var(--dark-progress-head-color);
}

.bp3-progress-bar.bp3-intent-primary .bp3-progress-meter {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--pt-intent-primary);
}

.bp3-progress-bar.bp3-intent-success .bp3-progress-meter {
    background-color: hsl(113, 100%, 34%);
    background-color: var(--pt-intent-success);
}

.bp3-progress-bar.bp3-intent-warning .bp3-progress-meter {
    background-color: hsl(30, 70%, 51%);
    background-color: var(--pt-intent-warning);
}

.bp3-progress-bar.bp3-intent-danger .bp3-progress-meter {
    background-color: hsl(0, 69%, 54%);
    background-color: var(--pt-intent-danger);
}

/*
Skeletons

Markup:
<div class="bp3-card">
  <h5 class="bp3-heading"><a class="{{.modifier}}" href="#" tabindex="-1">Card heading</a></h5>
  <p class="{{.modifier}}">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eget tortor felis.
    Fusce dapibus metus in dapibus mollis. Quisque eget ex diam.
  </p>
  <button type="button" class="bp3-button bp3-icon-add {{.modifier}}" tabindex="-1">Submit</button>
</div>

.bp3-skeleton - Render this element as a skeleton, an outline of its true self.

Styleguide skeleton
*/
@-webkit-keyframes skeleton-glow {
    from {
        background: hsla(209, 0%, 85%, 0.2);
        background: var(--skeleton-color-start);
        border-color: hsla(209, 0%, 85%, 0.2);
        border-color: var(--skeleton-color-start);
    }

    to {
        background: hsla(209, 0%, 47%, 0.2);
        background: var(--skeleton-color-end);
        border-color: hsla(209, 0%, 47%, 0.2);
        border-color: var(--skeleton-color-end);
    }
}

@keyframes skeleton-glow {
    from {
        background: hsla(209, 0%, 85%, 0.2);
        background: var(--skeleton-color-start);
        border-color: hsla(209, 0%, 85%, 0.2);
        border-color: var(--skeleton-color-start);
    }

    to {
        background: hsla(209, 0%, 47%, 0.2);
        background: var(--skeleton-color-end);
        border-color: hsla(209, 0%, 47%, 0.2);
        border-color: var(--skeleton-color-end);
    }
}

/* stylelint-disable declaration-no-important */
.bp3-skeleton {
    -webkit-animation: 1000ms linear infinite alternate skeleton-glow;
    animation: 1000ms linear infinite alternate skeleton-glow;
    background: hsla(209, 0%, 85%, 0.2);
    background: var(--skeleton-color-start);
    background-clip: padding-box !important;
    border-color: hsla(209, 0%, 85%, 0.2) !important;
    border-color: var(--skeleton-color-start) !important;
    border-radius: 2px;
    box-shadow: none !important;
    color: transparent !important;
    cursor: default;
    pointer-events: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.bp3-skeleton::before, .bp3-skeleton::after,
  .bp3-skeleton * {
    visibility: hidden !important;
}

/* stylelint-enable declaration-no-important */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
.bp3-slider {
    height: 40px;
    min-width: 150px;
    width: 100%;
    cursor: default;
    outline: none;
    position: relative;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.bp3-slider:hover {
    cursor: pointer;
}

.bp3-slider:active {
    cursor: -webkit-grabbing;
    cursor: grabbing;
}

.bp3-slider.bp3-disabled {
    cursor: not-allowed;
    opacity: 0.5;
}

.bp3-slider.bp3-slider-unlabeled {
    height: 16px;
}

.bp3-slider-track,
.bp3-slider-progress {
    height: 6px;
    left: 0;
    right: 0;
    top: 5px;
    position: absolute;
}

.bp3-slider-track {
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    overflow: hidden;
}

.bp3-slider-progress {
    background: hsla(209, 0%, 47%, 0.2);
    background: hsla(var(--gray1-hsl), 0.2);
}

.bp3-dark .bp3-slider-progress {
    background: hsla(209, 0%, 9%, 0.5);
    background: hsla(var(--black-hsl), 0.5);
}

.bp3-slider-progress.bp3-intent-primary {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--pt-intent-primary);
}

.bp3-slider-progress.bp3-intent-success {
    background-color: hsl(113, 100%, 34%);
    background-color: var(--pt-intent-success);
}

.bp3-slider-progress.bp3-intent-warning {
    background-color: hsl(30, 70%, 51%);
    background-color: var(--pt-intent-warning);
}

.bp3-slider-progress.bp3-intent-danger {
    background-color: hsl(0, 69%, 54%);
    background-color: var(--pt-intent-danger);
}

.bp3-slider-handle {
    background-color: hsl(209, 0%, 97%);
    background-color: var(--button-background-color);
    background-image: unset;
    background-image: var(--button-gradient);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: var(--button-box-shadow);
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--button-box-shadow-overlay);
    cursor: pointer;
    height: 16px;
    left: 0;
    position: absolute;
    top: 0;
    width: 16px;
}

.bp3-slider-handle:hover {
    background-clip: padding-box;
    background-color: hsl(209, 0%, 94%);
    background-color: var(--button-background-color-hover);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: var(--button-box-shadow);
}

.bp3-slider-handle:active, .bp3-slider-handle.bp3-active {
    background-color: hsl(209, 0%, 87%);
    background-color: var(--button-background-color-active);
    background-image: none;
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.3);
    box-shadow: var(--button-box-shadow-active);
}

.bp3-slider-handle:disabled, .bp3-slider-handle.bp3-disabled {
    background-color: hsla(209, 0%, 85%, 0.5);
    background-color: var(--button-background-color-disabled);
    background-image: none;
    box-shadow: none;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--button-color-disabled);
    cursor: not-allowed;
    outline: none;
}

.bp3-slider-handle:disabled.bp3-active, .bp3-slider-handle:disabled.bp3-active:hover, .bp3-slider-handle.bp3-disabled.bp3-active, .bp3-slider-handle.bp3-disabled.bp3-active:hover {
    background: hsla(209, 0%, 85%, 0.7);
    background: var(--button-background-color-active-disabled);
}

.bp3-slider-handle:focus {
    z-index: 1;
}

.bp3-slider-handle:hover {
    background-clip: padding-box;
    background-color: hsl(209, 0%, 94%);
    background-color: var(--button-background-color-hover);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: var(--button-box-shadow);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--button-box-shadow-overlay);
    cursor: -webkit-grab;
    cursor: grab;
    z-index: 2;
}

.bp3-slider-handle.bp3-active {
    background-color: hsl(209, 0%, 87%);
    background-color: var(--button-background-color-active);
    background-image: none;
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.3);
    box-shadow: var(--button-box-shadow-active);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.1);
    box-shadow: var(--button-box-shadow-overlay-active);
    cursor: -webkit-grabbing;
    cursor: grabbing;
}

.bp3-disabled .bp3-slider-handle {
    background: hsl(209, 0%, 80%);
    background: var(--gray5);
    box-shadow: none;
    pointer-events: none;
}

.bp3-dark .bp3-slider-handle {
    background-color: hsl(209, 0%, 38%);
    background-color: var(--dark-button-background-color);
    background-image: unset;
    background-image: var(--dark-button-gradient);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-box-shadow);
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dark .bp3-slider-handle:hover, .bp3-dark .bp3-slider-handle:active, .bp3-dark .bp3-slider-handle.bp3-active {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dark .bp3-slider-handle:hover {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-button-background-color-hover);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--dark-button-box-shadow);
}

.bp3-dark .bp3-slider-handle:active, .bp3-dark .bp3-slider-handle.bp3-active {
    background-color: hsl(209, 0%, 18%);
    background-color: var(--dark-button-background-color-active);
    background-image: none;
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.6),
  inset 0 1px 2px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--dark-button-box-shadow-active);
}

.bp3-dark .bp3-slider-handle:disabled, .bp3-dark .bp3-slider-handle.bp3-disabled {
    background-color: hsla(209, 0%, 38%, 0.5);
    background-color: var(--dark-button-background-color-disabled);
    background-image: none;
    box-shadow: none;
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-button-color-disabled);
}

.bp3-dark .bp3-slider-handle:disabled.bp3-active, .bp3-dark .bp3-slider-handle.bp3-disabled.bp3-active {
    background: hsla(209, 0%, 38%, 0.7);
    background: var(--dark-button-background-color-active-disabled);
}

.bp3-dark .bp3-slider-handle .bp3-button-spinner .bp3-spinner-head {
    background: hsla(209, 0%, 9%, 0.5);
    background: var(--dark-progress-track-color);
    stroke: hsl(209, 0%, 63%);
    stroke: var(--dark-progress-head-color);
}

.bp3-dark .bp3-slider-handle, .bp3-dark .bp3-slider-handle:hover {
    background-color: hsl(209, 0%, 38%);
    background-color: var(--dark-gray5);
}

.bp3-dark .bp3-slider-handle.bp3-active {
    background-color: hsl(209, 0%, 25%);
    background-color: var(--dark-gray3);
}

.bp3-dark .bp3-disabled .bp3-slider-handle {
    background: hsl(209, 0%, 47%);
    background: var(--gray1);
    border-color: hsl(209, 0%, 47%);
    border-color: var(--gray1);
    box-shadow: none;
}

.bp3-slider-handle .bp3-slider-label {
    background: hsl(209, 0%, 38%);
    background: var(--tooltip-background-color);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 2px 4px hsla(209, 0%, 9%, 0.2),
  0 8px 24px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-tooltip-box-shadow);
    color: hsl(209, 0%, 97%);
    color: var(--tooltip-text-color);
    margin-left: 8px;
}

.bp3-dark .bp3-slider-handle .bp3-slider-label {
    background: hsl(209, 0%, 91%);
    background: var(--dark-tooltip-background-color);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 2px 4px hsla(209, 0%, 9%, 0.4),
  0 8px 24px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-tooltip-box-shadow);
    color: hsl(209, 0%, 38%);
    color: var(--dark-tooltip-text-color);
}

.bp3-disabled .bp3-slider-handle .bp3-slider-label {
    box-shadow: none;
}

.bp3-slider-handle.bp3-start, .bp3-slider-handle.bp3-end {
    width: 8px;
}

.bp3-slider-handle.bp3-start {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
}

.bp3-slider-handle.bp3-end {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
    margin-left: 8px;
}

.bp3-slider-handle.bp3-end .bp3-slider-label {
    margin-left: 0;
}

.bp3-slider-label {
    -webkit-transform: translate(-50%, 20px);
    transform: translate(-50%, 20px);
    display: inline-block;
    font-size: 12px;
    line-height: 1;
    padding: 2px 5px;
    position: absolute;
    vertical-align: top;
}

.bp3-slider.bp3-vertical {
    height: 150px;
    min-width: 40px;
    width: 40px;
}

.bp3-slider.bp3-vertical .bp3-slider-track,
  .bp3-slider.bp3-vertical .bp3-slider-progress {
    bottom: 0;
    height: auto;
    left: 5px;
    top: 0;
    width: 6px;
}

.bp3-slider.bp3-vertical .bp3-slider-progress {
    top: auto;
}

.bp3-slider.bp3-vertical .bp3-slider-label {
    -webkit-transform: translate(20px, 50%);
    transform: translate(20px, 50%);
}

.bp3-slider.bp3-vertical .bp3-slider-handle {
    top: auto;
}

.bp3-slider.bp3-vertical .bp3-slider-handle .bp3-slider-label {
    margin-left: 0;
    margin-top: -8px;
}

.bp3-slider.bp3-vertical .bp3-slider-handle.bp3-end, .bp3-slider.bp3-vertical .bp3-slider-handle.bp3-start {
    height: 8px;
    margin-left: 0;
    width: 16px;
}

.bp3-slider.bp3-vertical .bp3-slider-handle.bp3-start {
    border-bottom-right-radius: 6px;
    border-bottom-right-radius: var(--pt-border-radius);
    border-top-left-radius: 0;
}

.bp3-slider.bp3-vertical .bp3-slider-handle.bp3-start .bp3-slider-label {
    -webkit-transform: translate(20px);
    transform: translate(20px);
}

.bp3-slider.bp3-vertical .bp3-slider-handle.bp3-end {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-top-left-radius: 6px;
    border-top-left-radius: var(--pt-border-radius);
    margin-bottom: 8px;
}

@-webkit-keyframes pt-spinner-animation {
    from {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }

    to {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}

@keyframes pt-spinner-animation {
    from {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }

    to {
        -webkit-transform: rotate(360deg);
        transform: rotate(360deg);
    }
}

.bp3-spinner {
    -webkit-align-items: center;
    align-items: center;
    display: -webkit-flex;
    display: flex;
    -webkit-justify-content: center;
    justify-content: center;
    overflow: visible;
    vertical-align: middle;
}

.bp3-spinner svg {
    display: block;
}

.bp3-spinner path {
    fill-opacity: 0;
}

.bp3-spinner .bp3-spinner-head {
    stroke: hsla(209, 0%, 47%, 0.8);
    stroke: var(--progress-head-color);
    stroke-linecap: round;
    -webkit-transform-origin: center;
    transform-origin: center;
    transition: stroke-dashoffset 200ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: stroke-dashoffset 200ms var(--pt-transition-ease);
}

.bp3-spinner .bp3-spinner-track {
    stroke: hsla(209, 0%, 47%, 0.2);
    stroke: var(--progress-track-color);
}

.bp3-spinner-animation {
    -webkit-animation: pt-spinner-animation 500ms linear infinite;
    animation: pt-spinner-animation 500ms linear infinite;
}

.bp3-no-spin > .bp3-spinner-animation {
    -webkit-animation: none;
    animation: none;
}

.bp3-dark .bp3-spinner .bp3-spinner-head {
    stroke: hsl(209, 0%, 63%);
    stroke: var(--dark-progress-head-color);
}

.bp3-dark .bp3-spinner .bp3-spinner-track {
    stroke: hsla(209, 0%, 9%, 0.5);
    stroke: var(--dark-progress-track-color);
}

.bp3-spinner.bp3-intent-primary .bp3-spinner-head {
    stroke: hsl(209,   90%,  50%);
    stroke: var(--pt-intent-primary);
}

.bp3-spinner.bp3-intent-success .bp3-spinner-head {
    stroke: hsl(113, 100%, 34%);
    stroke: var(--pt-intent-success);
}

.bp3-spinner.bp3-intent-warning .bp3-spinner-head {
    stroke: hsl(30, 70%, 51%);
    stroke: var(--pt-intent-warning);
}

.bp3-spinner.bp3-intent-danger .bp3-spinner-head {
    stroke: hsl(0, 69%, 54%);
    stroke: var(--pt-intent-danger);
}

/*
Tabs

Markup:
<div class="bp3-tabs">
    <ul class="bp3-tab-list {{.modifier}}" role="tablist">
        <li class="bp3-tab" role="tab" aria-selected="true">Selected tab</li>
        <li class="bp3-tab" role="tab">Another tab</li>
        <li class="bp3-tab" role="tab" aria-disabled="true">Disabled tab</li>
    </ul>
    <div class="bp3-tab-panel" role="tabpanel">Selected panel</div>
    <div class="bp3-tab-panel" role="tabpanel" aria-hidden="true">Another panel</div>
    <div class="bp3-tab-panel" role="tabpanel" aria-hidden="true">Disabled panel</div>
</div>

.bp3-large - Large tabs

Styleguide tabs
*/
.bp3-tabs.bp3-vertical {
    display: -webkit-flex;
    display: flex;
}

.bp3-tabs.bp3-vertical > .bp3-tab-list {
    -webkit-align-items: flex-start;
    align-items: flex-start;
    -webkit-flex-direction: column;
    flex-direction: column;
}

.bp3-tabs.bp3-vertical > .bp3-tab-list .bp3-tab {
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    padding: 0 10px;
    width: 100%;
}

.bp3-tabs.bp3-vertical > .bp3-tab-list .bp3-tab[aria-selected="true"] {
    background-color: hsla(209,   90%,  50%, 0.2);
    background-color: hsla(var(--pt-intent-primary-hsl), 0.2);
    box-shadow: none;
}

.bp3-tabs.bp3-vertical > .bp3-tab-list .bp3-tab-indicator-wrapper .bp3-tab-indicator {
    background-color: hsla(209,   90%,  50%, 0.2);
    background-color: hsla(var(--pt-intent-primary-hsl), 0.2);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    bottom: 0;
    height: auto;
    left: 0;
    right: 0;
    top: 0;
}

.bp3-tabs.bp3-vertical > .bp3-tab-panel {
    margin-top: 0;
    padding-left: 20px;
}

.bp3-tab-list {
    -webkit-align-items: flex-end;
    align-items: flex-end;
    border: none;
    display: -webkit-flex;
    display: flex;
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto;
    list-style: none;
    margin: 0;
    padding: 0;
    position: relative;
  /* stylelint-disable-next-line selector-no-universal */
}

.bp3-tab-list > *:not(:last-child) {
    margin-right: 20px;
}

.bp3-tab {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
    cursor: pointer;
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto;
    font-size: 14px;
    line-height: 30px;
    max-width: 100%;
    position: relative;
    vertical-align: top;
}

.bp3-tab a {
    color: inherit;
    display: block;
    text-decoration: none;
}

.bp3-tab-indicator-wrapper ~ .bp3-tab {
    /* stylelint-disable declaration-no-important */
    background-color: transparent !important;
    box-shadow: none !important;
    /* stylelint-enable declaration-no-important */
}

.bp3-tab[aria-disabled="true"] {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
    cursor: not-allowed;
}

.bp3-tab[aria-selected="true"] {
    border-radius: 0;
    box-shadow: inset 0 -3px 0 hsl(209,   83%,  46%);
    box-shadow: inset 0 -3px 0 var(--tab-color-selected);
}

.bp3-tab[aria-selected="true"], .bp3-tab:not([aria-disabled="true"]):hover {
    color: hsl(209,   83%,  46%);
    color: var(--tab-color-selected);
}

.bp3-tab:focus {
    -moz-outline-radius: 0;
}

.bp3-large > .bp3-tab {
    font-size: 16px;
    line-height: 40px;
}

.bp3-tab-panel {
    margin-top: 20px;
}

.bp3-tab-panel[aria-hidden="true"] {
    display: none;
}

.bp3-tab-indicator-wrapper {
    left: 0;
    pointer-events: none;
    position: absolute;
    top: 0;
    -webkit-transform: translateX(0), translateY(0);
    transform: translateX(0), translateY(0);
    transition: height, width, -webkit-transform;
    transition: height, transform, width;
    transition: height, transform, width, -webkit-transform;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-tab-indicator-wrapper .bp3-tab-indicator {
    background-color: hsl(209,   83%,  46%);
    background-color: var(--tab-color-selected);
    bottom: 0;
    height: 3px;
    left: 0;
    position: absolute;
    right: 0;
}

.bp3-tab-indicator-wrapper.bp3-no-animation {
    transition: none;
}

.bp3-dark .bp3-tab {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dark .bp3-tab[aria-disabled="true"] {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
}

.bp3-dark .bp3-tab[aria-selected="true"] {
    box-shadow: inset 0 -3px 0 hsl(209,   100%, 59%);
    box-shadow: inset 0 -3px 0 var(--dark-tab-color-selected);
}

.bp3-dark .bp3-tab[aria-selected="true"], .bp3-dark .bp3-tab:not([aria-disabled="true"]):hover {
    color: hsl(209,   100%, 59%);
    color: var(--dark-tab-color-selected);
}

.bp3-dark .bp3-tab-indicator {
    background-color: hsl(209,   100%, 59%);
    background-color: var(--dark-tab-color-selected);
}

.bp3-flex-expander {
    -webkit-flex: 1 1;
    flex: 1 1;
}

/*
Tags

Markup:
<span class="bp3-tag {{.modifier}}">125</span>
<span class="bp3-tag {{.modifier}}">Done</span>
<span class="bp3-tag {{.modifier}}">
  Tracking
  <button class="bp3-tag-remove"></button>
</span>
<span class="bp3-tag {{.modifier}}">
  Crushed
  <button class="bp3-tag-remove"></button>
</span>
<span class="bp3-tag {{.modifier}}">
  A rather long string of text that wraps to multiple lines
  demonstrates the position of the remove button.
  <button class="bp3-tag-remove"></button>
</span>

.bp3-large - Large
.bp3-minimal - Minimal appearance
.bp3-round - Rounded corners, ideal for badges
.bp3-interactive - Hover and active effects
.bp3-intent-primary - Primary intent
.bp3-intent-success - Success intent
.bp3-intent-warning - Warning intent
.bp3-intent-danger  - Danger intent

Styleguide tag
*/
.bp3-tag {
    display: -webkit-inline-flex;
    display: inline-flex;
    -webkit-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: center;
    align-items: center;
    background-color: hsl(209, 0%, 47%);
    background-color: var(--tag-default-color);
    border: none;
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    box-shadow: none;
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
    font-size: 12px;
    line-height: 16px;
    max-width: 100%;
    min-height: 20px;
    min-width: 20px;
    padding: 2px 6px;
    position: relative;
}

.bp3-tag.bp3-interactive {
    cursor: pointer;
}

.bp3-tag.bp3-interactive:hover {
    background-color: hsla(209, 0%, 47%, 0.85);
    background-color: hsla(var(--tag-default-color-hsl), 0.85);
}

.bp3-tag.bp3-interactive.bp3-active, .bp3-tag.bp3-interactive:active {
    background-color: hsla(209, 0%, 47%, 0.7);
    background-color: hsla(var(--tag-default-color-hsl), 0.7);
}

.bp3-tag > * {
    -webkit-flex-grow: 0;
    flex-grow: 0;
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
}

.bp3-tag > .bp3-fill {
    -webkit-flex-grow: 1;
    flex-grow: 1;
    -webkit-flex-shrink: 1;
    flex-shrink: 1;
}

.bp3-tag::before,
  .bp3-tag > * {
    margin-right: 4px;
}

.bp3-tag:empty::before,
  .bp3-tag > :last-child {
    margin-right: 0;
}

.bp3-tag:focus {
    outline: hsla(209,   90%,  50%, 0.6) auto 2px;
    outline: var(--pt-outline-color) auto 2px;
    outline-offset: 0;
    -moz-outline-radius: 6px;
}

.bp3-tag.bp3-round {
    border-radius: 30px;
    padding-left: 8px;
    padding-right: 8px;
}

.bp3-dark .bp3-tag {
    background-color: hsl(209, 0%, 80%);
    background-color: var(--dark-tag-default-color);
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
}

.bp3-dark .bp3-tag.bp3-interactive {
    cursor: pointer;
}

.bp3-dark .bp3-tag.bp3-interactive:hover {
    background-color: hsla(209, 0%, 80%, 0.85);
    background-color: hsla(var(--dark-tag-default-color-hsl), 0.85);
}

.bp3-dark .bp3-tag.bp3-interactive.bp3-active, .bp3-dark .bp3-tag.bp3-interactive:active {
    background-color: hsla(209, 0%, 80%, 0.7);
    background-color: hsla(var(--dark-tag-default-color-hsl), 0.7);
}

.bp3-dark .bp3-tag > .bp3-icon, .bp3-dark .bp3-tag .bp3-icon-standard, .bp3-dark .bp3-tag .bp3-icon-large {
    fill: currentColor;
}

.bp3-tag > .bp3-icon, .bp3-tag .bp3-icon-standard, .bp3-tag .bp3-icon-large {
    fill: hsl(209, 0%, 100%);
    fill: var(--white);
}

.bp3-tag.bp3-large,
  .bp3-large .bp3-tag {
    font-size: 14px;
    line-height: 20px;
    min-height: 30px;
    min-width: 30px;
    padding: 5px 10px;
}

.bp3-tag.bp3-large::before,
    .bp3-tag.bp3-large > *,
    .bp3-large .bp3-tag::before,
    .bp3-large .bp3-tag > * {
    margin-right: 7px;
}

.bp3-tag.bp3-large:empty::before,
    .bp3-tag.bp3-large > :last-child,
    .bp3-large .bp3-tag:empty::before,
    .bp3-large .bp3-tag > :last-child {
    margin-right: 0;
}

.bp3-tag.bp3-large.bp3-round,
    .bp3-large .bp3-tag.bp3-round {
    padding-left: 12px;
    padding-right: 12px;
}

.bp3-tag.bp3-intent-primary {
    background: hsla(209,   90%,  50%, 1);
    background: hsla(var(--pt-intent-primary-hsl), 1);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-tag.bp3-intent-primary.bp3-interactive {
    cursor: pointer;
}

.bp3-tag.bp3-intent-primary.bp3-interactive:hover {
    background-color: hsla(209,   90%,  50%, 0.85);
    background-color: hsla(var(--pt-intent-primary-hsl), 0.85);
}

.bp3-tag.bp3-intent-primary.bp3-interactive.bp3-active, .bp3-tag.bp3-intent-primary.bp3-interactive:active {
    background-color: hsla(209,   90%,  50%, 0.7);
    background-color: hsla(var(--pt-intent-primary-hsl), 0.7);
}

.bp3-tag.bp3-intent-success {
    background: hsla(113, 100%, 34%, 1);
    background: hsla(var(--pt-intent-success-hsl), 1);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-tag.bp3-intent-success.bp3-interactive {
    cursor: pointer;
}

.bp3-tag.bp3-intent-success.bp3-interactive:hover {
    background-color: hsla(113, 100%, 34%, 0.85);
    background-color: hsla(var(--pt-intent-success-hsl), 0.85);
}

.bp3-tag.bp3-intent-success.bp3-interactive.bp3-active, .bp3-tag.bp3-intent-success.bp3-interactive:active {
    background-color: hsla(113, 100%, 34%, 0.7);
    background-color: hsla(var(--pt-intent-success-hsl), 0.7);
}

.bp3-tag.bp3-intent-warning {
    background: hsla(30, 70%, 51%, 1);
    background: hsla(var(--pt-intent-warning-hsl), 1);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-tag.bp3-intent-warning.bp3-interactive {
    cursor: pointer;
}

.bp3-tag.bp3-intent-warning.bp3-interactive:hover {
    background-color: hsla(30, 70%, 51%, 0.85);
    background-color: hsla(var(--pt-intent-warning-hsl), 0.85);
}

.bp3-tag.bp3-intent-warning.bp3-interactive.bp3-active, .bp3-tag.bp3-intent-warning.bp3-interactive:active {
    background-color: hsla(30, 70%, 51%, 0.7);
    background-color: hsla(var(--pt-intent-warning-hsl), 0.7);
}

.bp3-tag.bp3-intent-danger {
    background: hsla(0, 69%, 54%, 1);
    background: hsla(var(--pt-intent-danger-hsl), 1);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-tag.bp3-intent-danger.bp3-interactive {
    cursor: pointer;
}

.bp3-tag.bp3-intent-danger.bp3-interactive:hover {
    background-color: hsla(0, 69%, 54%, 0.85);
    background-color: hsla(var(--pt-intent-danger-hsl), 0.85);
}

.bp3-tag.bp3-intent-danger.bp3-interactive.bp3-active, .bp3-tag.bp3-intent-danger.bp3-interactive:active {
    background-color: hsla(0, 69%, 54%, 0.7);
    background-color: hsla(var(--pt-intent-danger-hsl), 0.7);
}

.bp3-tag.bp3-fill {
    display: -webkit-flex;
    display: flex;
    width: 100%;
}

.bp3-tag.bp3-minimal > .bp3-icon, .bp3-tag.bp3-minimal .bp3-icon-standard, .bp3-tag.bp3-minimal .bp3-icon-large {
    fill: hsl(209, 0%, 47%);
    fill: var(--pt-icon-color);
}

.bp3-tag.bp3-minimal:not([class*="bp3-intent-"]) {
    background-color: hsla(209, 0%, 63%, 0.2);
    background-color: hsla(var(--gray3-hsl), 0.2);
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
}

.bp3-tag.bp3-minimal:not([class*="bp3-intent-"]).bp3-interactive {
    cursor: pointer;
}

.bp3-tag.bp3-minimal:not([class*="bp3-intent-"]).bp3-interactive:hover {
    background-color: hsla(209, 0%, 47%, 0.3);
    background-color: hsla(var(--tag-default-color-hsl), 0.3);
}

.bp3-tag.bp3-minimal:not([class*="bp3-intent-"]).bp3-interactive.bp3-active, .bp3-tag.bp3-minimal:not([class*="bp3-intent-"]).bp3-interactive:active {
    background-color: hsla(209, 0%, 47%, 0.4);
    background-color: hsla(var(--tag-default-color-hsl), 0.4);
}

.bp3-dark .bp3-tag.bp3-minimal:not([class*="bp3-intent-"]) {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-dark .bp3-tag.bp3-minimal:not([class*="bp3-intent-"]).bp3-interactive {
    cursor: pointer;
}

.bp3-dark .bp3-tag.bp3-minimal:not([class*="bp3-intent-"]).bp3-interactive:hover {
    background-color: hsla(209, 0%, 80%, 0.3);
    background-color: hsla(var(--dark-tag-default-color-hsl), 0.3);
}

.bp3-dark .bp3-tag.bp3-minimal:not([class*="bp3-intent-"]).bp3-interactive.bp3-active, .bp3-dark .bp3-tag.bp3-minimal:not([class*="bp3-intent-"]).bp3-interactive:active {
    background-color: hsla(209, 0%, 80%, 0.4);
    background-color: hsla(var(--dark-tag-default-color-hsl), 0.4);
}

.bp3-dark .bp3-tag.bp3-minimal:not([class*="bp3-intent-"]) > .bp3-icon, .bp3-dark .bp3-tag.bp3-minimal:not([class*="bp3-intent-"]) .bp3-icon-standard, .bp3-dark .bp3-tag.bp3-minimal:not([class*="bp3-intent-"]) .bp3-icon-large {
    fill: hsl(209, 0%, 73%);
    fill: var(--pt-dark-icon-color);
}

.bp3-tag.bp3-minimal.bp3-intent-primary {
    background-color: hsla(209,   90%,  50%, 0.15);
    background-color: hsla(var(--pt-intent-primary-hsl), 0.15);
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-tag.bp3-minimal.bp3-intent-primary.bp3-interactive {
    cursor: pointer;
}

.bp3-tag.bp3-minimal.bp3-intent-primary.bp3-interactive:hover {
    background-color: hsla(209,   90%,  50%, 0.25);
    background-color: hsla(var(--pt-intent-primary-hsl), 0.25);
}

.bp3-tag.bp3-minimal.bp3-intent-primary.bp3-interactive.bp3-active, .bp3-tag.bp3-minimal.bp3-intent-primary.bp3-interactive:active {
    background-color: hsla(209,   90%,  50%, 0.35);
    background-color: hsla(var(--pt-intent-primary-hsl), 0.35);
}

.bp3-tag.bp3-minimal.bp3-intent-primary > .bp3-icon, .bp3-tag.bp3-minimal.bp3-intent-primary .bp3-icon-standard, .bp3-tag.bp3-minimal.bp3-intent-primary .bp3-icon-large {
    fill: hsla(209,   90%,  50%, 1);
    fill: hsla(var(--pt-intent-primary-hsl), 1);
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-primary {
    background-color: hsla(209,   90%,  50%, 0.25);
    background-color: hsla(var(--pt-intent-primary-hsl), 0.25);
    color: hsl(209,   100%, 59%);
    color: var(--pt-dark-intent-primary-text-color);
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-primary.bp3-interactive {
    cursor: pointer;
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-primary.bp3-interactive:hover {
    background-color: hsla(209,   90%,  50%, 0.35);
    background-color: hsla(var(--pt-intent-primary-hsl), 0.35);
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-primary.bp3-interactive.bp3-active, .bp3-dark .bp3-tag.bp3-minimal.bp3-intent-primary.bp3-interactive:active {
    background-color: hsla(209,   90%,  50%, 0.45);
    background-color: hsla(var(--pt-intent-primary-hsl), 0.45);
}

.bp3-tag.bp3-minimal.bp3-intent-success {
    background-color: hsla(113, 100%, 34%, 0.15);
    background-color: hsla(var(--pt-intent-success-hsl), 0.15);
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-tag.bp3-minimal.bp3-intent-success.bp3-interactive {
    cursor: pointer;
}

.bp3-tag.bp3-minimal.bp3-intent-success.bp3-interactive:hover {
    background-color: hsla(113, 100%, 34%, 0.25);
    background-color: hsla(var(--pt-intent-success-hsl), 0.25);
}

.bp3-tag.bp3-minimal.bp3-intent-success.bp3-interactive.bp3-active, .bp3-tag.bp3-minimal.bp3-intent-success.bp3-interactive:active {
    background-color: hsla(113, 100%, 34%, 0.35);
    background-color: hsla(var(--pt-intent-success-hsl), 0.35);
}

.bp3-tag.bp3-minimal.bp3-intent-success > .bp3-icon, .bp3-tag.bp3-minimal.bp3-intent-success .bp3-icon-standard, .bp3-tag.bp3-minimal.bp3-intent-success .bp3-icon-large {
    fill: hsla(113, 100%, 34%, 1);
    fill: hsla(var(--pt-intent-success-hsl), 1);
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-success {
    background-color: hsla(113, 100%, 34%, 0.25);
    background-color: hsla(var(--pt-intent-success-hsl), 0.25);
    color: hsl(113, 57%,  57%);
    color: var(--pt-dark-intent-success-text-color);
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-success.bp3-interactive {
    cursor: pointer;
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-success.bp3-interactive:hover {
    background-color: hsla(113, 100%, 34%, 0.35);
    background-color: hsla(var(--pt-intent-success-hsl), 0.35);
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-success.bp3-interactive.bp3-active, .bp3-dark .bp3-tag.bp3-minimal.bp3-intent-success.bp3-interactive:active {
    background-color: hsla(113, 100%, 34%, 0.45);
    background-color: hsla(var(--pt-intent-success-hsl), 0.45);
}

.bp3-tag.bp3-minimal.bp3-intent-warning {
    background-color: hsla(30, 70%, 51%, 0.15);
    background-color: hsla(var(--pt-intent-warning-hsl), 0.15);
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-tag.bp3-minimal.bp3-intent-warning.bp3-interactive {
    cursor: pointer;
}

.bp3-tag.bp3-minimal.bp3-intent-warning.bp3-interactive:hover {
    background-color: hsla(30, 70%, 51%, 0.25);
    background-color: hsla(var(--pt-intent-warning-hsl), 0.25);
}

.bp3-tag.bp3-minimal.bp3-intent-warning.bp3-interactive.bp3-active, .bp3-tag.bp3-minimal.bp3-intent-warning.bp3-interactive:active {
    background-color: hsla(30, 70%, 51%, 0.35);
    background-color: hsla(var(--pt-intent-warning-hsl), 0.35);
}

.bp3-tag.bp3-minimal.bp3-intent-warning > .bp3-icon, .bp3-tag.bp3-minimal.bp3-intent-warning .bp3-icon-standard, .bp3-tag.bp3-minimal.bp3-intent-warning .bp3-icon-large {
    fill: hsla(30, 70%, 51%, 1);
    fill: hsla(var(--pt-intent-warning-hsl), 1);
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-warning {
    background-color: hsla(30, 70%, 51%, 0.25);
    background-color: hsla(var(--pt-intent-warning-hsl), 0.25);
    color: hsl(30, 100%, 70%);
    color: var(--pt-dark-intent-warning-text-color);
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-warning.bp3-interactive {
    cursor: pointer;
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-warning.bp3-interactive:hover {
    background-color: hsla(30, 70%, 51%, 0.35);
    background-color: hsla(var(--pt-intent-warning-hsl), 0.35);
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-warning.bp3-interactive.bp3-active, .bp3-dark .bp3-tag.bp3-minimal.bp3-intent-warning.bp3-interactive:active {
    background-color: hsla(30, 70%, 51%, 0.45);
    background-color: hsla(var(--pt-intent-warning-hsl), 0.45);
}

.bp3-tag.bp3-minimal.bp3-intent-danger {
    background-color: hsla(0, 69%, 54%, 0.15);
    background-color: hsla(var(--pt-intent-danger-hsl), 0.15);
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-tag.bp3-minimal.bp3-intent-danger.bp3-interactive {
    cursor: pointer;
}

.bp3-tag.bp3-minimal.bp3-intent-danger.bp3-interactive:hover {
    background-color: hsla(0, 69%, 54%, 0.25);
    background-color: hsla(var(--pt-intent-danger-hsl), 0.25);
}

.bp3-tag.bp3-minimal.bp3-intent-danger.bp3-interactive.bp3-active, .bp3-tag.bp3-minimal.bp3-intent-danger.bp3-interactive:active {
    background-color: hsla(0, 69%, 54%, 0.35);
    background-color: hsla(var(--pt-intent-danger-hsl), 0.35);
}

.bp3-tag.bp3-minimal.bp3-intent-danger > .bp3-icon, .bp3-tag.bp3-minimal.bp3-intent-danger .bp3-icon-standard, .bp3-tag.bp3-minimal.bp3-intent-danger .bp3-icon-large {
    fill: hsla(0, 69%, 54%, 1);
    fill: hsla(var(--pt-intent-danger-hsl), 1);
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-danger {
    background-color: hsla(0, 69%, 54%, 0.25);
    background-color: hsla(var(--pt-intent-danger-hsl), 0.25);
    color: hsl(0, 100%, 73%);
    color: var(--pt-dark-intent-danger-text-color);
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-danger.bp3-interactive {
    cursor: pointer;
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-danger.bp3-interactive:hover {
    background-color: hsla(0, 69%, 54%, 0.35);
    background-color: hsla(var(--pt-intent-danger-hsl), 0.35);
}

.bp3-dark .bp3-tag.bp3-minimal.bp3-intent-danger.bp3-interactive.bp3-active, .bp3-dark .bp3-tag.bp3-minimal.bp3-intent-danger.bp3-interactive:active {
    background-color: hsla(0, 69%, 54%, 0.45);
    background-color: hsla(var(--pt-intent-danger-hsl), 0.45);
}

.bp3-tag-remove {
    background: none;
    border: none;
    color: inherit;
    cursor: pointer;
    display: -webkit-flex;
    display: flex;
    margin-bottom: -2px;
  /* stylelint-disable-next-line declaration-no-important */
    margin-right: -6px !important;
    margin-top: -2px;
    opacity: 0.5;
    padding: 2px;
    padding-left: 0;
}

.bp3-tag-remove:hover {
    background: none;
    opacity: 0.8;
    text-decoration: none;
}

.bp3-tag-remove:active {
    opacity: 1;
}

.bp3-tag-remove:empty::before {
    font-family: "Icons16", sans-serif;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 1;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    content: "";
}

.bp3-large .bp3-tag-remove {
    /* stylelint-disable-next-line declaration-no-important */
    margin-right: -10px !important;
    padding: 0 5px 0 0;
}

.bp3-large .bp3-tag-remove:empty::before {
    font-family: "Icons20", sans-serif;
    font-size: 20px;
    font-style: normal;
    font-weight: 400;
    line-height: 1;
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
.bp3-tag-input {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: flex-start;
    align-items: flex-start;
    cursor: text;
    height: auto;
    line-height: inherit;
    min-height: 30px;
    padding-left: 5px;
    padding-right: 0;
}

.bp3-tag-input > * {
    -webkit-flex-grow: 0;
    flex-grow: 0;
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
}

.bp3-tag-input > .bp3-tag-input-values {
    -webkit-flex-grow: 1;
    flex-grow: 1;
    -webkit-flex-shrink: 1;
    flex-shrink: 1;
}

.bp3-tag-input .bp3-tag-input-icon {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
    margin-left: 2px;
    margin-right: 7px;
    margin-top: 7px;
}

.bp3-tag-input .bp3-tag-input-values {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: center;
    align-items: center;
    -webkit-align-self: stretch;
    align-self: stretch;
    -webkit-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-right: 7px;
    margin-top: 5px;
    min-width: 0;
}

.bp3-tag-input .bp3-tag-input-values > * {
    -webkit-flex-grow: 0;
    flex-grow: 0;
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
}

.bp3-tag-input .bp3-tag-input-values > .bp3-fill {
    -webkit-flex-grow: 1;
    flex-grow: 1;
    -webkit-flex-shrink: 1;
    flex-shrink: 1;
}

.bp3-tag-input .bp3-tag-input-values::before,
    .bp3-tag-input .bp3-tag-input-values > * {
    margin-right: 5px;
}

.bp3-tag-input .bp3-tag-input-values:empty::before,
    .bp3-tag-input .bp3-tag-input-values > :last-child {
    margin-right: 0;
}

.bp3-tag-input .bp3-tag-input-values:first-child .bp3-input-ghost:first-child {
    padding-left: 5px;
}

.bp3-tag-input .bp3-tag-input-values > * {
    margin-bottom: 5px;
}

.bp3-tag-input .bp3-tag {
    overflow-wrap: break-word;
}

.bp3-tag-input .bp3-tag.bp3-active {
    outline: hsla(209,   90%,  50%, 0.6) auto 2px;
    outline: var(--pt-outline-color) auto 2px;
    outline-offset: 0;
    -moz-outline-radius: 6px;
}

.bp3-tag-input .bp3-input-ghost {
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
    line-height: 20px;
    width: 80px;
}

.bp3-tag-input .bp3-input-ghost:disabled, .bp3-tag-input .bp3-input-ghost.bp3-disabled {
    cursor: not-allowed;
}

.bp3-tag-input .bp3-button,
  .bp3-tag-input .bp3-spinner {
    margin: 3px;
    margin-left: 0;
}

.bp3-tag-input .bp3-button {
    min-height: 24px;
    min-width: 24px;
    padding: 0 7px;
}

.bp3-tag-input.bp3-large {
    height: auto;
    min-height: 40px;
}

.bp3-tag-input.bp3-large::before,
    .bp3-tag-input.bp3-large > * {
    margin-right: 10px;
}

.bp3-tag-input.bp3-large:empty::before,
    .bp3-tag-input.bp3-large > :last-child {
    margin-right: 0;
}

.bp3-tag-input.bp3-large .bp3-tag-input-icon {
    margin-left: 5px;
    margin-top: 10px;
}

.bp3-tag-input.bp3-large .bp3-input-ghost {
    line-height: 30px;
}

.bp3-tag-input.bp3-large .bp3-button {
    min-height: 30px;
    min-width: 30px;
    padding: 5px 10px;
    margin: 5px;
    margin-left: 0;
}

.bp3-tag-input.bp3-large .bp3-spinner {
    margin: 8px;
    margin-left: 0;
}

.bp3-tag-input.bp3-active {
    background-color: hsl(209, 0%, 100%);
    background-color: var(--input-background-color);
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--input-shadow-color-focus-hsl), 1), 0 0 0 3px hsla(var(--input-shadow-color-focus-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-tag-input.bp3-active.bp3-intent-primary {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-primary-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-tag-input.bp3-active.bp3-intent-success {
    box-shadow: 0 0 0 1px hsla(113, 100%, 34%, 1), 0 0 0 3px hsla(113, 100%, 34%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-success-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-tag-input.bp3-active.bp3-intent-warning {
    box-shadow: 0 0 0 1px hsla(30, 70%, 51%, 1), 0 0 0 3px hsla(30, 70%, 51%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-warning-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-tag-input.bp3-active.bp3-intent-danger {
    box-shadow: 0 0 0 1px hsla(0, 69%, 54%, 1), 0 0 0 3px hsla(0, 69%, 54%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-danger-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-dark .bp3-tag-input .bp3-tag-input-icon, .bp3-tag-input.bp3-dark .bp3-tag-input-icon {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-icon-color);
}

.bp3-dark .bp3-tag-input .bp3-input-ghost, .bp3-tag-input.bp3-dark .bp3-input-ghost {
    color: hsl(209, 0%, 97%);
    color: var(--dark-input-color);
}

.bp3-dark .bp3-tag-input .bp3-input-ghost::-webkit-input-placeholder, .bp3-tag-input.bp3-dark .bp3-input-ghost::-webkit-input-placeholder {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-placeholder-color);
}

.bp3-dark .bp3-tag-input .bp3-input-ghost:-ms-input-placeholder, .bp3-tag-input.bp3-dark .bp3-input-ghost:-ms-input-placeholder {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-placeholder-color);
}

.bp3-dark .bp3-tag-input .bp3-input-ghost::placeholder, .bp3-tag-input.bp3-dark .bp3-input-ghost::placeholder {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--dark-input-placeholder-color);
}

.bp3-dark .bp3-tag-input.bp3-active, .bp3-tag-input.bp3-dark.bp3-active {
    background-color: hsla(209, 0%, 9%, 0.3);
    background-color: var(--dark-input-background-color);
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--dark-input-shadow-color-focus-hsl), 1), 0 0 0 1px hsla(var(--dark-input-shadow-color-focus-hsl), 1), 0 0 0 3px hsla(var(--dark-input-shadow-color-focus-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-tag-input.bp3-active.bp3-intent-primary, .bp3-tag-input.bp3-dark.bp3-active.bp3-intent-primary {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-primary-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-tag-input.bp3-active.bp3-intent-success, .bp3-tag-input.bp3-dark.bp3-active.bp3-intent-success {
    box-shadow: 0 0 0 1px hsla(113, 100%, 34%, 1), 0 0 0 3px hsla(113, 100%, 34%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-success-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-tag-input.bp3-active.bp3-intent-warning, .bp3-tag-input.bp3-dark.bp3-active.bp3-intent-warning {
    box-shadow: 0 0 0 1px hsla(30, 70%, 51%, 1), 0 0 0 3px hsla(30, 70%, 51%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-warning-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-tag-input.bp3-active.bp3-intent-danger, .bp3-tag-input.bp3-dark.bp3-active.bp3-intent-danger {
    box-shadow: 0 0 0 1px hsla(0, 69%, 54%, 1), 0 0 0 3px hsla(0, 69%, 54%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-danger-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-input-ghost {
    background: none;
    border: none;
    box-shadow: none;
    padding: 0;
}

.bp3-input-ghost::-webkit-input-placeholder {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-placeholder-color);
    opacity: 1;
}

.bp3-input-ghost:-ms-input-placeholder {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-placeholder-color);
    opacity: 1;
}

.bp3-input-ghost::placeholder {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-placeholder-color);
    opacity: 1;
}

.bp3-input-ghost:focus {
    /* stylelint-disable-next-line declaration-no-important */
    outline: none !important;
}

/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-toast {
    -webkit-align-items: flex-start;
    align-items: flex-start;
    background-color: hsl(209, 0%, 100%);
    background-color: var(--white);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 2px 4px hsla(209, 0%, 9%, 0.2),
  0 8px 24px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-elevation-shadow-3);
    display: -webkit-flex;
    display: flex;
    margin: 20px 0 0;
    max-width: 500px;
    min-width: 300px;
    pointer-events: all;
  /* stylelint-disable-next-line declaration-no-important */
    position: relative !important;
  /* stylelint-disable declaration-no-important */
  /* stylelint-enable declaration-no-important */
}

.bp3-toast.bp3-toast-enter, .bp3-toast.bp3-toast-appear {
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
}

.bp3-toast.bp3-toast-enter-active, .bp3-toast.bp3-toast-appear-active {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    transition-delay: 0;
    transition-duration: 300ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);
    transition-timing-function: var(--pt-transition-ease-bounce);
}

.bp3-toast.bp3-toast-enter ~ .bp3-toast, .bp3-toast.bp3-toast-appear ~ .bp3-toast {
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
}

.bp3-toast.bp3-toast-enter-active ~ .bp3-toast, .bp3-toast.bp3-toast-appear-active ~ .bp3-toast {
    -webkit-transform: translateY(0);
    transform: translateY(0);
    transition-delay: 0;
    transition-duration: 300ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);
    transition-timing-function: var(--pt-transition-ease-bounce);
}

.bp3-toast.bp3-toast-exit {
    opacity: 1;
    -webkit-filter: blur(0);
    filter: blur(0);
}

.bp3-toast.bp3-toast-exit-active {
    opacity: 0;
    -webkit-filter: blur(10px);
    filter: blur(10px);
    transition-delay: 0;
    transition-duration: 300ms;
    transition-property: opacity, -webkit-filter;
    transition-property: opacity, filter;
    transition-property: opacity, filter, -webkit-filter;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-toast.bp3-toast-exit ~ .bp3-toast {
    -webkit-transform: translateY(0);
    transform: translateY(0);
}

.bp3-toast.bp3-toast-exit-active ~ .bp3-toast {
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
    transition-delay: 50ms;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-toast .bp3-button-group {
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto;
    padding: 5px;
    padding-left: 0;
}

.bp3-toast > .bp3-icon {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
    margin: 12px;
    margin-right: 0;
}

.bp3-toast.bp3-dark,
  .bp3-dark .bp3-toast {
    background-color: hsl(209, 0%, 38%);
    background-color: var(--dark-gray5);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 2px 4px hsla(209, 0%, 9%, 0.4),
  0 8px 24px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-elevation-shadow-3);
}

.bp3-toast.bp3-dark > .bp3-icon,
    .bp3-dark .bp3-toast > .bp3-icon {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-icon-color);
}

.bp3-toast[class*="bp3-intent-"] a {
    color: hsla(209, 0%, 100%, 0.7);
    color: hsla(var(--white-hsl), 0.7);
}

.bp3-toast[class*="bp3-intent-"] a:hover {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-toast[class*="bp3-intent-"] > .bp3-icon {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-toast[class*="bp3-intent-"] .bp3-button, .bp3-toast[class*="bp3-intent-"] .bp3-button::before,
  .bp3-toast[class*="bp3-intent-"] .bp3-button .bp3-icon, .bp3-toast[class*="bp3-intent-"] .bp3-button:active {
    color: hsla(209, 0%, 100%, 0.7) !important;
    color: hsla(var(--white-hsl), 0.7) !important;
}

.bp3-toast[class*="bp3-intent-"] .bp3-button:focus {
    outline-color: hsla(209, 0%, 100%, 0.5);
    outline-color: hsla(var(--white-hsl), 0.5);
}

.bp3-toast[class*="bp3-intent-"] .bp3-button:hover {
    background-color: hsla(209, 0%, 100%, 0.15) !important;
    background-color: hsla(var(--white-hsl), 0.15) !important;
    color: hsl(209, 0%, 100%) !important;
    color: var(--white) !important;
}

.bp3-toast[class*="bp3-intent-"] .bp3-button:active {
    background-color: hsla(209, 0%, 100%, 0.3) !important;
    background-color: hsla(var(--white-hsl), 0.3) !important;
    color: hsl(209, 0%, 100%) !important;
    color: var(--white) !important;
}

.bp3-toast[class*="bp3-intent-"] .bp3-button::after {
    background: hsla(209, 0%, 100%, 0.3) !important;
    background: hsla(var(--white-hsl), 0.3) !important;
}

.bp3-toast.bp3-intent-primary {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--pt-intent-primary);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-toast.bp3-intent-success {
    background-color: hsl(113, 100%, 34%);
    background-color: var(--pt-intent-success);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-toast.bp3-intent-warning {
    background-color: hsl(30, 70%, 51%);
    background-color: var(--pt-intent-warning);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-toast.bp3-intent-danger {
    background-color: hsl(0, 69%, 54%);
    background-color: var(--pt-intent-danger);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-toast-message {
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
    padding: 11px;
    word-break: break-word;
}

.bp3-toast-container {
    -webkit-align-items: center;
    align-items: center;
  /* stylelint-disable-next-line declaration-no-important */
    display: -webkit-flex !important;
    display: flex !important;
    -webkit-flex-direction: column;
    flex-direction: column;
    left: 0;
    overflow: hidden;
    padding: 0 20px 20px;
    pointer-events: none;
    right: 0;
    z-index: 40;
}

.bp3-toast-container.bp3-toast-container-in-portal {
    position: fixed;
}

.bp3-toast-container.bp3-toast-container-inline {
    position: absolute;
}

.bp3-toast-container.bp3-toast-container-top {
    top: 0;
}

.bp3-toast-container.bp3-toast-container-bottom {
    bottom: 0;
    -webkit-flex-direction: column-reverse;
    flex-direction: column-reverse;
    top: auto;
}

.bp3-toast-container.bp3-toast-container-left {
    -webkit-align-items: flex-start;
    align-items: flex-start;
}

.bp3-toast-container.bp3-toast-container-right {
    -webkit-align-items: flex-end;
    align-items: flex-end;
}

.bp3-toast-container-bottom .bp3-toast.bp3-toast-enter:not(.bp3-toast-enter-active),
.bp3-toast-container-bottom .bp3-toast.bp3-toast-enter:not(.bp3-toast-enter-active) ~ .bp3-toast, .bp3-toast-container-bottom .bp3-toast.bp3-toast-appear:not(.bp3-toast-appear-active),
.bp3-toast-container-bottom .bp3-toast.bp3-toast-appear:not(.bp3-toast-appear-active) ~ .bp3-toast,
.bp3-toast-container-bottom .bp3-toast.bp3-toast-exit-active ~ .bp3-toast,
.bp3-toast-container-bottom .bp3-toast.bp3-toast-leave-active ~ .bp3-toast {
    -webkit-transform: translateY(60px);
    transform: translateY(60px);
}

/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-tooltip {
  /* stylelint-disable-next-line max-line-length */
  /* stylelint-disable-next-line max-line-length */
  /* stylelint-disable-next-line max-line-length */
  /* stylelint-disable-next-line max-line-length */
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 2px 4px hsla(209, 0%, 9%, 0.2),
  0 8px 24px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-tooltip-box-shadow);
    -webkit-transform: scale(1);
    transform: scale(1);
}

.bp3-tooltip .bp3-popover-arrow {
    height: 22px;
    position: absolute;
    width: 22px;
}

.bp3-tooltip .bp3-popover-arrow::before {
    height: 14px;
    margin: 4px;
    width: 14px;
}

.bp3-tether-element-attached-bottom.bp3-tether-target-attached-top > .bp3-tooltip {
    margin-bottom: 11px;
    margin-top: -11px;
}

.bp3-tether-element-attached-bottom.bp3-tether-target-attached-top > .bp3-tooltip > .bp3-popover-arrow {
    bottom: -8px;
}

.bp3-tether-element-attached-bottom.bp3-tether-target-attached-top > .bp3-tooltip > .bp3-popover-arrow svg {
    -webkit-transform: rotate(-90deg);
    transform: rotate(-90deg);
}

.bp3-tether-element-attached-left.bp3-tether-target-attached-right > .bp3-tooltip {
    margin-left: 11px;
}

.bp3-tether-element-attached-left.bp3-tether-target-attached-right > .bp3-tooltip > .bp3-popover-arrow {
    left: -8px;
}

.bp3-tether-element-attached-left.bp3-tether-target-attached-right > .bp3-tooltip > .bp3-popover-arrow svg {
    -webkit-transform: rotate(0);
    transform: rotate(0);
}

.bp3-tether-element-attached-top.bp3-tether-target-attached-bottom > .bp3-tooltip {
    margin-top: 11px;
}

.bp3-tether-element-attached-top.bp3-tether-target-attached-bottom > .bp3-tooltip > .bp3-popover-arrow {
    top: -8px;
}

.bp3-tether-element-attached-top.bp3-tether-target-attached-bottom > .bp3-tooltip > .bp3-popover-arrow svg {
    -webkit-transform: rotate(90deg);
    transform: rotate(90deg);
}

.bp3-tether-element-attached-right.bp3-tether-target-attached-left > .bp3-tooltip {
    margin-left: -11px;
    margin-right: 11px;
}

.bp3-tether-element-attached-right.bp3-tether-target-attached-left > .bp3-tooltip > .bp3-popover-arrow {
    right: -8px;
}

.bp3-tether-element-attached-right.bp3-tether-target-attached-left > .bp3-tooltip > .bp3-popover-arrow svg {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg);
}

.bp3-tether-element-attached-middle > .bp3-tooltip > .bp3-popover-arrow {
    top: 50%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
}

.bp3-tether-element-attached-center > .bp3-tooltip > .bp3-popover-arrow {
    right: 50%;
    -webkit-transform: translateX(50%);
    transform: translateX(50%);
}

.bp3-tether-element-attached-top.bp3-tether-target-attached-top > .bp3-tooltip > .bp3-popover-arrow {
    top: -0.22183px;
}

.bp3-tether-element-attached-right.bp3-tether-target-attached-right > .bp3-tooltip > .bp3-popover-arrow {
    right: -0.22183px;
}

.bp3-tether-element-attached-left.bp3-tether-target-attached-left > .bp3-tooltip > .bp3-popover-arrow {
    left: -0.22183px;
}

.bp3-tether-element-attached-bottom.bp3-tether-target-attached-bottom > .bp3-tooltip > .bp3-popover-arrow {
    bottom: -0.22183px;
}

.bp3-tether-element-attached-top.bp3-tether-element-attached-left > .bp3-tooltip {
    -webkit-transform-origin: top left;
    transform-origin: top left;
}

.bp3-tether-element-attached-top.bp3-tether-element-attached-center > .bp3-tooltip {
    -webkit-transform-origin: top center;
    transform-origin: top center;
}

.bp3-tether-element-attached-top.bp3-tether-element-attached-right > .bp3-tooltip {
    -webkit-transform-origin: top right;
    transform-origin: top right;
}

.bp3-tether-element-attached-middle.bp3-tether-element-attached-left > .bp3-tooltip {
    -webkit-transform-origin: center left;
    transform-origin: center left;
}

.bp3-tether-element-attached-middle.bp3-tether-element-attached-center > .bp3-tooltip {
    -webkit-transform-origin: center center;
    transform-origin: center center;
}

.bp3-tether-element-attached-middle.bp3-tether-element-attached-right > .bp3-tooltip {
    -webkit-transform-origin: center right;
    transform-origin: center right;
}

.bp3-tether-element-attached-bottom.bp3-tether-element-attached-left > .bp3-tooltip {
    -webkit-transform-origin: bottom left;
    transform-origin: bottom left;
}

.bp3-tether-element-attached-bottom.bp3-tether-element-attached-center > .bp3-tooltip {
    -webkit-transform-origin: bottom center;
    transform-origin: bottom center;
}

.bp3-tether-element-attached-bottom.bp3-tether-element-attached-right > .bp3-tooltip {
    -webkit-transform-origin: bottom right;
    transform-origin: bottom right;
}

.bp3-tooltip .bp3-popover-content {
    background: hsl(209, 0%, 38%);
    background: var(--tooltip-background-color);
    color: hsl(209, 0%, 97%);
    color: var(--tooltip-text-color);
}

.bp3-tooltip .bp3-popover-arrow::before {
    box-shadow: 1px 1px 6px hsla(209, 0%, 9%, 0.2);
    box-shadow: 1px 1px 6px hsla(var(--black-hsl), var(--pt-drop-shadow-opacity));
}

.bp3-tooltip .bp3-popover-arrow-border {
    fill: hsl(209, 0%, 9%);
    fill: var(--black);
    fill-opacity: 0.1;
    fill-opacity: var(--pt-border-shadow-opacity);
}

.bp3-tooltip .bp3-popover-arrow-fill {
    fill: hsl(209, 0%, 38%);
    fill: var(--tooltip-background-color);
}

.bp3-popover-enter > .bp3-tooltip, .bp3-popover-appear > .bp3-tooltip {
    -webkit-transform: scale(0.8);
    transform: scale(0.8);
}

.bp3-popover-enter-active > .bp3-tooltip, .bp3-popover-appear-active > .bp3-tooltip {
    -webkit-transform: scale(1);
    transform: scale(1);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-popover-exit > .bp3-tooltip {
    -webkit-transform: scale(1);
    transform: scale(1);
}

.bp3-popover-exit-active > .bp3-tooltip {
    -webkit-transform: scale(0.8);
    transform: scale(0.8);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-tooltip .bp3-popover-content {
    padding: 10px 12px;
}

.bp3-tooltip.bp3-dark,
  .bp3-dark .bp3-tooltip {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 2px 4px hsla(209, 0%, 9%, 0.4),
  0 8px 24px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-tooltip-box-shadow);
}

.bp3-tooltip.bp3-dark .bp3-popover-content,
    .bp3-dark .bp3-tooltip .bp3-popover-content {
    background: hsl(209, 0%, 91%);
    background: var(--dark-tooltip-background-color);
    color: hsl(209, 0%, 38%);
    color: var(--dark-tooltip-text-color);
}

.bp3-tooltip.bp3-dark .bp3-popover-arrow::before,
    .bp3-dark .bp3-tooltip .bp3-popover-arrow::before {
    box-shadow: 1px 1px 6px hsla(209, 0%, 9%, 0.4);
    box-shadow: 1px 1px 6px hsla(var(--black-hsl), var(--pt-dark-drop-shadow-opacity));
}

.bp3-tooltip.bp3-dark .bp3-popover-arrow-border,
    .bp3-dark .bp3-tooltip .bp3-popover-arrow-border {
    fill: hsl(209, 0%, 9%);
    fill: var(--black);
    fill-opacity: 0.2;
    fill-opacity: var(--pt-dark-border-shadow-opacity);
}

.bp3-tooltip.bp3-dark .bp3-popover-arrow-fill,
    .bp3-dark .bp3-tooltip .bp3-popover-arrow-fill {
    fill: hsl(209, 0%, 91%);
    fill: var(--dark-tooltip-background-color);
}

.bp3-tooltip.bp3-intent-primary .bp3-popover-content {
    background: hsl(209,   90%,  50%);
    background: var(--pt-intent-primary);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-tooltip.bp3-intent-primary .bp3-popover-arrow-fill {
    fill: hsl(209,   90%,  50%);
    fill: var(--pt-intent-primary);
}

.bp3-tooltip.bp3-intent-success .bp3-popover-content {
    background: hsl(113, 100%, 34%);
    background: var(--pt-intent-success);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-tooltip.bp3-intent-success .bp3-popover-arrow-fill {
    fill: hsl(113, 100%, 34%);
    fill: var(--pt-intent-success);
}

.bp3-tooltip.bp3-intent-warning .bp3-popover-content {
    background: hsl(30, 70%, 51%);
    background: var(--pt-intent-warning);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-tooltip.bp3-intent-warning .bp3-popover-arrow-fill {
    fill: hsl(30, 70%, 51%);
    fill: var(--pt-intent-warning);
}

.bp3-tooltip.bp3-intent-danger .bp3-popover-content {
    background: hsl(0, 69%, 54%);
    background: var(--pt-intent-danger);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-tooltip.bp3-intent-danger .bp3-popover-arrow-fill {
    fill: hsl(0, 69%, 54%);
    fill: var(--pt-intent-danger);
}

.bp3-tooltip-indicator {
    border-bottom: dotted 1px;
    cursor: help;
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
Trees

Markup:
<div class="bp3-tree bp3-elevation-0">
  <ul class="bp3-tree-node-list bp3-tree-root">
    <li class="bp3-tree-node bp3-tree-node-expanded">
      <div class="bp3-tree-node-content">
        <span class="bp3-tree-node-caret bp3-tree-node-caret-open bp3-icon-standard"></span>
        <span class="bp3-tree-node-icon bp3-icon-standard bp3-icon-folder-close"></span>
        <span class="bp3-tree-node-label">Label</span>
        <span class="bp3-tree-node-secondary-label">Secondary label</span>
      </div>
      <ul class="bp3-tree-node-list">
        <li class="bp3-tree-node">
          <div class="bp3-tree-node-content">
            <span class="bp3-tree-node-caret-none bp3-icon-standard"></span>
            <span class="bp3-tree-node-icon bp3-icon-standard bp3-icon-document"></span>
          <span class="bp3-tree-node-label">A Document</span>
          </div>
        </li>
        <li class="bp3-tree-node">
          <div class="bp3-tree-node-content">
            <span class="bp3-tree-node-caret-none bp3-icon-standard"></span>
            <span class="bp3-tree-node-icon bp3-icon-standard bp3-icon-document"></span>
            <span class="bp3-tree-node-label">Another Document</span>
          </div>
        </li>
      </ul>
    </li>
  </ul>
</div>

Styleguide tree
*/
.bp3-tree .bp3-icon, .bp3-tree .bp3-icon-standard, .bp3-tree .bp3-icon-large {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
}

.bp3-tree .bp3-icon.bp3-intent-primary, .bp3-tree .bp3-icon-standard.bp3-intent-primary, .bp3-tree .bp3-icon-large.bp3-intent-primary {
    color: hsl(209,   90%,  50%);
    color: var(--pt-intent-primary);
}

.bp3-tree .bp3-icon.bp3-intent-success, .bp3-tree .bp3-icon-standard.bp3-intent-success, .bp3-tree .bp3-icon-large.bp3-intent-success {
    color: hsl(113, 100%, 34%);
    color: var(--pt-intent-success);
}

.bp3-tree .bp3-icon.bp3-intent-warning, .bp3-tree .bp3-icon-standard.bp3-intent-warning, .bp3-tree .bp3-icon-large.bp3-intent-warning {
    color: hsl(30, 70%, 51%);
    color: var(--pt-intent-warning);
}

.bp3-tree .bp3-icon.bp3-intent-danger, .bp3-tree .bp3-icon-standard.bp3-intent-danger, .bp3-tree .bp3-icon-large.bp3-intent-danger {
    color: hsl(0, 69%, 54%);
    color: var(--pt-intent-danger);
}

.bp3-tree.bp3-fixed-positioning-containing-block {
    -webkit-transform: translateY(0);
    transform: translateY(0);
}

.bp3-tree-node-list {
    list-style: none;
    margin: 0;
    padding-left: 0;
}

.bp3-tree-root {
    background-color: transparent;
    cursor: default;
    padding-left: 0;
    position: relative;
}

.bp3-tree-node-content-0 {
    padding-left: 0px;
}

.bp3-tree-node-content-1 {
    padding-left: 23px;
}

.bp3-tree-node-content-2 {
    padding-left: 46px;
}

.bp3-tree-node-content-3 {
    padding-left: 69px;
}

.bp3-tree-node-content-4 {
    padding-left: 92px;
}

.bp3-tree-node-content-5 {
    padding-left: 115px;
}

.bp3-tree-node-content-6 {
    padding-left: 138px;
}

.bp3-tree-node-content-7 {
    padding-left: 161px;
}

.bp3-tree-node-content-8 {
    padding-left: 184px;
}

.bp3-tree-node-content-9 {
    padding-left: 207px;
}

.bp3-tree-node-content-10 {
    padding-left: 230px;
}

.bp3-tree-node-content-11 {
    padding-left: 253px;
}

.bp3-tree-node-content-12 {
    padding-left: 276px;
}

.bp3-tree-node-content-13 {
    padding-left: 299px;
}

.bp3-tree-node-content-14 {
    padding-left: 322px;
}

.bp3-tree-node-content-15 {
    padding-left: 345px;
}

.bp3-tree-node-content-16 {
    padding-left: 368px;
}

.bp3-tree-node-content-17 {
    padding-left: 391px;
}

.bp3-tree-node-content-18 {
    padding-left: 414px;
}

.bp3-tree-node-content-19 {
    padding-left: 437px;
}

.bp3-tree-node-content-20 {
    padding-left: 460px;
}

.bp3-tree-node-content {
    -webkit-align-items: center;
    align-items: center;
    display: -webkit-flex;
    display: flex;
    height: 30px;
    padding-right: 5px;
    width: 100%;
}

.bp3-tree-node-content:hover {
    background-color: hsla(209, 0%, 80%, 0.4);
    background-color: hsla(var(--gray5-hsl), 0.4);
}

.bp3-tree-node-caret,
.bp3-tree-node-caret-none {
    min-width: 30px;
}

.bp3-tree-node-caret {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
    cursor: pointer;
    padding: 7px;
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
    transition: -webkit-transform 200ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: transform 200ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: transform 200ms cubic-bezier(0.4, 1, 0.75, 0.9), -webkit-transform 200ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: -webkit-transform 200ms var(--pt-transition-ease);
    transition: transform 200ms var(--pt-transition-ease);
    transition: transform 200ms var(--pt-transition-ease), -webkit-transform 200ms var(--pt-transition-ease);
}

.bp3-tree-node-caret:hover {
    color: hsl(209, 0%, 15%);
    color: var(--pt-icon-color-hover);
}

.bp3-dark .bp3-tree-node-caret {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-icon-color);
}

.bp3-dark .bp3-tree-node-caret:hover {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-icon-color-hover);
}

.bp3-tree-node-caret.bp3-tree-node-caret-open {
    -webkit-transform: rotate(90deg);
    transform: rotate(90deg);
}

.bp3-tree-node-caret.bp3-icon-standard::before {
    content: "";
}

.bp3-tree-node-icon {
    margin-right: 7px;
    position: relative;
}

.bp3-tree-node-label {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
    position: relative;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.bp3-tree-node-label span {
    display: inline;
}

.bp3-tree-node-secondary-label {
    padding: 0 5px;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.bp3-tree-node-secondary-label .bp3-popover-wrapper,
  .bp3-tree-node-secondary-label .bp3-popover-target {
    -webkit-align-items: center;
    align-items: center;
    display: -webkit-flex;
    display: flex;
}

.bp3-tree-node.bp3-disabled .bp3-tree-node-content {
    background-color: inherit;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
    cursor: not-allowed;
}

.bp3-tree-node.bp3-disabled .bp3-tree-node-caret,
.bp3-tree-node.bp3-disabled .bp3-tree-node-icon {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
    cursor: not-allowed;
}

.bp3-tree-node.bp3-tree-node-selected > .bp3-tree-node-content {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--pt-intent-primary);
}

.bp3-tree-node.bp3-tree-node-selected > .bp3-tree-node-content,
  .bp3-tree-node.bp3-tree-node-selected > .bp3-tree-node-content .bp3-icon, .bp3-tree-node.bp3-tree-node-selected > .bp3-tree-node-content .bp3-icon-standard, .bp3-tree-node.bp3-tree-node-selected > .bp3-tree-node-content .bp3-icon-large {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-tree-node.bp3-tree-node-selected > .bp3-tree-node-content .bp3-tree-node-caret::before {
    color: hsla(209, 0%, 100%, 0.7);
    color: hsla(var(--white-hsl), 0.7);
}

.bp3-tree-node.bp3-tree-node-selected > .bp3-tree-node-content .bp3-tree-node-caret:hover::before {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-dark .bp3-tree-node-content:hover {
    background-color: hsla(209, 0%, 47%, 0.3);
    background-color: hsla(var(--gray1-hsl), 0.3);
}

.bp3-dark .bp3-tree .bp3-icon, .bp3-dark .bp3-tree .bp3-icon-standard, .bp3-dark .bp3-tree .bp3-icon-large {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-icon-color);
}

.bp3-dark .bp3-tree .bp3-icon.bp3-intent-primary, .bp3-dark .bp3-tree .bp3-icon-standard.bp3-intent-primary, .bp3-dark .bp3-tree .bp3-icon-large.bp3-intent-primary {
    color: hsl(209,   90%,  50%);
    color: var(--pt-intent-primary);
}

.bp3-dark .bp3-tree .bp3-icon.bp3-intent-success, .bp3-dark .bp3-tree .bp3-icon-standard.bp3-intent-success, .bp3-dark .bp3-tree .bp3-icon-large.bp3-intent-success {
    color: hsl(113, 100%, 34%);
    color: var(--pt-intent-success);
}

.bp3-dark .bp3-tree .bp3-icon.bp3-intent-warning, .bp3-dark .bp3-tree .bp3-icon-standard.bp3-intent-warning, .bp3-dark .bp3-tree .bp3-icon-large.bp3-intent-warning {
    color: hsl(30, 70%, 51%);
    color: var(--pt-intent-warning);
}

.bp3-dark .bp3-tree .bp3-icon.bp3-intent-danger, .bp3-dark .bp3-tree .bp3-icon-standard.bp3-intent-danger, .bp3-dark .bp3-tree .bp3-icon-large.bp3-intent-danger {
    color: hsl(0, 69%, 54%);
    color: var(--pt-intent-danger);
}

.bp3-dark .bp3-tree-node.bp3-tree-node-selected > .bp3-tree-node-content {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--pt-intent-primary);
}

/*

Copyright 2015-present Palantir Technologies, Inc. All rights reserved.
Licensed under the Apache License, Version 2.0.

*/
/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/* stylelint-disable selector-class-pattern */
.bp3-datepicker {
    background: hsl(209, 0%, 100%);
    background: var(--datepicker-background-color);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    display: -webkit-flex;
    display: flex;
    padding: 5px;
    position: relative;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.bp3-datepicker .DayPicker {
    display: inline-block;
    min-width: var(--datepicker-min-width);
    position: relative;
    vertical-align: top;
}

.bp3-datepicker .DayPicker:focus {
    outline: none;
}

.bp3-datepicker .bp3-datepicker-day-wrapper {
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    padding: 7px;
}

.bp3-datepicker .DayPicker-Month {
    border-collapse: collapse;
    border-spacing: 0;
    display: inline-table;
    margin: 0 5px 5px;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.bp3-datepicker .DayPicker-Month + .bp3-datepicker .DayPicker-Month {
    margin-left: 10px;
}

.bp3-datepicker .DayPicker-Caption {
    display: table-caption;
}

.bp3-datepicker .DayPicker-Weekdays {
    display: table-header-group;
}

.bp3-datepicker .DayPicker-WeekdaysRow {
    display: table-row;
}

.bp3-datepicker .DayPicker-Weekday {
    display: table-cell;
    height: var(--datepicker-day-size);
    line-height: 1;
    text-align: center;
    vertical-align: middle;
    width: var(--datepicker-day-size);
    font-weight: 600;
    padding-top: 5px;
}

.bp3-datepicker .DayPicker-Weekday abbr[title] {
    text-decoration: none;
}

.bp3-datepicker .DayPicker-Body {
    display: table-row-group;
}

.bp3-datepicker .DayPicker-Week {
    display: table-row;
}

.bp3-datepicker .DayPicker-WeekNumber {
    display: table-cell;
    height: var(--datepicker-day-size);
    line-height: 1;
    text-align: center;
    vertical-align: middle;
    width: var(--datepicker-day-size);
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
    font-size: 14px;
}

.bp3-datepicker .DayPicker-Day {
    display: table-cell;
    height: var(--datepicker-day-size);
    line-height: 1;
    text-align: center;
    vertical-align: middle;
    width: var(--datepicker-day-size);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    cursor: pointer;
}

.bp3-datepicker .DayPicker-Day.DayPicker-Day--outside {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
}

.bp3-datepicker .DayPicker-Day.DayPicker-Day--isToday .bp3-datepicker-day-wrapper {
    border: 1px solid hsla(209, 0%, 9%, 0.15);
    border: 1px solid var(--pt-divider-black);
}

.bp3-datepicker .DayPicker-Day:hover, .bp3-datepicker .DayPicker-Day:focus {
    background: hsl(209, 0%, 87%);
    background: var(--datepicker-day-background-color-hover);
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
}

.bp3-datepicker .DayPicker-Day:active {
    background: hsl(209, 0%, 85%);
    background: var(--datepicker-day-background-color-active);
}

.bp3-datepicker .DayPicker-Day.DayPicker-Day--selected {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--pt-intent-primary);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-datepicker .DayPicker-Day.DayPicker-Day--selected:hover {
    background-color: hsl(209,   100%, 54%);
    background-color: var(--pt-intent-primary-hover);
}

.bp3-datepicker .DayPicker-Day.DayPicker-Day--disabled {
    background: none;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
    cursor: not-allowed;
}

.bp3-datepicker-navbar {
    -webkit-align-items: center;
    align-items: center;
    display: -webkit-flex;
    display: flex;
    height: 30px;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
}

.bp3-datepicker-navbar > .DayPicker-NavButton--prev {
    margin-right: auto;
}

.bp3-datepicker-navbar > .DayPicker-NavButton--next {
    margin-left: auto;
}

.bp3-datepicker-caption {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: row;
    flex-direction: row;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    margin: 0 25px 5px;
}

.bp3-datepicker-caption > * {
    -webkit-flex-grow: 0;
    flex-grow: 0;
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
}

.bp3-datepicker-caption > :first-child {
    -webkit-flex-grow: 1;
    flex-grow: 1;
    -webkit-flex-shrink: 1;
    flex-shrink: 1;
}

.bp3-datepicker-caption select {
    font-weight: 600;
    padding-left: 5px;
    padding-right: 16px;
}

.bp3-datepicker-caption select + .bp3-icon {
    right: 2px;
}

.bp3-datepicker-caption + .bp3-divider {
    margin: 0;
}

.bp3-datepicker-month-select {
    -webkit-flex-shrink: 1;
    flex-shrink: 1;
}

.bp3-datepicker-year-select {
    -webkit-flex-shrink: 1;
    flex-shrink: 1;
    min-width: 60px;
}

.bp3-datepicker-caption-measure {
    font-weight: 600;
    padding-left: 5px;
}

.bp3-datepicker-footer {
    display: -webkit-flex;
    display: flex;
    -webkit-justify-content: space-between;
    justify-content: space-between;
}

.bp3-dark .bp3-datepicker {
    background: hsl(209, 0%, 31%);
    background: var(--dark-datepicker-background-color);
}

.bp3-dark .bp3-datepicker .DayPicker-WeekNumber {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
}

.bp3-dark .bp3-datepicker .DayPicker-Day.DayPicker-Day--outside {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
}

.bp3-dark .bp3-datepicker .DayPicker-Day.DayPicker-Day--isToday .bp3-datepicker-day-wrapper {
    border: 1px solid hsla(209, 0%, 100%, 0.15);
    border: 1px solid var(--pt-dark-divider-white);
}

.bp3-dark .bp3-datepicker .DayPicker-Day:hover, .bp3-dark .bp3-datepicker .DayPicker-Day:focus {
    background: hsl(209, 0%, 47%);
    background: var(--dark-datepicker-day-background-color-hover);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-dark .bp3-datepicker .DayPicker-Day:active {
    background: hsl(209, 0%, 54%);
    background: var(--dark-datepicker-day-background-color-active);
}

.bp3-dark .bp3-datepicker .DayPicker-Day.DayPicker-Day--selected {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--pt-intent-primary);
}

.bp3-dark .bp3-datepicker .DayPicker-Day.DayPicker-Day--selected:hover {
    background-color: hsl(209,   100%, 54%);
    background-color: var(--pt-intent-primary-hover);
}

.bp3-dark .bp3-datepicker .DayPicker-Day.DayPicker-Day--disabled {
    background: none;
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
}

.bp3-dark .bp3-datepicker .bp3-datepicker-footer {
    border-top-color: hsla(209, 0%, 9%, 0.4);
    border-top-color: var(--pt-dark-divider-black);
}

.bp3-datepicker-timepicker-wrapper {
    -webkit-align-items: center;
    align-items: center;
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/* stylelint-disable selector-class-pattern */
.bp3-daterangepicker {
    display: -webkit-flex;
    display: flex;
    white-space: nowrap;
}

.bp3-daterangepicker .DayPicker-NavButton--interactionDisabled {
    display: none;
}

.bp3-daterangepicker .bp3-daterangepicker-timepickers {
    display: -webkit-flex;
    display: flex;
    -webkit-justify-content: space-around;
    justify-content: space-around;
}

.bp3-daterangepicker.bp3-daterangepicker-contiguous .DayPicker {
    min-width: var(--datepicker-min-width)10px;
}

.bp3-daterangepicker.bp3-daterangepicker-single-month .DayPicker {
    min-width: var(--datepicker-min-width);
}

.bp3-daterangepicker .DayPicker-Day {
    /* stylelint-disable max-line-length */
    /* stylelint-enable max-line-length */
}

.bp3-daterangepicker .DayPicker-Day--outside {
    visibility: hidden;
}

.bp3-daterangepicker .DayPicker-Day--hovered-range {
    border-radius: 0;
      /* stylelint-disable max-line-length */
      /* stylelint-enable max-line-length */
}

.bp3-daterangepicker .DayPicker-Day--hovered-range:not(.DayPicker-Day--selected):not(.DayPicker-Day--selected-range):not(.DayPicker-Day--selected-range-start):not(.DayPicker-Day--selected-range-end) {
    background-color: hsl(209, 0%, 94%);
    background-color: var(--light-gray4);
}

.bp3-daterangepicker .DayPicker-Day--selected-range {
    background-color: hsl(209, 0%, 94%);
    background-color: var(--light-gray4);
    border-radius: 0;
}

.bp3-daterangepicker .DayPicker-Day--selected-range:hover {
    background-color: hsl(209, 0%, 85%);
    background-color: var(--light-gray1);
}

.bp3-daterangepicker .DayPicker-Day--selected-range-start:not(.DayPicker-Day--selected-range-end):not(.DayPicker-Day--hovered-range-end) {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
}

.bp3-daterangepicker .DayPicker-Day--selected-range-end:not(.DayPicker-Day--selected-range-start):not(.DayPicker-Day--hovered-range-start) {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
}

.bp3-daterangepicker .DayPicker-Day--hovered-range-start:not(.DayPicker-Day--hovered-range-end) {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
}

.bp3-daterangepicker .DayPicker-Day--hovered-range-end:not(.DayPicker-Day--hovered-range-start) {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
}

.bp3-dark .bp3-daterangepicker .DayPicker-Day--hovered-range {
    /* stylelint-disable max-line-length */
    /* stylelint-enable max-line-length */
}

.bp3-dark .bp3-daterangepicker .DayPicker-Day--hovered-range:not(.DayPicker-Day--selected):not(.DayPicker-Day--selected-range):not(.DayPicker-Day--selected-range-start):not(.DayPicker-Day--selected-range-end) {
    background-color: hsl(209, 0%, 38%);
    background-color: var(--dark-gray5);
}

.bp3-dark .bp3-daterangepicker .DayPicker-Day--selected-range {
    background-color: hsl(209, 0%, 38%);
    background-color: var(--dark-gray5);
}

.bp3-dark .bp3-daterangepicker .DayPicker-Day--selected-range:hover {
    background-color: hsl(209, 0%, 47%);
    background-color: var(--gray1);
}

.bp3-menu.bp3-daterangepicker-shortcuts {
    min-width: 120px;
    padding: 0;
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
.bp3-timepicker {
    white-space: nowrap;
}

.bp3-timepicker .bp3-timepicker-arrow-row {
    padding: 0 1px;
}

.bp3-timepicker .bp3-timepicker-arrow-button {
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
    display: inline-block;
    padding: 4px 0;
    text-align: center;
    width: 33px;
}

.bp3-timepicker .bp3-timepicker-arrow-button:hover {
    color: hsl(209, 0%, 15%);
    color: var(--pt-icon-color-hover);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-arrow-button {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-icon-color);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-arrow-button:hover {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-icon-color-hover);
}

.bp3-timepicker .bp3-timepicker-arrow-button + .bp3-timepicker-arrow-button {
    margin-left: 11px;
}

.bp3-timepicker .bp3-timepicker-arrow-button:hover {
    cursor: pointer;
}

.bp3-timepicker .bp3-timepicker-input-row {
    background: hsl(209, 0%, 100%);
    background: var(--input-background-color);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-input-box-shadow);
    display: inline-block;
    height: 30px;
    line-height: 28px;
    padding: 0 1px;
    vertical-align: middle;
}

.bp3-timepicker .bp3-timepicker-divider-text {
    color: hsl(209, 0%, 47%);
    color: var(--pt-text-color-muted);
    display: inline-block;
    font-size: 16px;
    text-align: center;
    width: 11px;
}

.bp3-timepicker .bp3-timepicker-input {
    background: transparent;
    border: 0;
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0);
    box-shadow: 0 0 0 0 hsla(var(--input-shadow-color-focus-hsl), 0), 0 0 0 0 hsla(var(--input-shadow-color-focus-hsl), 0);
    color: hsl(209, 0%, 15%);
    color: var(--pt-text-color);
    height: 28px;
    outline: 0;
    padding: 0;
    text-align: center;
    transition: box-shadow 100ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: box-shadow 100ms var(--pt-transition-ease);
    width: 33px;
}

.bp3-timepicker .bp3-timepicker-input:focus {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3);
    box-shadow: 0 0 0 1px hsla(var(--input-shadow-color-focus-hsl), 1), 0 0 0 3px hsla(var(--input-shadow-color-focus-hsl), 0.3);
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-primary {
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209,   90%,  50%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), var(--pt-input-box-shadow);
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-primary:focus {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-primary-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-primary[readonly] {
    box-shadow: inset 0 0 0 1px hsl(209,   90%,  50%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-primary);
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-primary:disabled, .bp3-timepicker .bp3-timepicker-input.bp3-intent-primary.bp3-disabled {
    box-shadow: none;
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-primary {
    box-shadow: 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), 0 0 0 0 hsla(209,   90%,  50%, 0), inset 0 0 0 1px hsla(209,   90%,  50%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-primary-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-primary:focus {
    box-shadow: 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 1px hsla(209,   90%,  50%, 1), 0 0 0 3px hsla(209,   90%,  50%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), 0 0 0 1px hsla(var(--pt-intent-primary-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-primary-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-primary[readonly] {
    box-shadow: inset 0 0 0 1px hsl(209,   90%,  50%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-primary);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-primary:disabled, .bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-primary.bp3-disabled {
    box-shadow: none;
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-success {
    box-shadow: 0 0 0 0 hsla(113, 100%, 34%, 0), 0 0 0 0 hsla(113, 100%, 34%, 0), inset 0 0 0 1px hsla(113, 100%, 34%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), var(--pt-input-box-shadow);
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-success:focus {
    box-shadow: 0 0 0 1px hsla(113, 100%, 34%, 1), 0 0 0 3px hsla(113, 100%, 34%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-success-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-success[readonly] {
    box-shadow: inset 0 0 0 1px hsl(113, 100%, 34%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-success);
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-success:disabled, .bp3-timepicker .bp3-timepicker-input.bp3-intent-success.bp3-disabled {
    box-shadow: none;
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-success {
    box-shadow: 0 0 0 0 hsla(113, 100%, 34%, 0), 0 0 0 0 hsla(113, 100%, 34%, 0), 0 0 0 0 hsla(113, 100%, 34%, 0), inset 0 0 0 1px hsla(113, 100%, 34%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-success-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-success:focus {
    box-shadow: 0 0 0 1px hsla(113, 100%, 34%, 1), 0 0 0 1px hsla(113, 100%, 34%, 1), 0 0 0 3px hsla(113, 100%, 34%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), 0 0 0 1px hsla(var(--pt-intent-success-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-success-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-success[readonly] {
    box-shadow: inset 0 0 0 1px hsl(113, 100%, 34%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-success);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-success:disabled, .bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-success.bp3-disabled {
    box-shadow: none;
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-warning {
    box-shadow: 0 0 0 0 hsla(30, 70%, 51%, 0), 0 0 0 0 hsla(30, 70%, 51%, 0), inset 0 0 0 1px hsla(30, 70%, 51%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), var(--pt-input-box-shadow);
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-warning:focus {
    box-shadow: 0 0 0 1px hsla(30, 70%, 51%, 1), 0 0 0 3px hsla(30, 70%, 51%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-warning-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-warning[readonly] {
    box-shadow: inset 0 0 0 1px hsl(30, 70%, 51%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-warning);
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-warning:disabled, .bp3-timepicker .bp3-timepicker-input.bp3-intent-warning.bp3-disabled {
    box-shadow: none;
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-warning {
    box-shadow: 0 0 0 0 hsla(30, 70%, 51%, 0), 0 0 0 0 hsla(30, 70%, 51%, 0), 0 0 0 0 hsla(30, 70%, 51%, 0), inset 0 0 0 1px hsla(30, 70%, 51%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-warning-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-warning:focus {
    box-shadow: 0 0 0 1px hsla(30, 70%, 51%, 1), 0 0 0 1px hsla(30, 70%, 51%, 1), 0 0 0 3px hsla(30, 70%, 51%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), 0 0 0 1px hsla(var(--pt-intent-warning-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-warning-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-warning[readonly] {
    box-shadow: inset 0 0 0 1px hsl(30, 70%, 51%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-warning);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-warning:disabled, .bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-warning.bp3-disabled {
    box-shadow: none;
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-danger {
    box-shadow: 0 0 0 0 hsla(0, 69%, 54%, 0), 0 0 0 0 hsla(0, 69%, 54%, 0), inset 0 0 0 1px hsla(0, 69%, 54%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.15),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), var(--pt-input-box-shadow);
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-danger:focus {
    box-shadow: 0 0 0 1px hsla(0, 69%, 54%, 1), 0 0 0 3px hsla(0, 69%, 54%, 0.3), inset 0 1px 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-danger-hsl), 0.3), var(--input-box-shadow-focus);
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-danger[readonly] {
    box-shadow: inset 0 0 0 1px hsl(0, 69%, 54%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-danger);
}

.bp3-timepicker .bp3-timepicker-input.bp3-intent-danger:disabled, .bp3-timepicker .bp3-timepicker-input.bp3-intent-danger.bp3-disabled {
    box-shadow: none;
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-danger {
    box-shadow: 0 0 0 0 hsla(0, 69%, 54%, 0), 0 0 0 0 hsla(0, 69%, 54%, 0), 0 0 0 0 hsla(0, 69%, 54%, 0), inset 0 0 0 1px hsla(0, 69%, 54%, 1), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), 0 0 0 0 hsla(var(--pt-intent-danger-hsl), 0), inset 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-danger:focus {
    box-shadow: 0 0 0 1px hsla(0, 69%, 54%, 1), 0 0 0 1px hsla(0, 69%, 54%, 1), 0 0 0 3px hsla(0, 69%, 54%, 0.3), inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), 0 0 0 1px hsla(var(--pt-intent-danger-hsl), 1), 0 0 0 3px hsla(var(--pt-intent-danger-hsl), 0.3), var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-danger[readonly] {
    box-shadow: inset 0 0 0 1px hsl(0, 69%, 54%);
    box-shadow: inset 0 0 0 1px var(--pt-intent-danger);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-danger:disabled, .bp3-dark .bp3-timepicker .bp3-timepicker-input.bp3-intent-danger.bp3-disabled {
    box-shadow: none;
}

.bp3-timepicker .bp3-timepicker-ampm-select {
    margin-left: 5px;
}

.bp3-timepicker.bp3-disabled .bp3-timepicker-input-row {
    background: hsla(209, 0%, 85%, 0.5);
    background: var(--input-background-color-disabled);
    box-shadow: none;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-color-disabled);
    cursor: not-allowed;
    resize: none;
}

.bp3-timepicker.bp3-disabled .bp3-timepicker-input,
  .bp3-timepicker.bp3-disabled .bp3-timepicker-divider-text {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-color-disabled);
    cursor: not-allowed;
}

.bp3-timepicker.bp3-disabled .bp3-timepicker-arrow-button,
  .bp3-timepicker.bp3-disabled .bp3-timepicker-arrow-button:hover {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--input-color-disabled);
    cursor: not-allowed;
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input-row {
    background: hsla(209, 0%, 9%, 0.3);
    background: var(--dark-input-background-color);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.3),
  inset 0 1px 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-input-box-shadow);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-divider-text {
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-text-color-muted);
}

.bp3-dark .bp3-timepicker .bp3-timepicker-input {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-text-color);
}

.bp3-datepicker .bp3-timepicker {
    margin-bottom: 10px;
    margin-top: 5px;
}

.bp3-datepicker .bp3-timepicker:last-child {
    margin-bottom: 5px;
}

/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 */
.bp3-datetimepicker {
    background-color: hsl(209, 0%, 100%);
    background-color: var(--white);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    padding: 10px;
    text-align: center;
}

.bp3-dark .bp3-datetimepicker {
    background: hsl(209, 0%, 31%);
    background: var(--dark-gray4);
}

.bp3-dark .bp3-datetimepicker .bp3-datepicker {
    border-bottom: 1px solid hsla(209, 0%, 9%, 0.4);
    border-bottom: 1px solid var(--pt-dark-divider-black);
}

.bp3-datetimepicker .bp3-datepicker {
    border-bottom: 1px solid hsla(209, 0%, 9%, 0.15);
    border-bottom: 1px solid var(--pt-divider-black);
    padding: 0 0 10px;
}

.bp3-datetimepicker .bp3-timepicker {
    margin-top: 10px;
}

.bp3-dateinput-popover {
    padding: 0;
}

/*

Copyright 2017-present Palantir Technologies, Inc. All rights reserved.
Licensed under the Apache License, Version 2.0.

*/
/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-omnibar {
    -webkit-filter: blur(0);
    filter: blur(0);
    opacity: 1;
    background-color: hsl(209, 0%, 100%);
    background-color: var(--white);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 4px 8px hsla(209, 0%, 9%, 0.2),
  0 18px 46px 6px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-elevation-shadow-4);
    left: calc(50% - 250px);
    top: 20vh;
    width: 500px;
    z-index: 21;
}

.bp3-omnibar.bp3-overlay-enter, .bp3-omnibar.bp3-overlay-appear {
    -webkit-filter: blur(20px);
    filter: blur(20px);
    opacity: 0.2;
}

.bp3-omnibar.bp3-overlay-enter-active, .bp3-omnibar.bp3-overlay-appear-active {
    -webkit-filter: blur(0);
    filter: blur(0);
    opacity: 1;
    transition-delay: 0;
    transition-duration: 200ms;
    transition-property: opacity, -webkit-filter;
    transition-property: filter, opacity;
    transition-property: filter, opacity, -webkit-filter;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-omnibar.bp3-overlay-exit {
    -webkit-filter: blur(0);
    filter: blur(0);
    opacity: 1;
}

.bp3-omnibar.bp3-overlay-exit-active {
    -webkit-filter: blur(20px);
    filter: blur(20px);
    opacity: 0.2;
    transition-delay: 0;
    transition-duration: 200ms;
    transition-property: opacity, -webkit-filter;
    transition-property: filter, opacity;
    transition-property: filter, opacity, -webkit-filter;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-omnibar .bp3-input {
    background-color: transparent;
    border-radius: 0;
}

.bp3-omnibar .bp3-input, .bp3-omnibar .bp3-input:focus {
    box-shadow: none;
}

.bp3-omnibar .bp3-menu {
    background-color: transparent;
    border-radius: 0;
    box-shadow: inset 0 1px 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 1px 0 var(--pt-divider-black);
    max-height: calc(60vh - 40px);
    overflow: auto;
}

.bp3-omnibar .bp3-menu:empty {
    display: none;
}

.bp3-dark .bp3-omnibar, .bp3-omnibar.bp3-dark {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-gray4);
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 4px 8px hsla(209, 0%, 9%, 0.4),
  0 18px 46px 6px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-elevation-shadow-4);
}

.bp3-omnibar-overlay .bp3-overlay-backdrop {
    background-color: hsla(209, 0%, 9%, 0.2);
    background-color: hsla(var(--black-hsl), 0.2);
}

.bp3-select-popover .bp3-popover-content {
    padding: 5px;
}

.bp3-select-popover .bp3-input-group {
    margin-bottom: 0;
}

.bp3-select-popover .bp3-menu {
    max-height: 300px;
    max-width: 400px;
    overflow: auto;
    padding: 0;
}

.bp3-select-popover .bp3-menu:not(:first-child) {
    padding-top: 5px;
}

.bp3-multi-select {
    min-width: 150px;
}

.bp3-multi-select-popover .bp3-menu {
    max-height: 300px;
    max-width: 400px;
    overflow: auto;
}

.bp3-select-popover .bp3-popover-content {
    padding: 5px;
}

.bp3-select-popover .bp3-input-group {
    margin-bottom: 0;
}

.bp3-select-popover .bp3-menu {
    max-height: 300px;
    max-width: 400px;
    overflow: auto;
    padding: 0;
}

.bp3-select-popover .bp3-menu:not(:first-child) {
    padding-top: 5px;
}

/*

Copyright 2016-present Palantir Technologies, Inc. All rights reserved.
Licensed under the Apache License, Version 2.0.

*/
/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
@-webkit-keyframes skeleton-fade-in {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

@keyframes skeleton-fade-in {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
@keyframes skeleton-fade-in {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
.bp3-table-cell {
    display: inline-block;
    font-size: 12px;
    height: 20px;
    line-height: 20px;
    padding: 0 10px;
    transition: color 300ms;
}

.bp3-dark .bp3-table-cell:not([class*="bp3-intent-"]):not(.bp3-loading) {
    color: hsl(209, 0%, 97%);
    color: var(--dark-cell-text-color);
}

.bp3-table-cell.bp3-intent-primary {
    background-color: hsla(209,   90%,  50%, 0.1);
    background-color: hsla(var(--pt-intent-primary-hsl), var(--cell-background-color-opacity));
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-dark .bp3-table-cell.bp3-intent-primary {
    background: hsla(209,   90%,  50%, 0.1);
    background: hsla(var(--pt-intent-primary-hsl), var(--cell-background-color-opacity));
    color: hsl(209,   100%, 59%);
    color: var(--pt-dark-intent-primary-text-color);
}

.bp3-table-cell.bp3-intent-success {
    background-color: hsla(113, 100%, 34%, 0.1);
    background-color: hsla(var(--pt-intent-success-hsl), var(--cell-background-color-opacity));
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-dark .bp3-table-cell.bp3-intent-success {
    background: hsla(113, 100%, 34%, 0.1);
    background: hsla(var(--pt-intent-success-hsl), var(--cell-background-color-opacity));
    color: hsl(113, 57%,  57%);
    color: var(--pt-dark-intent-success-text-color);
}

.bp3-table-cell.bp3-intent-warning {
    background-color: hsla(30, 70%, 51%, 0.1);
    background-color: hsla(var(--pt-intent-warning-hsl), var(--cell-background-color-opacity));
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-dark .bp3-table-cell.bp3-intent-warning {
    background: hsla(30, 70%, 51%, 0.1);
    background: hsla(var(--pt-intent-warning-hsl), var(--cell-background-color-opacity));
    color: hsl(30, 100%, 70%);
    color: var(--pt-dark-intent-warning-text-color);
}

.bp3-table-cell.bp3-intent-danger {
    background-color: hsla(0, 69%, 54%, 0.1);
    background-color: hsla(var(--pt-intent-danger-hsl), var(--cell-background-color-opacity));
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-dark .bp3-table-cell.bp3-intent-danger {
    background: hsla(0, 69%, 54%, 0.1);
    background: hsla(var(--pt-intent-danger-hsl), var(--cell-background-color-opacity));
    color: hsl(0, 100%, 73%);
    color: var(--pt-dark-intent-danger-text-color);
}

.bp3-table-editing-enabled .bp3-table-cell {
    cursor: text;
}

.bp3-table-selection-enabled .bp3-table-cell {
    cursor: cell;
}

.bp3-table-cell.bp3-table-truncated-cell {
    overflow: hidden;
}

.bp3-table-cell.bp3-large,
  .bp3-large .bp3-table-cell {
    font-size: 14px;
    height: 30px;
    line-height: 30px;
}

.bp3-table-cell.bp3-loading {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
    -webkit-justify-content: center;
    justify-content: center;
    color: transparent;
}

.bp3-table-cell:focus {
    outline: none;
}

.bp3-table-cell-interactive {
    z-index: 21;
}

.bp3-table-striped .bp3-table-cell-ledger-even {
    background-color: hsl(209, 0%, 100%);
    background-color: var(--cell-background-color);
}

.bp3-table-striped .bp3-table-cell-ledger-odd {
    background-color: hsl(209, 0%, 97%);
    background-color: var(--table-background-color);
}

.bp3-dark .bp3-table-striped .bp3-table-cell-ledger-even {
    background-color: hsl(209, 0%, 25%);
    background-color: var(--dark-cell-background-color);
}

.bp3-dark .bp3-table-striped .bp3-table-cell-ledger-odd {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-table-background-color);
}

.bp3-table-editable-name input {
    height: 20px;
}

.bp3-table-editable-text {
    bottom: 0;
    left: 0;
    padding: 0 10px;
    position: absolute;
    right: 0;
    top: 0;
}

/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
.bp3-table-null {
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
}

.bp3-table-truncated-value {
    left: 10px;
    max-height: 100%;
    overflow: hidden;
    position: absolute;
    right: 35px;
    text-overflow: ellipsis;
    top: 0;
}

.bp3-table-truncated-format-text {
    left: 10px;
    max-height: 100%;
    overflow: hidden;
    position: absolute;
    right: 10px;
    text-overflow: ellipsis;
    top: 0;
}

.bp3-table-truncated-popover-target {
    border-radius: 3px;
    bottom: 0;
    cursor: pointer;
    opacity: 0.3;
    padding: 0 5px;
    position: absolute;
    right: 5px;
    text-align: center;
    top: 0;
}

.bp3-table-truncated-popover-target .bp3-icon-standard {
    line-height: 20px;
}

.bp3-table-truncated-popover-target.bp3-popover-open {
    opacity: 1;
}

.bp3-table-truncated-popover-target.bp3-popover-open .bp3-icon-standard {
    color: hsl(209,   90%,  50%);
    color: var(--pt-intent-primary);
}

.bp3-table-truncated-popover-target:hover {
    opacity: 1;
}

.bp3-table-truncated-popover {
    font-family: Consolas,
  Menlo,
  monospace;
    font-family: var(--pt-font-family-monospace);
    max-height: 300px;
    max-width: 600px;
    min-width: 200px;
    overflow: auto;
    padding: 10px 10px;
}

.bp3-table-popover-whitespace-pre {
    white-space: pre;
}

.bp3-table-popover-whitespace-normal {
    white-space: normal;
}

/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
/*
We use box shadows instead of borders since it makes the size and position
calculations much more well-behaved. This mixin allows us to define the themes
for all borders with minimal duplication. See the bottom of this file.
*/
.bp3-table-container {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.15);
    box-shadow: 0 0 0 1px var(--cell-border-color);
}

.bp3-table-menu {
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.15), 1px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: 0 1px 0 var(--cell-border-color), 1px 0 0 var(--cell-border-color);
}

.bp3-table-header {
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: 0 1px 0 var(--cell-border-color);
}

.bp3-table-cell {
    box-shadow: inset 0 -1px 0 hsla(209, 0%, 9%, 0.15), inset -1px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 -1px 0 var(--cell-border-color), inset -1px 0 0 var(--cell-border-color);
}

.bp3-table-horizontal-cell-divider {
    box-shadow: inset 0 1px 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 1px 0 var(--cell-border-color);
    height: 1px;
}

.bp3-table-column-headers .bp3-table-header {
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.15), inset -1px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: 0 1px 0 var(--cell-border-color), inset -1px 0 0 var(--cell-border-color);
}

.bp3-table-column-headers .bp3-table-header::before {
    bottom: 0;
    right: 1px;
}

.bp3-table-row-headers .bp3-table-header {
    box-shadow: inset 0 -1px 0 hsla(209, 0%, 9%, 0.15), 1px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 -1px 0 var(--cell-border-color), 1px 0 0 var(--cell-border-color);
}

.bp3-table-row-headers .bp3-table-header::before {
    bottom: 1px;
    right: 0;
}

.bp3-table-body .bp3-table-last-in-row {
    box-shadow: inset 0 -1px 0 hsla(209, 0%, 9%, 0.15), 1px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 -1px 0 var(--cell-border-color), 1px 0 0 var(--cell-border-color);
}

.bp3-table-body .bp3-table-last-in-column {
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.15), inset -1px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: 0 1px 0 var(--cell-border-color), inset -1px 0 0 var(--cell-border-color);
}

.bp3-table-body .bp3-table-last-in-row.bp3-table-last-in-column {
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.15), 1px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: 0 1px 0 var(--cell-border-color), 1px 0 0 var(--cell-border-color);
}

.bp3-table-quadrant-top-left .bp3-table-cell.bp3-table-last-in-row {
    box-shadow: inset 0 -1px 0 hsla(209, 0%, 9%, 0.15), inset -3px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 -1px 0 var(--cell-border-color), inset -3px 0 0 var(--cell-border-color);
}

.bp3-table-quadrant-top-left .bp3-table-cell.bp3-table-last-in-column {
    box-shadow: inset 0 -3px 0 hsla(209, 0%, 9%, 0.15), inset -1px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 -3px 0 var(--cell-border-color), inset -1px 0 0 var(--cell-border-color);
}

.bp3-table-quadrant-top-left .bp3-table-cell.bp3-table-last-in-column.bp3-table-last-in-row {
    box-shadow: inset 0 -3px 0 hsla(209, 0%, 9%, 0.15), inset -3px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 -3px 0 var(--cell-border-color), inset -3px 0 0 var(--cell-border-color);
}

.bp3-table-quadrant-top-left .bp3-table-header.bp3-table-last-in-row {
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.15), inset -3px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: 0 1px 0 var(--cell-border-color), inset -3px 0 0 var(--cell-border-color);
}

.bp3-table-quadrant-top-left .bp3-table-header.bp3-table-last-in-row::before {
    bottom: 0;
    right: 3px;
}

.bp3-table-quadrant-top-left .bp3-table-header.bp3-table-last-in-column {
    box-shadow: inset 0 -3px 0 hsla(209, 0%, 9%, 0.15), 1px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 -3px 0 var(--cell-border-color), 1px 0 0 var(--cell-border-color);
}

.bp3-table-quadrant-top-left .bp3-table-header.bp3-table-last-in-column::before {
    bottom: 3px;
    right: 0;
}

.bp3-table-quadrant-left .bp3-table-cell.bp3-table-last-in-row {
    box-shadow: inset 0 -1px 0 hsla(209, 0%, 9%, 0.15), inset -3px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 -1px 0 var(--cell-border-color), inset -3px 0 0 var(--cell-border-color);
}

.bp3-table-quadrant-top .bp3-table-cell.bp3-table-last-in-column {
    box-shadow: inset 0 -3px 0 hsla(209, 0%, 9%, 0.15), inset -1px 0 0 hsla(209, 0%, 9%, 0.15);
    box-shadow: inset 0 -3px 0 var(--cell-border-color), inset -1px 0 0 var(--cell-border-color);
}

.bp3-dark .bp3-table-container {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 0 0 1px var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-menu {
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.4), 1px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 1px 0 var(--dark-cell-border-color), 1px 0 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-header {
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 1px 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-cell {
    box-shadow: inset 0 -1px 0 hsla(209, 0%, 9%, 0.4), inset -1px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 -1px 0 var(--dark-cell-border-color), inset -1px 0 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-horizontal-cell-divider {
    box-shadow: inset 0 1px 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 1px 0 var(--dark-cell-border-color);
    height: 1px;
}

.bp3-dark .bp3-table-column-headers .bp3-table-header {
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.4), inset -1px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 1px 0 var(--dark-cell-border-color), inset -1px 0 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-column-headers .bp3-table-header::before {
    bottom: 0;
    right: 1px;
}

.bp3-dark .bp3-table-row-headers .bp3-table-header {
    box-shadow: inset 0 -1px 0 hsla(209, 0%, 9%, 0.4), 1px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 -1px 0 var(--dark-cell-border-color), 1px 0 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-row-headers .bp3-table-header::before {
    bottom: 1px;
    right: 0;
}

.bp3-dark .bp3-table-body .bp3-table-last-in-row {
    box-shadow: inset 0 -1px 0 hsla(209, 0%, 9%, 0.4), 1px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 -1px 0 var(--dark-cell-border-color), 1px 0 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-body .bp3-table-last-in-column {
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.4), inset -1px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 1px 0 var(--dark-cell-border-color), inset -1px 0 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-body .bp3-table-last-in-row.bp3-table-last-in-column {
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.4), 1px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 1px 0 var(--dark-cell-border-color), 1px 0 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-quadrant-top-left .bp3-table-cell.bp3-table-last-in-row {
    box-shadow: inset 0 -1px 0 hsla(209, 0%, 9%, 0.4), inset -3px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 -1px 0 var(--dark-cell-border-color), inset -3px 0 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-quadrant-top-left .bp3-table-cell.bp3-table-last-in-column {
    box-shadow: inset 0 -3px 0 hsla(209, 0%, 9%, 0.4), inset -1px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 -3px 0 var(--dark-cell-border-color), inset -1px 0 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-quadrant-top-left .bp3-table-cell.bp3-table-last-in-column.bp3-table-last-in-row {
    box-shadow: inset 0 -3px 0 hsla(209, 0%, 9%, 0.4), inset -3px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 -3px 0 var(--dark-cell-border-color), inset -3px 0 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-quadrant-top-left .bp3-table-header.bp3-table-last-in-row {
    box-shadow: 0 1px 0 hsla(209, 0%, 9%, 0.4), inset -3px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: 0 1px 0 var(--dark-cell-border-color), inset -3px 0 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-quadrant-top-left .bp3-table-header.bp3-table-last-in-row::before {
    bottom: 0;
    right: 3px;
}

.bp3-dark .bp3-table-quadrant-top-left .bp3-table-header.bp3-table-last-in-column {
    box-shadow: inset 0 -3px 0 hsla(209, 0%, 9%, 0.4), 1px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 -3px 0 var(--dark-cell-border-color), 1px 0 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-quadrant-top-left .bp3-table-header.bp3-table-last-in-column::before {
    bottom: 3px;
    right: 0;
}

.bp3-dark .bp3-table-quadrant-left .bp3-table-cell.bp3-table-last-in-row {
    box-shadow: inset 0 -1px 0 hsla(209, 0%, 9%, 0.4), inset -3px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 -1px 0 var(--dark-cell-border-color), inset -3px 0 0 var(--dark-cell-border-color);
}

.bp3-dark .bp3-table-quadrant-top .bp3-table-cell.bp3-table-last-in-column {
    box-shadow: inset 0 -3px 0 hsla(209, 0%, 9%, 0.4), inset -1px 0 0 hsla(209, 0%, 9%, 0.4);
    box-shadow: inset 0 -3px 0 var(--dark-cell-border-color), inset -1px 0 0 var(--dark-cell-border-color);
}

/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
@keyframes skeleton-fade-in {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
.bp3-table-header {
    -webkit-align-items: flex-start;
    align-items: flex-start;
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
    -webkit-justify-content: space-between;
    justify-content: space-between;
    position: relative;
    text-overflow: ellipsis;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.bp3-table-header::before {
    content: "";
    display: block;
    left: 0;
    position: absolute;
    top: 0;
}

.bp3-table-header .bp3-table-row-name,
  .bp3-table-header .bp3-table-column-name,
  .bp3-table-header .bp3-table-header-content {
    position: relative;
    width: 100%;
}

.bp3-table-selection-enabled .bp3-table-header:hover::before, .bp3-table-header.bp3-table-header-active::before {
    background-color: hsl(209, 0%, 91%);
    background-color: var(--header-hover-background-color);
}

.bp3-dark .bp3-table-selection-enabled .bp3-table-header:hover::before, .bp3-dark .bp3-table-header.bp3-table-header-active::before {
    background-color: hsl(209, 0%, 38%);
    background-color: var(--dark-header-hover-background-color);
}

.bp3-table-header.bp3-table-header-selected::before {
    background-image: linear-gradient(90deg, hsla(209,   90%,  50%, 0.1), hsla(209,   90%,  50%, 0.1));
    background-image: linear-gradient(90deg, hsla(var(--header-selected-background-color-hsl), 0.1), hsla(var(--header-selected-background-color-hsl), 0.1));
}

.bp3-table-th-menu-container {
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
    opacity: 0;
    position: absolute;
    right: 1px;
    text-align: right;
}

.bp3-table-header:hover .bp3-table-th-menu-container,
  .bp3-table-header-active .bp3-table-th-menu-container, .bp3-table-th-menu-container.bp3-table-th-menu-open {
    opacity: 1;
}

.bp3-table-interaction-bar .bp3-table-th-menu-container {
    line-height: 20px;
}

.bp3-table-th-menu-container-background {
    height: 30px;
    pointer-events: none;
    position: absolute;
    right: 0;
    top: 0;
    width: 50px;
}

.bp3-table-interaction-bar .bp3-table-th-menu-container-background {
    height: 20px;
}

.bp3-table-th-menu-open .bp3-table-th-menu-container-background {
    background-image: linear-gradient(90deg, hsla(209, 0%, 97%, 0) 0%, hsla(209, 0%, 97%, 1) 50%);
    background-image: linear-gradient(90deg, hsla(var(--header-background-color-hsl), 0) 0%, hsla(var(--header-background-color-hsl), 1) 50%);
}

.bp3-dark .bp3-table-th-menu-open .bp3-table-th-menu-container-background {
    background-image: linear-gradient(90deg, hsla(var(--pt-dark-app-top-background-color-hsl), 0) 0%, hsla(var(--pt-dark-app-top-background-color-hsl), 1) 50%);
    background-image: linear-gradient(90deg, hsla(var(--dark-header-background-color-hsl), 0) 0%, hsla(var(--dark-header-background-color-hsl), 1) 50%);
}

.bp3-table-header:hover .bp3-table-th-menu-container-background,
  .bp3-table-header-active .bp3-table-th-menu-container-background,
  .bp3-table-th-menu-open .bp3-table-th-menu-container-background {
    background-image: linear-gradient(90deg, hsla(209, 0%, 97%, 0) 0%, hsla(209, 0%, 97%, 1) 50%);
    background-image: linear-gradient(90deg, hsla(var(--header-background-color-hsl), 0) 0%, hsla(var(--header-background-color-hsl), 1) 50%);
}

.bp3-dark .bp3-table-header:hover .bp3-table-th-menu-container-background, .bp3-dark
    .bp3-table-header-active .bp3-table-th-menu-container-background, .bp3-dark
    .bp3-table-th-menu-open .bp3-table-th-menu-container-background {
    background-image: linear-gradient(90deg, hsla(var(--pt-dark-app-top-background-color-hsl), 0) 0%, hsla(var(--pt-dark-app-top-background-color-hsl), 1) 50%);
    background-image: linear-gradient(90deg, hsla(var(--dark-header-background-color-hsl), 0) 0%, hsla(var(--dark-header-background-color-hsl), 1) 50%);
}

.bp3-table-selection-enabled .bp3-table-header:hover .bp3-table-th-menu-container-background,
  .bp3-table-selection-enabled .bp3-table-header-active .bp3-table-th-menu-container-background {
    background-image: linear-gradient(90deg, hsla(209, 0%, 91%, 0) 0%, hsla(209, 0%, 91%, 1) 50%);
    background-image: linear-gradient(90deg, hsla(var(--header-hover-background-color-hsl), 0) 0%, hsla(var(--header-hover-background-color-hsl), 1) 50%);
}

.bp3-dark .bp3-table-selection-enabled .bp3-table-header:hover .bp3-table-th-menu-container-background, .bp3-dark
    .bp3-table-selection-enabled .bp3-table-header-active .bp3-table-th-menu-container-background {
    background-image: linear-gradient(90deg, hsla(209, 0%, 38%, 0) 0%, hsla(209, 0%, 38%, 1) 50%);
    background-image: linear-gradient(90deg, hsla(var(--dark-header-hover-background-color-hsl), 0) 0%, hsla(var(--dark-header-hover-background-color-hsl), 1) 50%);
}

.bp3-table-selection-enabled .bp3-table-header.bp3-table-header-selected .bp3-table-th-menu-container-background {
    background-image: linear-gradient(90deg, hsla(209,   90%,  50%, 0) 0%, hsla(209,   90%,  50%, 1) 50%);
    background-image: linear-gradient(90deg, hsla(var(--header-selected-background-color-hsl), 0) 0%, hsla(var(--header-selected-background-color-hsl), 1) 50%);
}

.bp3-dark .bp3-table-selection-enabled .bp3-table-header.bp3-table-header-selected .bp3-table-th-menu-container-background {
    background-image: linear-gradient(90deg, hsla(209, 40%, 25%, 0) 0%, hsla(209, 40%, 25%, 1) 50%);
    background-image: linear-gradient(90deg, hsla(var(--dark-header-selected-background-color-hsl), 0) 0%, hsla(var(--dark-header-selected-background-color-hsl), 1) 50%);
}

.bp3-table-selection-enabled .bp3-table-header.bp3-table-header-selected:hover .bp3-table-th-menu-container-background {
    background-image: linear-gradient(90deg, hsla(209, 40%, 91%, 0) 0%, hsla(209, 40%, 91%, 1) 50%);
    background-image: linear-gradient(90deg, hsla(var(--header-selected-hover-background-color-hsl), 0) 0%, hsla(var(--header-selected-hover-background-color-hsl), 1) 50%);
}

.bp3-dark .bp3-table-selection-enabled .bp3-table-header.bp3-table-header-selected:hover .bp3-table-th-menu-container-background {
    background-image: linear-gradient(90deg, hsla(209, 40%, 29%, 0) 0%, hsla(209, 40%, 29%, 1) 50%);
    background-image: linear-gradient(90deg, hsla(var(--dark-header-selected-hover-background-color-hsl), 0) 0%, hsla(var(--dark-header-selected-hover-background-color-hsl), 1) 50%);
}

.bp3-table-th-menu {
    cursor: pointer;
    height: 30px;
    position: relative;
    width: 30px;
}

.bp3-table-interaction-bar .bp3-table-th-menu {
    height: 20px;
    right: 1px;
    text-align: center;
    width: 20px;
}

.bp3-table-interaction-bar .bp3-table-th-menu .bp3-icon {
    margin: 2px;
    margin-left: 3px;
    vertical-align: top;
}

.bp3-table-th-menu .bp3-icon {
    background-color: hsl(209, 0%, 97%);
    background-color: var(--header-background-color);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, 0.2);
    box-shadow: inset 0 0 0 1px hsla(var(--black-hsl), var(--pt-drop-shadow-opacity));
    color: hsl(209, 0%, 47%);
    color: var(--pt-icon-color);
    margin-right: 7px;
    margin-top: 7px;
    /* stylelint-disable-next-line selector-max-compound-selectors,max-line-length */
}

.bp3-table-selection-enabled .bp3-table-th-menu .bp3-icon {
    background-color: hsl(209, 0%, 91%);
    background-color: var(--header-hover-background-color);
}

.bp3-table-selection-enabled .bp3-table-header.bp3-table-header-selected .bp3-table-th-menu .bp3-icon {
    background-color: linear-gradient(90deg, hsla(209,   90%,  50%, 0) 0%, hsla(209,   90%,  50%, 1) 50%);
    background-color: linear-gradient(90deg, hsla(var(--header-selected-background-color-hsl), 0) 0%, hsla(var(--header-selected-background-color-hsl), 1) 50%);
}

.bp3-dark .bp3-table-th-menu .bp3-icon {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-header-background-color);
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 100%, 0.2);
    box-shadow: inset 0 0 0 1px hsla(var(--white-hsl), var(--pt-drop-shadow-opacity));
    color: hsl(209, 0%, 73%);
    color: var(--pt-dark-icon-color);
}

.bp3-dark .bp3-table-selection-enabled .bp3-table-th-menu .bp3-icon {
    background-color: hsl(209, 0%, 38%);
    background-color: var(--dark-header-hover-background-color);
}

.bp3-dark .bp3-table-selection-enabled .bp3-table-header.bp3-table-header-selected .bp3-table-th-menu .bp3-icon {
    background-color: linear-gradient(90deg, hsla(209, 40%, 25%, 0) 0%, hsla(209, 40%, 25%, 1) 50%);
    background-color: linear-gradient(90deg, hsla(var(--dark-header-selected-background-color-hsl), 0) 0%, hsla(var(--dark-header-selected-background-color-hsl), 1) 50%);
}

.bp3-table-th-menu:hover .bp3-icon {
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 9%, calc(0.2 * 2));
    box-shadow: inset 0 0 0 1px hsla(var(--black-hsl), calc(var(--pt-drop-shadow-opacity) * 2));
    color: hsl(209, 0%, 15%);
    color: var(--pt-icon-color-hover);
}

.bp3-dark .bp3-table-th-menu:hover .bp3-icon {
    box-shadow: inset 0 0 0 1px hsla(209, 0%, 100%, calc(0.2 * 2));
    box-shadow: inset 0 0 0 1px hsla(var(--white-hsl), calc(var(--pt-drop-shadow-opacity) * 2));
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-icon-color-hover);
}

.bp3-table-th-menu.bp3-popover-open .bp3-icon {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--pt-icon-color-selected);
    box-shadow: none;
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-dark .bp3-table-th-menu.bp3-popover-open .bp3-icon {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--pt-dark-icon-color-selected);
    box-shadow: none;
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-table-thead {
    display: block;
    white-space: nowrap;
}

.bp3-table-column-header-tr {
    display: -webkit-flex;
    display: flex;
}

.bp3-table-column-header-tr .bp3-table-header {
    -webkit-flex: 0 0;
    flex: 0 0;
}

.bp3-table-column-headers .bp3-table-interaction-bar {
    height: 20px;
    position: relative;
}

.bp3-table-column-headers .bp3-table-header {
    line-height: 30px;
    min-height: 30px;
    vertical-align: top;
}

.bp3-table-row-headers .bp3-table-header {
    line-height: 20px;
    min-width: 30px;
    overflow: hidden;
}

.bp3-table-column-name-text,
.bp3-table-row-name-text {
    -webkit-flex-grow: 1;
    flex-grow: 1;
    pointer-events: none;
}

.bp3-table-truncated-text {
    max-height: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
}

.bp3-table-no-wrap-text {
    white-space: nowrap;
}

.bp3-table-column-name-text {
    padding: 0 10px;
}

.bp3-table-editable-name {
    display: block;
    pointer-events: all;
}

.bp3-table-editable-name.bp3-editable-text::before {
    border-radius: 0;
    bottom: 0;
    left: -11px;
    right: -10px;
    top: -1px;
}

.bp3-table-editable-name.bp3-editable-text:not(.bp3-editable-editing)::before {
    box-shadow: none;
}

.bp3-table-editable-name.bp3-editable-text.bp3-editable-editing::before {
    bottom: 1px;
    cursor: text;
    left: -10px;
    right: -9px;
    top: 0px;
}

.bp3-table-editable-name.bp3-editable-text.bp3-editable-editing.bp3-table-editable-text::before {
    left: 0px;
    right: 1px;
}

.bp3-table-column-name .bp3-table-editable-name.bp3-editable-text::before {
    bottom: -1px;
}

.bp3-table-column-name .bp3-table-editable-name.bp3-editable-text.bp3-editable-editing::before {
    bottom: 0;
}

.bp3-table-column-name-text .bp3-table-editable-name input {
    height: 30px;
}

.bp3-table-column-name {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
    font-size: 14px;
    text-align: left;
}

.bp3-table-row-name {
    display: block;
    font-size: 12px;
    padding: 0 5px;
    text-align: right;
}

.bp3-table-header-content {
    font-size: 14px;
    white-space: normal;
  /* stylelint-disable selector-class-pattern */
  /* stylelint-enable selector-class-pattern */
}

.bp3-table-header-content .is-searchable:not(.is-focused) > .Select-control {
    background: none;
    box-shadow: none;
}

.bp3-table-header-content .is-searchable > .Select-control {
    border-radius: 0;
}

.bp3-table-header-content .is-searchable > .Select-control .Select-value {
    cursor: pointer;
}

.bp3-table-header-content .Select-value {
    right: -1px;
}

.bp3-table-column-name,
.bp3-table-row-name {
    transition: color 300ms;
}

.bp3-table-header.bp3-loading {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
    -webkit-justify-content: center;
    justify-content: center;
}

.bp3-table-header.bp3-loading .bp3-table-column-name,
  .bp3-table-header.bp3-loading .bp3-table-row-name {
    -webkit-flex: 1 1;
    flex: 1 1;
}

.bp3-table-header.bp3-loading .bp3-table-column-name-text {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
    -webkit-justify-content: center;
    justify-content: center;
    padding: 10px;
}

.bp3-table-header.bp3-loading .bp3-table-column-name-text .bp3-skeleton {
    height: 8px;
}

.bp3-table-header.bp3-loading .bp3-table-row-name {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
    -webkit-justify-content: center;
    justify-content: center;
}

/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
.bp3-table-selection-enabled.bp3-table-column-headers .bp3-table-header {
    cursor: s-resize;
}

.bp3-table-selection-enabled.bp3-table-column-headers .bp3-table-header.bp3-table-header-reorderable {
    cursor: -webkit-grab;
    cursor: grab;
}

.bp3-table-selection-enabled.bp3-table-column-headers .bp3-table-header.bp3-table-header-reorderable:active {
    cursor: -webkit-grabbing;
    cursor: grabbing;
}

.bp3-table-selection-enabled.bp3-table-column-headers .bp3-table-header.bp3-table-header-reorderable .bp3-table-interaction-bar {
    cursor: -webkit-grab;
    cursor: grab;
}

.bp3-table-selection-enabled.bp3-table-column-headers .bp3-table-header.bp3-table-header-reorderable .bp3-table-interaction-bar:active {
    cursor: -webkit-grabbing;
    cursor: grabbing;
}

.bp3-table-selection-enabled.bp3-table-row-headers .bp3-table-header {
    cursor: e-resize;
}

.bp3-table-selection-enabled.bp3-table-row-headers .bp3-table-header.bp3-table-header-reorderable {
    cursor: -webkit-grab;
    cursor: grab;
}

.bp3-table-selection-enabled.bp3-table-row-headers .bp3-table-header.bp3-table-header-reorderable:active {
    cursor: -webkit-grabbing;
    cursor: grabbing;
}

.bp3-table-selection-enabled.bp3-table-row-headers .bp3-table-header.bp3-table-header-reorderable .bp3-table-interaction-bar {
    cursor: -webkit-grab;
    cursor: grab;
}

.bp3-table-selection-enabled.bp3-table-row-headers .bp3-table-header.bp3-table-header-reorderable .bp3-table-interaction-bar:active {
    cursor: -webkit-grabbing;
    cursor: grabbing;
}

.bp3-table-selection-enabled.bp3-table-menu {
    cursor: se-resize;
}

.bp3-table-selection-enabled .bp3-editable-text::before,
.bp3-table-selection-enabled .bp3-editable-content {
    cursor: cell;
}

/* stylelint-disable-next-line max-line-length */
.bp3-table-column-header-cell.bp3-table-has-reorder-handle:not(.bp3-table-has-interaction-bar) .bp3-table-column-name-text {
    padding-left: 22px;
}

.bp3-table-column-header-cell.bp3-table-has-reorder-handle:not(.bp3-table-has-interaction-bar) .bp3-table-editable-name::before {
    left: -22px;
}

.bp3-table-reorder-handle-target {
    cursor: -webkit-grab;
    cursor: grab;
    -webkit-align-items: center;
    align-items: center;
    bottom: 0;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
    display: -webkit-flex;
    display: flex;
    -webkit-justify-content: center;
    justify-content: center;
    left: 0;
    position: absolute;
    top: 0;
    width: 22px;
}

.bp3-table-reorder-handle-target:active {
    cursor: -webkit-grabbing;
    cursor: grabbing;
}

.bp3-table-reorder-handle-target:hover {
    color: hsl(209, 0%, 15%);
    color: var(--pt-icon-color-hover);
}

.bp3-table-reorder-handle-target:active {
    color: hsl(209,   90%,  50%);
    color: var(--pt-intent-primary);
}

.bp3-dark .bp3-table-reorder-handle-target {
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
}

.bp3-dark .bp3-table-reorder-handle-target:hover {
    color: hsl(209, 0%, 97%);
    color: var(--pt-dark-icon-color-hover);
}

.bp3-dark .bp3-table-reorder-handle-target:active {
    color: hsl(209,   90%,  50%);
    color: var(--pt-intent-primary);
}

.bp3-table-reorder-handle {
    display: -webkit-flex;
    display: flex;
}

.bp3-table-resize-handle-target {
    opacity: 0;
    position: absolute;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
    z-index: 20;
}

.bp3-table-resize-handle-target:hover, .bp3-table-resize-handle-target.bp3-table-dragging {
    opacity: 1;
}

.bp3-table-resize-handle-target.bp3-table-resize-vertical {
    bottom: -1px;
    cursor: ew-resize;
    right: 0;
    top: 0;
    width: 5px;
}

.bp3-table-resize-handle-target.bp3-table-resize-horizontal {
    bottom: 0;
    cursor: ns-resize;
    height: 5px;
    left: 0;
    right: -1px;
}

.bp3-table-resize-handle {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--resize-handle-color);
    position: absolute;
    z-index: 20;
}

.bp3-table-resize-handle.bp3-table-dragging {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--resize-handle-dragging-color);
}

.bp3-table-resize-vertical .bp3-table-resize-handle {
    bottom: 0;
    left: 2px;
    top: 0;
    width: 3px;
}

.bp3-table-resize-horizontal .bp3-table-resize-handle {
    height: 3px;
    left: 0;
    right: 0;
    top: 2px;
}

.bp3-table-resize-guides .bp3-table-horizontal-guide {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--resize-handle-dragging-color);
    height: 3px;
    margin-top: -3px;
}

.bp3-table-resize-guides .bp3-table-horizontal-guide.bp3-table-horizontal-guide-flush-top {
    margin-top: 0;
}

.bp3-table-resize-guides .bp3-table-vertical-guide {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--resize-handle-dragging-color);
    margin-left: -3px;
    width: 3px;
}

.bp3-table-resize-guides .bp3-table-vertical-guide.bp3-table-vertical-guide-flush-left {
    margin-left: 0;
}

/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
.bp3-table-overlay-layer {
    bottom: 0;
    left: 0;
    overflow: hidden;
    pointer-events: none;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 20;
}

.bp3-table-overlay {
    position: absolute;
}

.bp3-table-region {
    background-color: hsla(209, 0%, 63%, 0.1);
    background-color: hsla(var(--region-default-color-hsl), 0.1);
    border: 1px solid hsl(209, 0%, 63%);
    border: 1px solid var(--region-default-color);
}

.bp3-table-selection-region {
    background-color: hsla(209,   90%,  50%, 0.1);
    background-color: hsla(var(--region-selected-color-hsl), 0.1);
    border: 1px solid hsl(209,   90%,  50%);
    border: 1px solid var(--region-selected-color);
}

.bp3-table-column-headers .bp3-table-selection-region {
    background-color: transparent;
}

.bp3-table-row-headers .bp3-table-selection-region {
    background-color: transparent;
}

.bp3-table-focus-region {
    border: 2px solid hsl(209,   90%,  50%);
    border: 2px solid var(--blue3);
}

.bp3-table-column-headers .bp3-table-region {
    border-bottom: none;
}

.bp3-table-row-headers .bp3-table-region {
    border-right: none;
}

.bp3-table-vertical-guide {
    bottom: 0;
    top: 0;
}

.bp3-table-horizontal-guide {
    left: 0;
    right: 0;
}

.bp3-table-reordering-cursor-overlay {
    cursor: -webkit-grabbing;
    cursor: grabbing;
}

.bp3-table-reordering .bp3-table-reordering-cursor-overlay {
    pointer-events: all;
}

/*
Color aliases
*/
/*
Cursors
*/
/*
Z-index layers
*/
.bp3-table-quadrant-stack {
    display: -webkit-flex;
    display: flex;
    height: 100%;
    position: relative;
}

.bp3-table-quadrant {
    background: hsl(209, 0%, 97%);
    background: var(--table-background-color);
    left: 0;
    overflow: hidden;
    position: absolute;
    top: 0;
}

.bp3-dark .bp3-table-quadrant {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-table-background-color);
}

.bp3-table-quadrant-scroll-container {
    bottom: 0;
    left: 0;
    overflow: auto;
    position: relative;
    right: 0;
    top: 0;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
    will-change: transform;
}

.bp3-table-no-vertical-scroll .bp3-table-quadrant-scroll-container {
    overflow-y: hidden;
}

.bp3-table-no-horizontal-scroll .bp3-table-quadrant-scroll-container {
    overflow-x: hidden;
}

.bp3-table-quadrant-body-container {
    position: relative;
}

.bp3-table-quadrant-main {
    height: 100%;
    left: auto;
    position: relative;
    top: auto;
    width: 100%;
    z-index: 0;
}

.bp3-table-quadrant-main .bp3-table-quadrant-scroll-container {
    height: 100%;
    width: 100%;
}

.bp3-table-quadrant-main .bp3-table-cell-client {
    background: hsl(209, 0%, 100%);
    background: var(--white);
}

.bp3-table-quadrant-top {
    right: 0;
    z-index: 1;
}

.bp3-table-quadrant-top .bp3-table-quadrant-scroll-container {
    bottom: -20px;
    overflow-y: hidden;
}

.bp3-table-quadrant-left {
    bottom: 0;
    transition: width 100ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: width 100ms var(--pt-transition-ease);
    z-index: 2;
}

.bp3-table-quadrant-left .bp3-table-quadrant-scroll-container {
    bottom: 0;
    height: auto;
    overflow-x: hidden;
    position: absolute;
    right: -20px;
    top: 0;
}

.bp3-table-quadrant-left .bp3-table-body-virtual-client {
    min-width: 1px;
}

.bp3-table-quadrant-top-left {
    transition: width 100ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: width 100ms var(--pt-transition-ease);
    z-index: 3;
}

.bp3-table-quadrant-top-left .bp3-table-quadrant-scroll-container {
    bottom: -20px;
    overflow-x: hidden;
    overflow-y: hidden;
    right: -20px;
}

.bp3-table-quadrant-top-left .bp3-table-body-virtual-client {
    min-width: 1px;
}

.bp3-table-container {
    background-color: hsl(209, 0%, 97%);
    background-color: var(--table-background-color);
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: column;
    flex-direction: column;
    height: 100%;
    max-height: 100%;
    max-width: 100%;
    min-height: 60px;
    overflow: hidden;
    will-change: transform;
}

.bp3-dark .bp3-table-container {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-table-background-color);
}

.bp3-table-container .bp3-loading {
    color: transparent;
}

.bp3-table-container .bp3-loading .bp3-skeleton {
    -webkit-animation: 300ms linear forwards skeleton-fade-in, 1000ms linear infinite alternate skeleton-glow;
    animation: 300ms linear forwards skeleton-fade-in, 1000ms linear infinite alternate skeleton-glow;
    -webkit-animation-delay: 0s, 300ms;
    animation-delay: 0s, 300ms;
    height: 5px;
    opacity: 0;
}

.bp3-table-top-container {
    display: -webkit-flex;
    display: flex;
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto;
    min-height: 0%;
}

.bp3-table-container.bp3-table-no-rows .bp3-table-top-container {
    padding-bottom: 1px;
}

.bp3-table-bottom-container {
    color: hsl(209, 0%, 15%);
    color: var(--cell-text-color);
    display: -webkit-flex;
    display: flex;
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
    height: 100%;
    min-height: 0%;
}

.bp3-dark .bp3-table-bottom-container {
    color: hsl(209, 0%, 97%);
    color: var(--dark-cell-text-color);
}

.bp3-table-menu {
    background-color: hsl(209, 0%, 97%);
    background-color: var(--header-background-color);
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto;
    position: relative;
    z-index: 13;
}

.bp3-dark .bp3-table-menu {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-header-background-color);
}

.bp3-table-column-headers {
    background-color: hsl(209, 0%, 97%);
    background-color: var(--header-background-color);
    color: hsl(209, 0%, 15%);
    color: var(--column-header-text-color);
    display: block;
    position: relative;
    z-index: 11;
}

.bp3-dark .bp3-table-column-headers {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-header-background-color);
    color: hsl(209, 0%, 97%);
    color: var(--dark-column-header-text-color);
}

.bp3-table-row-headers {
    background-color: hsl(209, 0%, 97%);
    background-color: var(--header-background-color);
    color: hsl(209, 0%, 47%);
    color: var(--row-header-text-color);
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto;
    position: relative;
    transition: width 100ms cubic-bezier(0.4, 1, 0.75, 0.9);
    transition: width 100ms var(--pt-transition-ease);
    z-index: 12;
}

.bp3-dark .bp3-table-row-headers {
    background-color: hsl(209, 0%, 31%);
    background-color: var(--dark-header-background-color);
    color: hsl(209, 0%, 73%);
    color: var(--dark-row-header-text-color);
}

.bp3-table-body {
    -webkit-flex: 1 1 100%;
    flex: 1 1 100%;
    overflow: scroll;
    position: relative;
    z-index: 10;
}

.bp3-table-body-virtual-client {
    position: relative;
}

.bp3-table-cell-client {
    background: hsl(209, 0%, 100%);
    background: var(--cell-background-color);
}

.bp3-dark .bp3-table-cell-client {
    background: hsl(209, 0%, 25%);
    background: var(--dark-cell-background-color);
}

.bp3-table-tbody {
    display: block;
    white-space: nowrap;
}

.bp3-table-cell {
    display: inline-block;
}

.bp3-table-no-layout {
    display: inline-block;
    position: absolute;
}

.bp3-table-scrollbar-measure {
    height: 100px;
    overflow: scroll;
    position: absolute;
    top: -9999px;
    width: 100px;
}

/*

Copyright 2021-present Palantir Technologies, Inc. All rights reserved.
Licensed under the Apache License, Version 2.0.

*/
/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-context-menu2 .bp3-popover2-target {
    display: block;
}

.bp3-context-menu2-popover2-target {
    position: fixed;
}

/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-popover2 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 2px 4px hsla(209, 0%, 9%, 0.2),
  0 8px 24px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-popover2-box-shadow);
    -webkit-transform: scale(1);
    transform: scale(1);
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    display: inline-block;
    z-index: 20;
}

.bp3-popover2 .bp3-popover2-arrow {
    height: 30px;
    position: absolute;
    width: 30px;
}

.bp3-popover2 .bp3-popover2-arrow::before {
    height: 20px;
    margin: 5px;
    width: 20px;
}

.bp3-popover2 .bp3-popover2-content {
    background: hsl(209, 0%, 100%);
    background: var(--pt-popover2-background-color);
    color: inherit;
}

.bp3-popover2 .bp3-popover2-arrow::before {
    box-shadow: 1px 1px 6px rgba(hsl(209, 0%, 9%), 0.2);
    box-shadow: 1px 1px 6px rgba(var(--black), var(--pt-drop-shadow-opacity));
}

.bp3-popover2 .bp3-popover2-arrow-border {
    fill: hsl(209, 0%, 9%);
    fill: var(--black);
    fill-opacity: 0.1;
    fill-opacity: var(--pt-border-shadow-opacity);
}

.bp3-popover2 .bp3-popover2-arrow-fill {
    fill: hsl(209, 0%, 100%);
    fill: var(--pt-popover2-background-color);
}

.bp3-popover2-enter > .bp3-popover2, .bp3-popover2-appear > .bp3-popover2 {
    -webkit-transform: scale(0.3);
    transform: scale(0.3);
}

.bp3-popover2-enter-active > .bp3-popover2, .bp3-popover2-appear-active > .bp3-popover2 {
    -webkit-transform: scale(1);
    transform: scale(1);
    transition-delay: 0;
    transition-duration: 300ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);
    transition-timing-function: var(--pt-transition-ease-bounce);
}

.bp3-popover2-exit > .bp3-popover2 {
    -webkit-transform: scale(1);
    transform: scale(1);
}

.bp3-popover2-exit-active > .bp3-popover2 {
    -webkit-transform: scale(0.3);
    transform: scale(0.3);
    transition-delay: 0;
    transition-duration: 300ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.54, 1.12, 0.38, 1.11);
    transition-timing-function: var(--pt-transition-ease-bounce);
}

.bp3-popover2 .bp3-popover2-content {
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    position: relative;
}

.bp3-popover2.bp3-popover2-content-sizing .bp3-popover2-content {
    max-width: 350px;
    padding: 20px;
}

.bp3-popover2-target + .bp3-overlay .bp3-popover2.bp3-popover2-content-sizing {
    width: 350px;
}

.bp3-popover2.bp3-minimal {
    margin: 0 !important;
    /* stylelint-disable-line declaration-no-important */
}

.bp3-popover2.bp3-minimal .bp3-popover2-arrow {
    display: none;
}

.bp3-popover2.bp3-minimal.bp3-popover2 {
    -webkit-transform: scale(1);
    transform: scale(1);
}

.bp3-popover2-enter > .bp3-popover2.bp3-minimal.bp3-popover2, .bp3-popover2-appear > .bp3-popover2.bp3-minimal.bp3-popover2 {
    -webkit-transform: scale(1);
    transform: scale(1);
}

.bp3-popover2-enter-active > .bp3-popover2.bp3-minimal.bp3-popover2, .bp3-popover2-appear-active > .bp3-popover2.bp3-minimal.bp3-popover2 {
    -webkit-transform: scale(1);
    transform: scale(1);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-popover2-exit > .bp3-popover2.bp3-minimal.bp3-popover2 {
    -webkit-transform: scale(1);
    transform: scale(1);
}

.bp3-popover2-exit-active > .bp3-popover2.bp3-minimal.bp3-popover2 {
    -webkit-transform: scale(1);
    transform: scale(1);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-popover2.bp3-dark,
  .bp3-dark .bp3-popover2 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 2px 4px hsla(209, 0%, 9%, 0.4),
  0 8px 24px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-popover2-box-shadow);
}

.bp3-popover2.bp3-dark .bp3-popover2-content,
    .bp3-dark .bp3-popover2 .bp3-popover2-content {
    background: hsl(209, 0%, 31%);
    background: var(--pt-dark-popover2-background-color);
    color: inherit;
}

.bp3-popover2.bp3-dark .bp3-popover2-arrow::before,
    .bp3-dark .bp3-popover2 .bp3-popover2-arrow::before {
    box-shadow: 1px 1px 6px rgba(hsl(209, 0%, 9%), 0.4);
    box-shadow: 1px 1px 6px rgba(var(--black), var(--pt-dark-drop-shadow-opacity));
}

.bp3-popover2.bp3-dark .bp3-popover2-arrow-border,
    .bp3-dark .bp3-popover2 .bp3-popover2-arrow-border {
    fill: hsl(209, 0%, 9%);
    fill: var(--black);
    fill-opacity: 0.2;
    fill-opacity: var(--pt-dark-border-shadow-opacity);
}

.bp3-popover2.bp3-dark .bp3-popover2-arrow-fill,
    .bp3-dark .bp3-popover2 .bp3-popover2-arrow-fill {
    fill: hsl(209, 0%, 31%);
    fill: var(--pt-dark-popover2-background-color);
}

.bp3-popover2-arrow::before {
    border-radius: calc(6px - 1);
    border-radius: calc(var(--pt-border-radius) - 1);
    content: "";
    display: block;
    position: absolute;
    -webkit-transform: rotate(45deg);
    transform: rotate(45deg);
}

.bp3-overlay-backdrop.bp3-popover2-backdrop {
    background: hsla(hsl(209, 0%, 100%), 0);
    background: hsla(var(--pt-app-top-background-color), 0);
}

.bp3-popover2-transition-container {
    opacity: 1;
    display: -webkit-flex;
    display: flex;
    z-index: 20;
}

.bp3-popover2-transition-container.bp3-popover2-enter, .bp3-popover2-transition-container.bp3-popover2-appear {
    opacity: 0;
}

.bp3-popover2-transition-container.bp3-popover2-enter-active, .bp3-popover2-transition-container.bp3-popover2-appear-active {
    opacity: 1;
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-popover2-transition-container.bp3-popover2-exit {
    opacity: 1;
}

.bp3-popover2-transition-container.bp3-popover2-exit-active {
    opacity: 0;
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-popover2-transition-container:focus {
    outline: none;
}

.bp3-popover2-transition-container.bp3-popover2-leave .bp3-popover2-content {
    pointer-events: none;
}

span.bp3-popover2-target {
    display: inline-block;
}

/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
.bp3-button-group:not(.bp3-minimal) > .bp3-popover2-target:not(:first-child) .bp3-button {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
}

.bp3-button-group:not(.bp3-minimal) > .bp3-popover2-target:not(:last-child) .bp3-button {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
    margin-right: -1px;
}

.bp3-button-group .bp3-popover2-target {
    display: -webkit-flex;
    display: flex;
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
}

.bp3-button-group.bp3-vertical:not(.bp3-minimal) > .bp3-popover2-target:first-child .bp3-button {
    border-radius: 6px 6px 0 0;
    border-radius: var(--pt-border-radius) var(--pt-border-radius) 0 0;
}

.bp3-button-group.bp3-vertical:not(.bp3-minimal) > .bp3-popover2-target:last-child .bp3-button {
    border-radius: 0 0 6px 6px;
    border-radius: 0 0 var(--pt-border-radius) var(--pt-border-radius);
}

.bp3-button-group.bp3-vertical:not(.bp3-minimal) > .bp3-popover2-target:not(:last-child) .bp3-button {
    margin-bottom: -1px;
}

.bp3-dark .bp3-button-group:not(.bp3-minimal) > .bp3-popover2-wrapper:not(:last-child) .bp3-button {
    margin-right: 1px;
}

.bp3-dark .bp3-button-group.bp3-vertical > .bp3-popover2-wrapper:not(:last-child) .bp3-button {
    margin-bottom: 1px;
}

/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-control-group .bp3-popover2-target {
    border-radius: inherit;
}

/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
label.bp3-label .bp3-popover2-target {
    display: block;
    margin-top: 5px;
    text-transform: none;
}

/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-submenu .bp3-popover2-target {
    display: block;
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item {
    display: -webkit-flex;
    display: flex;
    -webkit-flex-direction: row;
    flex-direction: row;
    -webkit-align-items: flex-start;
    align-items: flex-start;
    border-radius: calc(6px - 1);
    border-radius: calc(var(--pt-border-radius) - 1);
    color: inherit;
    line-height: 20px;
    padding: 5px 7px;
    text-decoration: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
    color: inherit;
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item > * {
    -webkit-flex-grow: 0;
    flex-grow: 0;
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item > .bp3-fill {
    -webkit-flex-grow: 1;
    flex-grow: 1;
    -webkit-flex-shrink: 1;
    flex-shrink: 1;
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item::before,
    .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item > * {
    margin-right: 7px;
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item:empty::before,
    .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item > :last-child {
    margin-right: 0;
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item > .bp3-fill {
    word-break: break-word;
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-menu-item {
    background-color: hsla(209, 0%, 73%, 0.3);
    background-color: var(--menu-item-color-hover);
    cursor: pointer;
    text-decoration: none;
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-disabled {
    background-color: inherit;
    color: hsla(209, 0%, 9%, 0.3);
    color: var(--pt-text-color-disabled);
    cursor: not-allowed;
}

.bp3-dark .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item {
    color: inherit;
}

.bp3-dark .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item:hover, .bp3-dark .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-menu-item {
    background-color: hsla(209, 0%, 80%, 0.3);
    background-color: var(--dark-menu-item-color-hover);
    color: inherit;
}

.bp3-dark .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-disabled {
    background-color: inherit;
    color: hsla(209, 0%, 100%, 0.3);
    color: var(--pt-dark-text-color-disabled);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary {
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary .bp3-icon {
    color: inherit;
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary .bp3-menu-item-label {
    color: hsl(209,   83%,  46%);
    color: var(--pt-intent-primary-text-color);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-primary.bp3-menu-item, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary.bp3-active {
    background-color: hsl(209,   90%,  50%);
    background-color: var(--pt-intent-primary);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary:active {
    background-color: hsl(209,   100%, 54%);
    background-color: var(--pt-intent-primary-hover);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-primary.bp3-menu-item, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary:hover::before, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-primary.bp3-menu-item::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary:hover::after, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-primary.bp3-menu-item::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary:hover .bp3-menu-item-label,
      .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-primary.bp3-menu-item .bp3-menu-item-label, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary:active, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary:active::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary:active::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary:active .bp3-menu-item-label, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary.bp3-active, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary.bp3-active::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary.bp3-active::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-primary.bp3-active .bp3-menu-item-label {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success {
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success .bp3-icon {
    color: inherit;
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success .bp3-menu-item-label {
    color: hsl(113, 100%, 29%);
    color: var(--pt-intent-success-text-color);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-success.bp3-menu-item, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success.bp3-active {
    background-color: hsl(113, 100%, 34%);
    background-color: var(--pt-intent-success);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success:active {
    background-color: hsl(113, 53%,  49%);
    background-color: var(--pt-intent-success-hover);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-success.bp3-menu-item, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success:hover::before, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-success.bp3-menu-item::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success:hover::after, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-success.bp3-menu-item::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success:hover .bp3-menu-item-label,
      .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-success.bp3-menu-item .bp3-menu-item-label, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success:active, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success:active::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success:active::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success:active .bp3-menu-item-label, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success.bp3-active, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success.bp3-active::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success.bp3-active::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-success.bp3-active .bp3-menu-item-label {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning {
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning .bp3-icon {
    color: inherit;
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning .bp3-menu-item-label {
    color: hsl(30, 67%, 45%);
    color: var(--pt-intent-warning-text-color);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-warning.bp3-menu-item, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning.bp3-active {
    background-color: hsl(30, 70%, 51%);
    background-color: var(--pt-intent-warning);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning:active {
    background-color: hsl(30, 87%, 62%);
    background-color: var(--pt-intent-warning-hover);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-warning.bp3-menu-item, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning:hover::before, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-warning.bp3-menu-item::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning:hover::after, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-warning.bp3-menu-item::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning:hover .bp3-menu-item-label,
      .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-warning.bp3-menu-item .bp3-menu-item-label, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning:active, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning:active::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning:active::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning:active .bp3-menu-item-label, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning.bp3-active, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning.bp3-active::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning.bp3-active::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-warning.bp3-active .bp3-menu-item-label {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger {
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger .bp3-icon {
    color: inherit;
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger .bp3-menu-item-label {
    color: hsl(0, 60%, 47%);
    color: var(--pt-intent-danger-text-color);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-danger.bp3-menu-item, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger.bp3-active {
    background-color: hsl(0, 69%, 54%);
    background-color: var(--pt-intent-danger);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger:active {
    background-color: hsl(0, 89%, 65%);
    background-color: var(--pt-intent-danger-hover);
}

.bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger:hover, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-danger.bp3-menu-item, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger:hover::before, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-danger.bp3-menu-item::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger:hover::after, .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-danger.bp3-menu-item::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger:hover .bp3-menu-item-label,
      .bp3-submenu .bp3-popover-target.bp3-popover-open.bp3-popover2-target.bp3-popover2-open > .bp3-intent-danger.bp3-menu-item .bp3-menu-item-label, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger:active, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger:active::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger:active::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger:active .bp3-menu-item-label, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger.bp3-active, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger.bp3-active::before, .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger.bp3-active::after,
      .bp3-submenu .bp3-popover2-target.bp3-popover2-open > .bp3-menu-item.bp3-intent-danger.bp3-active .bp3-menu-item-label {
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-submenu.bp3-popover2 {
    box-shadow: none;
    padding: 0 5px;
}

.bp3-submenu.bp3-popover2 > .bp3-popover2-content {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 2px 4px hsla(209, 0%, 9%, 0.2),
  0 8px 24px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-popover-box-shadow);
}

.bp3-dark .bp3-submenu.bp3-popover2, .bp3-submenu.bp3-popover2.bp3-dark {
    box-shadow: none;
}

.bp3-dark .bp3-submenu.bp3-popover2 > .bp3-popover2-content, .bp3-submenu.bp3-popover2.bp3-dark > .bp3-popover2-content {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 2px 4px hsla(209, 0%, 9%, 0.4),
  0 8px 24px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-popover-box-shadow);
}

/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-tree-node-secondary-label .bp3-popover2-target {
    -webkit-align-items: center;
    align-items: center;
    display: -webkit-flex;
    display: flex;
}

/*
A mixin to generate the classes for a React CSSTransition which animates any number of CSS
properties at once.

Transitioned properties are specificed as a map of property names to lists of (inital value, final
value). For enter & appear transitions, each property will transition from its initial to its final
value. For exit transitions, each property will transition in reverse, from final to initial.

**Simple example:**
`@include react-transition("popover", (opacity: 0 1), $before: "&");`
Transition named "popover" moves opacity from 0 to 1. `"&"` indicates that the
Transition classes are expected to be applied to this element, where the mixin is invoked.

**Params:**
$name: React transitionName prop
$properties: map of CSS property to (initial, final) values
$duration: transition duration
$easing: transition easing function
$delay: transition delay
$before: selector text to insert before transition name (often to select self: &)
$after: selector text to insert after transiton name (to select children)
*/
/*
A mixin to generate the classes for one phase of a React CSSTransition.
`$phase` must be `appear` or `enter` or `exit`.
If `enter` phase is given then `appear` phase will be generated at the same time.
If `exit` phase is given then property values are animated in reverse, from final to initial.

**Example:**
@include react-transition-phase(toast, enter, $enter-translate, $before: "&");
@include react-transition-phase(toast, leave, $leave-blur, $pt-transition-duration * 3, $before: "&");
*/
/*
Given map of properties to values, set each property to the value at the given index.
(remember that sass indices are 1-based).

Example: `each-prop((opacity: 0 1), 2)` will print "opacity: 1"
*/
/*
Format transition class name with all the bits.
"enter" phase will include "appear" phase in returned name.
*/
.bp3-tooltip2 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.1),
  0 2px 4px hsla(209, 0%, 9%, 0.2),
  0 8px 24px hsla(209, 0%, 9%, 0.2);
    box-shadow: var(--pt-tooltip2-box-shadow);
    -webkit-transform: scale(1);
    transform: scale(1);
}

.bp3-tooltip2 .bp3-popover2-arrow {
    height: 22px;
    position: absolute;
    width: 22px;
}

.bp3-tooltip2 .bp3-popover2-arrow::before {
    height: 14px;
    margin: 4px;
    width: 14px;
}

.bp3-tooltip2 .bp3-popover2-content {
    background: hsl(209, 0%, 38%);
    background: var(--tooltip2-background-color);
    color: hsl(209, 0%, 97%);
    color: var(--tooltip2-text-color);
}

.bp3-tooltip2 .bp3-popover2-arrow::before {
    box-shadow: 1px 1px 6px rgba(hsl(209, 0%, 9%), 0.2);
    box-shadow: 1px 1px 6px rgba(var(--black), var(--pt-drop-shadow-opacity));
}

.bp3-tooltip2 .bp3-popover2-arrow-border {
    fill: hsl(209, 0%, 9%);
    fill: var(--black);
    fill-opacity: 0.1;
    fill-opacity: var(--pt-border-shadow-opacity);
}

.bp3-tooltip2 .bp3-popover2-arrow-fill {
    fill: hsl(209, 0%, 38%);
    fill: var(--tooltip2-background-color);
}

.bp3-popover2-enter > .bp3-tooltip2, .bp3-popover2-appear > .bp3-tooltip2 {
    -webkit-transform: scale(0.8);
    transform: scale(0.8);
}

.bp3-popover2-enter-active > .bp3-tooltip2, .bp3-popover2-appear-active > .bp3-tooltip2 {
    -webkit-transform: scale(1);
    transform: scale(1);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-popover2-exit > .bp3-tooltip2 {
    -webkit-transform: scale(1);
    transform: scale(1);
}

.bp3-popover2-exit-active > .bp3-tooltip2 {
    -webkit-transform: scale(0.8);
    transform: scale(0.8);
    transition-delay: 0;
    transition-duration: 100ms;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-timing-function: cubic-bezier(0.4, 1, 0.75, 0.9);
    transition-timing-function: var(--pt-transition-ease);
}

.bp3-tooltip2 .bp3-popover2-content {
    padding: 10px 12px;
}

.bp3-tooltip2.bp3-popover2-placement-top .bp3-popover2-arrow {
    -webkit-transform: translateY(-3px);
    transform: translateY(-3px);
}

.bp3-tooltip2.bp3-popover2-placement-left .bp3-popover2-arrow {
    -webkit-transform: translateX(-3px);
    transform: translateX(-3px);
}

.bp3-tooltip2.bp3-popover2-placement-bottom .bp3-popover2-arrow {
    -webkit-transform: translateY(3px);
    transform: translateY(3px);
}

.bp3-tooltip2.bp3-popover2-placement-right .bp3-popover2-arrow {
    -webkit-transform: translateX(3px);
    transform: translateX(3px);
}

.bp3-tooltip2.bp3-dark,
  .bp3-dark .bp3-tooltip2 {
    box-shadow: 0 0 0 1px hsla(209, 0%, 9%, 0.2),
  0 2px 4px hsla(209, 0%, 9%, 0.4),
  0 8px 24px hsla(209, 0%, 9%, 0.4);
    box-shadow: var(--pt-dark-tooltip2-box-shadow);
}

.bp3-tooltip2.bp3-dark .bp3-popover2-content,
    .bp3-dark .bp3-tooltip2 .bp3-popover2-content {
    background: hsl(209, 0%, 91%);
    background: var(--dark-tooltip2-background-color);
    color: hsl(209, 0%, 38%);
    color: var(--dark-tooltip2-text-color);
}

.bp3-tooltip2.bp3-dark .bp3-popover2-arrow::before,
    .bp3-dark .bp3-tooltip2 .bp3-popover2-arrow::before {
    box-shadow: 1px 1px 6px rgba(hsl(209, 0%, 9%), 0.4);
    box-shadow: 1px 1px 6px rgba(var(--black), var(--pt-dark-drop-shadow-opacity));
}

.bp3-tooltip2.bp3-dark .bp3-popover2-arrow-border,
    .bp3-dark .bp3-tooltip2 .bp3-popover2-arrow-border {
    fill: hsl(209, 0%, 9%);
    fill: var(--black);
    fill-opacity: 0.2;
    fill-opacity: var(--pt-dark-border-shadow-opacity);
}

.bp3-tooltip2.bp3-dark .bp3-popover2-arrow-fill,
    .bp3-dark .bp3-tooltip2 .bp3-popover2-arrow-fill {
    fill: hsl(209, 0%, 91%);
    fill: var(--dark-tooltip2-background-color);
}

.bp3-tooltip2.bp3-intent-primary .bp3-popover2-content {
    background: hsl(209,   90%,  50%);
    background: var(--pt-intent-primary);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-tooltip2.bp3-intent-primary .bp3-popover2-arrow-fill {
    fill: hsl(209,   90%,  50%);
    fill: var(--pt-intent-primary);
}

.bp3-tooltip2.bp3-intent-success .bp3-popover2-content {
    background: hsl(113, 100%, 34%);
    background: var(--pt-intent-success);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-tooltip2.bp3-intent-success .bp3-popover2-arrow-fill {
    fill: hsl(113, 100%, 34%);
    fill: var(--pt-intent-success);
}

.bp3-tooltip2.bp3-intent-warning .bp3-popover2-content {
    background: hsl(30, 70%, 51%);
    background: var(--pt-intent-warning);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-tooltip2.bp3-intent-warning .bp3-popover2-arrow-fill {
    fill: hsl(30, 70%, 51%);
    fill: var(--pt-intent-warning);
}

.bp3-tooltip2.bp3-intent-danger .bp3-popover2-content {
    background: hsl(0, 69%, 54%);
    background: var(--pt-intent-danger);
    color: hsl(209, 0%, 100%);
    color: var(--white);
}

.bp3-tooltip2.bp3-intent-danger .bp3-popover2-arrow-fill {
    fill: hsl(0, 69%, 54%);
    fill: var(--pt-intent-danger);
}

.bp3-tooltip2-indicator {
    border-bottom: dotted 1px;
    cursor: help;
}

.bp3-input.bp3-round, .bp3-input[type=search] {
    border-radius: null;
    box-sizing: null;
    padding-left: null;
}

.bp3-input.bp3-round {
    border-radius: 30px;
    box-sizing: border-box;
    padding-left: 10px;
}

html {
    scrollbar-color: hsla(209, 0%, 9%, 0.3) hsl(209, 0%, 100%);
    scrollbar-color: var(--pt-text-color-disabled) var(--pt-app-top-background-color);
    color-scheme: light;
}

.bp3-dark {
    scrollbar-color: hsla(209, 0%, 100%, 0.3) hsl(209, 0%, 31%);
    scrollbar-color: var(--pt-dark-text-color-disabled) var(--pt-dark-app-top-background-color);
    color-scheme: dark;
}

:root {
  /*! ColorsHsl */
    --grayscale-hue: 209;
    --grayscale-sat: 0%;
    --black-hsl: var(--grayscale-hue), var(--grayscale-sat), 9%;
    --dark-gray1-hsl: var(--grayscale-hue), var(--grayscale-sat), 15%;
    --dark-gray2-hsl: var(--grayscale-hue), var(--grayscale-sat), 18%;
    --dark-gray3-hsl: var(--grayscale-hue), var(--grayscale-sat), 25%;
    --dark-gray4-hsl: var(--grayscale-hue), var(--grayscale-sat), 31%;
    --dark-gray5-hsl: var(--grayscale-hue), var(--grayscale-sat), 38%;
    --gray1-hsl: var(--grayscale-hue), var(--grayscale-sat), 47%;
    --gray2-hsl: var(--grayscale-hue), var(--grayscale-sat), 54%;
    --gray3-hsl: var(--grayscale-hue), var(--grayscale-sat), 63%;
    --gray4-hsl: var(--grayscale-hue), var(--grayscale-sat), 73%;
    --gray5-hsl: var(--grayscale-hue), var(--grayscale-sat), 80%;
    --light-gray1-hsl: var(--grayscale-hue), var(--grayscale-sat), 85%;
    --light-gray2-hsl: var(--grayscale-hue), var(--grayscale-sat), 87%;
    --light-gray3-hsl: var(--grayscale-hue), var(--grayscale-sat), 91%;
    --light-gray4-hsl: var(--grayscale-hue), var(--grayscale-sat), 94%;
    --light-gray5-hsl: var(--grayscale-hue), var(--grayscale-sat), 97%;
    --white-hsl: var(--grayscale-hue), var(--grayscale-sat), 100%;
    --blue-hue: 209;
    --blue1-hsl: var(--blue-hue),   83%,  38%;
    --blue2-hsl: var(--blue-hue),   83%,  46%;
    --blue3-hsl: var(--blue-hue),   90%,  50%;
    --blue4-hsl: var(--blue-hue),   100%, 54%;
    --blue5-hsl: var(--blue-hue),   100%, 59%;
    --green-hue: 113;
    --green1-hsl: var(--green-hue), 100%, 24%;
    --green2-hsl: var(--green-hue), 100%, 29%;
    --green3-hsl: var(--green-hue), 100%, 34%;
    --green4-hsl: var(--green-hue), 53%,  49%;
    --green5-hsl: var(--green-hue), 57%,  57%;
}

:root {
  /*! Variables */
    --pt-font-family: -apple-system,
  "BlinkMacSystemFont",
  "Segoe UI",
  "Roboto",
  "Oxygen",
  "Ubuntu",
  "Cantarell",
  "Open Sans",
  "Helvetica Neue",
  "Icons16",
  sans-serif;
    --pt-font-family-monospace: Consolas,
  Menlo,
  monospace;
    --pt-border-radius: 6px;
}

:root {
  /*! Components */
    --button-box-shadow: inset 0 0 0 var(--button-border-width) hsla(var(--pt-shadow-color-hsl), 0.15);
    --button-box-shadow-active: inset 0 0 0 var(--button-border-width) hsla(var(--pt-shadow-color-hsl), 0.3);
    --button-intent-box-shadow: unset;
    --button-intent-box-shadow-active: unset;
    --button-gradient: unset;
    --button-intent-gradient: unset;
    --dark-button-gradient: unset;
  /*! IntentColors */
    --pt-intent-primary-hsl: var(--blue3-hsl);
    --pt-intent-primary-hover-hsl: var(--blue4-hsl);
    --pt-intent-primary-active-hsl: var(--blue2-hsl);
    --pt-intent-success-hsl: var(--green3-hsl);
    --pt-intent-success-hover-hsl: var(--green4-hsl);
    --pt-intent-success-active-hsl: var(--green2-hsl);
    --pt-intent-warning-hsl: var(--orange3-hsl);
    --pt-intent-warning-hover-hsl: var(--orange4-hsl);
    --pt-intent-warning-active-hsl: var(--orange2-hsl);
    --pt-intent-danger-hsl: var(--red3-hsl);
    --pt-intent-danger-hover-hsl: var(--red4-hsl);
    --pt-intent-danger-active-hsl: var(--red2-hsl);
}

.bp3-button, a, a.bp3-button {
    transition: background-color 100ms linear;
}

.bp3-button:active, a:active, a.bp3-button:active {
    transition-duration: 50ms;
}

.bp3-input.bp3-round, .bp3-input[type=search] {
    border-radius: null;
    box-sizing: null;
    padding-left: null;
}

.bp3-input.bp3-round {
    border-radius: 30px;
    box-sizing: border-box;
    padding-left: 10px;
}

.bp3-button-group:not(.bp3-vertical) .bp3-button[class*=bp3-intent-] {
    border: 0 solid hsla(209, 0%, 100%, 0.25);
    border: 0 solid hsla(var(--white-hsl), 0.25);
    border-width: 0 1px;
}

.bp3-button-group:not(.bp3-vertical) .bp3-button[class*=bp3-intent-]:first-child,
  .bp3-popover-wrapper:first-child .bp3-button-group:not(.bp3-vertical) .bp3-button[class*=bp3-intent-] {
    border-left: 0;
}

.bp3-button-group:not(.bp3-vertical) .bp3-button[class*=bp3-intent-]:last-child,
  .bp3-popover-wrapper:last-child .bp3-button-group:not(.bp3-vertical) .bp3-button[class*=bp3-intent-] {
    border-right: 0;
}

.bp3-button-group.bp3-vertical .bp3-button[class*=bp3-intent-] {
    border: 0 solid hsla(209, 0%, 100%, 0.25);
    border: 0 solid hsla(var(--white-hsl), 0.25);
    border-width: 1px 0;
}

.bp3-button-group.bp3-vertical .bp3-button[class*=bp3-intent-]:first-child,
  .bp3-popover-wrapper:first-child .bp3-button-group.bp3-vertical .bp3-button[class*=bp3-intent-] {
    border-top: 0;
}

.bp3-button-group.bp3-vertical .bp3-button[class*=bp3-intent-]:last-child,
  .bp3-popover-wrapper:last-child .bp3-button-group.bp3-vertical .bp3-button[class*=bp3-intent-] {
    border-bottom: 0;
}

/* // for reference
.bp3-button-group {
  .bp3-button{
    &:not(:last-child),
    .bp3-popover-wrapper:not(:last-child) & {
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
      margin-right: -1px;
    }
  }
}
*/
.bp3-control-group .bp3-input:focus, .bp3-control-group .bp3-input.bp3-active {
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
    z-index: 14;
}

.bp3-control-group .bp3-tag-input .bp3-button {
    border-radius: 6px;
    border-radius: var(--pt-border-radius);
}
